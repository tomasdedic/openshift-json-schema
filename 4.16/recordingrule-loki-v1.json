{
  "description": "RecordingRule is the Schema for the recordingrules API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "loki.grafana.com/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "RecordingRule"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "RecordingRuleSpec defines the desired state of RecordingRule",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "tenantID"
      ],
      "properties": {
        "groups": {
          "description": "List of groups for recording rules.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "RecordingRuleGroup defines a group of Loki  recording rules.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "rules"
            ],
            "properties": {
              "interval": {
                "description": "Interval defines the time interval between evaluation of the given\nrecoding rule.",
                "type": [
                  "string",
                  "null"
                ],
                "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
              },
              "limit": {
                "description": "Limit defines the number of series a recording rule can produce. 0 is no limit.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int32"
              },
              "name": {
                "description": "Name of the recording rule group. Must be unique within all recording rules.",
                "type": "string"
              },
              "rules": {
                "description": "Rules defines a list of recording rules",
                "type": "array",
                "items": {
                  "description": "RecordingRuleGroupSpec defines the spec for a Loki recording rule.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "expr"
                  ],
                  "properties": {
                    "expr": {
                      "description": "The LogQL expression to evaluate. Every evaluation cycle this is\nevaluated at the current time, and all resultant time series become\npending/firing alerts.",
                      "type": "string"
                    },
                    "labels": {
                      "description": "Labels to add to each recording rule.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "record": {
                      "description": "The name of the time series to output to. Must be a valid metric name.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "tenantID": {
          "description": "TenantID of tenant where the recording rules are evaluated in.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "RecordingRuleStatus defines the observed state of RecordingRule",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions of the RecordingRule generation health.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "loki.grafana.com",
      "kind": "RecordingRule",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}