{
  "description": "Project is the Schema for the projects API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ops.csas.cz/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Project"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ProjectSpec defines the desired state of Project",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "environments"
      ],
      "properties": {
        "description": {
          "description": "Project human-readable description",
          "type": [
            "string",
            "null"
          ]
        },
        "egressIPs": {
          "description": "List of EgressIPs for all given project environments",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "EgressIPs for particular environment types",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "environmentTypes",
              "ips"
            ],
            "properties": {
              "environmentTypes": {
                "description": "Environment types EgressIPs are assigned to",
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "ips": {
                "description": "Multiple EgressIPs",
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "environments": {
          "description": "List of all environments for given project",
          "type": "array",
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "type"
            ],
            "properties": {
              "description": {
                "description": "Description of the Namespace, overrides project description",
                "type": [
                  "string",
                  "null"
                ]
              },
              "egressIPs": {
                "description": "For API backward compatibility only. Currently, without effect - see ProjectSpec.EgressIPs for Kubernetes-OVN \n Egress IP addresses for the namespace",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "NetNamespaceEgressIP is a single egress IP out of a list of reserved IPs used as source of external traffic coming from pods in this namespace",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
                }
              },
              "ipamName": {
                "description": "For API backward compatibility only. Currently, without effect - see ProjectSpec.EgressIPs for Kubernetes-OVN \n Egress IPAM CR Name",
                "type": [
                  "string",
                  "null"
                ]
              },
              "limits": {
                "description": "LimitRanges override for given environment - note that only given Type is overriden",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "default": {
                      "description": "Default resource requirement limit value by resource name if resource limit is omitted.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "defaultRequest": {
                      "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "max": {
                      "description": "Max usage constraints on this kind by resource name.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "maxLimitRequestRatio": {
                      "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "min": {
                      "description": "Min usage constraints on this kind by resource name.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "type": {
                      "description": "Type of resource that this limit applies to.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "Environment name - final namespace name is constructed from project name and environment name",
                "type": [
                  "string",
                  "null"
                ]
              },
              "sccRanges": {
                "description": "SCC UID / SupplementaryGroups ranges - comma-delimited list of blocks in the format of <start>/<length or <start>-<end>. The openshift.io/sa.scc.uid-range annotation accepts only a single block.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "type": {
                "description": "Environment type, which might modify its attribute or where it will be created",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "limits": {
          "description": "LimitRanges for single namespace \n NOTE that only one range per Type is allowed",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "type"
            ],
            "properties": {
              "default": {
                "description": "Default resource requirement limit value by resource name if resource limit is omitted.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "defaultRequest": {
                "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "max": {
                "description": "Max usage constraints on this kind by resource name.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "maxLimitRequestRatio": {
                "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "min": {
                "description": "Min usage constraints on this kind by resource name.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "type": {
                "description": "Type of resource that this limit applies to.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "orphanIgnore": {
          "description": "ArgoCD AppProject orphanedResources ignore list added to default provided by operator config",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OrphanedResourceKey is a reference to a resource to be ignored from",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "group": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "kind": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "quotas": {
          "description": "Quotas for the project",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Quota definition for set of project environments, per type",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "environmentTypes"
            ],
            "properties": {
              "environmentTypes": {
                "description": "Environment types this quota is applicable for",
                "type": "array",
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "hard": {
                "description": "hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "scopeSelector": {
                "description": "scopeSelector is also a collection of filters like scopes that must match each object tracked by a quota but expressed using ScopeSelectorOperator in combination with possible values. For a resource to match, both scopes AND scopeSelector (if specified in spec), must be matched.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "matchExpressions": {
                    "description": "A list of scope selector requirements by scope of the resources.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "A scoped-resource selector requirement is a selector that contains values, a scope name, and an operator that relates the scope name and values.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "operator",
                        "scopeName"
                      ],
                      "properties": {
                        "operator": {
                          "description": "Represents a scope's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.",
                          "type": "string"
                        },
                        "scopeName": {
                          "description": "The name of the scope that the selector applies to.",
                          "type": "string"
                        },
                        "values": {
                          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "scopes": {
                "description": "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "A ResourceQuotaScope defines a filter that must match each object tracked by a quota",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ProjectStatus defines the observed state of Project",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "ops.csas.cz",
      "kind": "Project",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}