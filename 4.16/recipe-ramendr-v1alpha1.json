{
  "description": "Recipe is the Schema for the recipes API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ramendr.openshift.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Recipe"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "RecipeSpec defines the desired state of Recipe",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "appType"
      ],
      "properties": {
        "appType": {
          "description": "Type of application the recipe is designed for. (AppType is not used yet. For now, we will\nmatch the name of the app CR)",
          "type": "string"
        },
        "captureWorkflow": {
          "description": "The sequence of actions to capture data to protect from disaster",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "sequence"
          ],
          "properties": {
            "failOn": {
              "description": "Implies behaviour in case of failure: any-error (default), essential-error, full-error",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "any-error",
                "essential-error",
                "full-error"
              ]
            },
            "sequence": {
              "description": "List of the names of groups or hooks, in the order in which they should be executed\nFormat: <group|hook>: <group or hook name>[/<hook op>]",
              "type": "array",
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        "groups": {
          "description": "List of one or multiple groups",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Groups defined in the recipe refine / narrow-down the scope of its parent groups defined in the\nApplication CR. Recipe groups are always be associated to a parent group in Application CR -\nexplicitly or implicitly. Recipe groups can be used in the context of backup and/or restore workflows",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "type"
            ],
            "properties": {
              "backupRef": {
                "description": "Used for groups solely used in restore workflows to refer to another group that is used in\nbackup workflows.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "essential": {
                "description": "Defaults to true, if set to false, a failure is not necessarily handled as fatal",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "excludedResourceTypes": {
                "description": "List of resource types to exclude",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "includeClusterResources": {
                "description": "Whether to include any cluster-scoped resources. If nil or true, cluster-scoped resources are\nincluded if they are associated with the included namespace-scoped resources",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "includedNamespaces": {
                "description": "List of namespaces to include.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "includedResourceTypes": {
                "description": "List of resource types to include. If unspecified, all resource types are included.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "labelSelector": {
                "description": "Select items based on label",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "name": {
                "description": "Name of the group",
                "type": "string"
              },
              "nameSelector": {
                "description": "If specified, resource's object name needs to match this expression. Valid for volume groups only.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "parent": {
                "description": "Name of the parent group defined in the associated Application CR. Optional - If unspecified,\nparent group is represented by the implicit default group of Application CR (implies the\nApplication CR does not specify groups explicitly).",
                "type": [
                  "string",
                  "null"
                ]
              },
              "selectResource": {
                "description": "Determines the resource type which the fields labelSelector and nameSelector apply to for selecting PVCs. Default selection is pvc. Valid for volume groups only.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "pvc",
                  "pod",
                  "deployment",
                  "statefulset"
                ]
              },
              "type": {
                "description": "Determines the type of group - volume data only, resources only",
                "type": "string",
                "enum": [
                  "volume",
                  "resource"
                ]
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "hooks": {
          "description": "List of one or multiple hooks",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Hooks are actions to take during recipe processing",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "name",
              "type"
            ],
            "properties": {
              "chks": {
                "description": "Set of checks that the hook can apply",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "Operation to be invoked by the hook",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "condition": {
                      "description": "The condition to check for",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name of the check. Needs to be unique within the hook",
                      "type": "string"
                    },
                    "onError": {
                      "description": "How to handle when check does not become true. Defaults to Fail.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "timeout": {
                      "description": "How long to wait for the check to execute",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "duration"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              },
              "essential": {
                "description": "Defaults to true, if set to false, a failure is not necessarily handled as fatal",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "labelSelector": {
                "description": "If specified, resource object needs to match this label selector",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "name": {
                "description": "Hook name, unique within the Recipe CR",
                "type": "string"
              },
              "nameSelector": {
                "description": "If specified, resource's object name needs to match this expression",
                "type": [
                  "string",
                  "null"
                ]
              },
              "namespace": {
                "description": "Namespace",
                "type": [
                  "string",
                  "null"
                ]
              },
              "onError": {
                "description": "Default behavior in case of failing operations (custom or built-in ops). Defaults to Fail.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "fail",
                  "continue"
                ]
              },
              "ops": {
                "description": "Set of operations that the hook can be invoked for",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "description": "Operation to be invoked by the hook",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "command",
                    "name"
                  ],
                  "properties": {
                    "command": {
                      "description": "The command to execute",
                      "type": "array",
                      "minItems": 1,
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "container": {
                      "description": "The container where the command should be executed",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "inverseOp": {
                      "description": "Name of another operation that reverts the effect of this operation (e.g. quiesce vs. unquiesce)",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name of the operation. Needs to be unique within the hook",
                      "type": "string"
                    },
                    "onError": {
                      "description": "How to handle command returning with non-zero exit code. Defaults to Fail.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "timeout": {
                      "description": "How long to wait for the command to execute",
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "duration"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              },
              "selectResource": {
                "description": "Resource type to that a hook applies to",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "pod",
                  "deployment",
                  "statefulset"
                ]
              },
              "singlePodOnly": {
                "description": "Boolean flag that indicates whether to execute command on a single pod or on all pods that\nmatch the selector",
                "type": [
                  "boolean",
                  "null"
                ]
              },
              "timeout": {
                "description": "Default timeout applied to custom and built-in operations. If not specified, equals to 30s.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "duration"
              },
              "type": {
                "description": "Hook type",
                "type": "string",
                "enum": [
                  "exec",
                  "scale",
                  "check"
                ]
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "recoverWorkflow": {
          "description": "The sequence of actions to recover data protected from disaster",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "sequence"
          ],
          "properties": {
            "failOn": {
              "description": "Implies behaviour in case of failure: any-error (default), essential-error, full-error",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "any-error",
                "essential-error",
                "full-error"
              ]
            },
            "sequence": {
              "description": "List of the names of groups or hooks, in the order in which they should be executed\nFormat: <group|hook>: <group or hook name>[/<hook op>]",
              "type": "array",
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          },
          "additionalProperties": false
        },
        "volumes": {
          "description": "Volumes to protect from disaster",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "name",
            "type"
          ],
          "properties": {
            "backupRef": {
              "description": "Used for groups solely used in restore workflows to refer to another group that is used in\nbackup workflows.",
              "type": [
                "string",
                "null"
              ]
            },
            "essential": {
              "description": "Defaults to true, if set to false, a failure is not necessarily handled as fatal",
              "type": [
                "boolean",
                "null"
              ]
            },
            "excludedResourceTypes": {
              "description": "List of resource types to exclude",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "includeClusterResources": {
              "description": "Whether to include any cluster-scoped resources. If nil or true, cluster-scoped resources are\nincluded if they are associated with the included namespace-scoped resources",
              "type": [
                "boolean",
                "null"
              ]
            },
            "includedNamespaces": {
              "description": "List of namespaces to include.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "includedResourceTypes": {
              "description": "List of resource types to include. If unspecified, all resource types are included.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "labelSelector": {
              "description": "Select items based on label",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "matchExpressions": {
                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "matchLabels": {
                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "name": {
              "description": "Name of the group",
              "type": "string"
            },
            "nameSelector": {
              "description": "If specified, resource's object name needs to match this expression. Valid for volume groups only.",
              "type": [
                "string",
                "null"
              ]
            },
            "parent": {
              "description": "Name of the parent group defined in the associated Application CR. Optional - If unspecified,\nparent group is represented by the implicit default group of Application CR (implies the\nApplication CR does not specify groups explicitly).",
              "type": [
                "string",
                "null"
              ]
            },
            "selectResource": {
              "description": "Determines the resource type which the fields labelSelector and nameSelector apply to for selecting PVCs. Default selection is pvc. Valid for volume groups only.",
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "pvc",
                "pod",
                "deployment",
                "statefulset"
              ]
            },
            "type": {
              "description": "Determines the type of group - volume data only, resources only",
              "type": "string",
              "enum": [
                "volume",
                "resource"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "RecipeStatus defines the observed state of Recipe",
      "type": [
        "object",
        "null"
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "ramendr.openshift.io",
      "kind": "Recipe",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}