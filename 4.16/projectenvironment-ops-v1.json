{
  "description": "ProjectEnvironment is the Schema for the projectenvironments API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ops.csas.cz/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ProjectEnvironment"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ProjectEnvironmentSpec defines the desired state of ProjectEnvironment",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "applicationSource",
        "sourceRepos"
      ],
      "properties": {
        "applicationSource": {
          "description": "Repository, where are stored Application.ops.csas.cz objects",
          "type": "object",
          "required": [
            "repoURL"
          ],
          "properties": {
            "chart": {
              "description": "Chart is a Helm chart name, and must be specified for applications sourced from a Helm repo.",
              "type": [
                "string",
                "null"
              ]
            },
            "directory": {
              "description": "Directory holds path/directory specific options",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "exclude": {
                  "description": "Exclude contains a glob pattern to match paths against that should be explicitly excluded from being used during manifest generation",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "include": {
                  "description": "Include contains a glob pattern to match paths against that should be explicitly included during manifest generation",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "jsonnet": {
                  "description": "Jsonnet holds options specific to Jsonnet",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "extVars": {
                      "description": "ExtVars is a list of Jsonnet External Variables",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name",
                          "value"
                        ],
                        "properties": {
                          "code": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "libs": {
                      "description": "Additional library search dirs",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "tlas": {
                      "description": "TLAS is a list of Jsonnet Top-level Arguments",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "JsonnetVar represents a variable to be passed to jsonnet during manifest generation",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name",
                          "value"
                        ],
                        "properties": {
                          "code": {
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "recurse": {
                  "description": "Recurse specifies whether to scan a directory recursively for manifests",
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "helm": {
              "description": "Helm holds helm specific options",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "fileParameters": {
                  "description": "FileParameters are file parameters to the helm template",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "HelmFileParameter is a file parameter that's passed to helm template during manifest generation",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name is the name of the Helm parameter",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "path": {
                        "description": "Path is the path to the file containing the values for the Helm parameter",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "ignoreMissingValueFiles": {
                  "description": "IgnoreMissingValueFiles prevents helm template from failing when valueFiles do not exist locally by not appending them to helm template --values",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "parameters": {
                  "description": "Parameters is a list of Helm parameters which are passed to the helm template command upon manifest generation",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "HelmParameter is a parameter that's passed to helm template during manifest generation",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "forceString": {
                        "description": "ForceString determines whether to tell Helm to interpret booleans and numbers as strings",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Name is the name of the Helm parameter",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "value": {
                        "description": "Value is the value for the Helm parameter",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "passCredentials": {
                  "description": "PassCredentials pass credentials to all domains (Helm's --pass-credentials)",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "releaseName": {
                  "description": "ReleaseName is the Helm release name to use. If omitted it will use the application name",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "skipCrds": {
                  "description": "SkipCrds skips custom resource definition installation step (Helm's --skip-crds)",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "valueFiles": {
                  "description": "ValuesFiles is a list of Helm value files to use when generating a template",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "values": {
                  "description": "Values specifies Helm values to be passed to helm template, typically defined as a block",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "version": {
                  "description": "Version is the Helm version to use for templating (\"3\")",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "kustomize": {
              "description": "Kustomize holds kustomize specific options",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "commonAnnotations": {
                  "description": "CommonAnnotations is a list of additional annotations to add to rendered manifests",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "commonLabels": {
                  "description": "CommonLabels is a list of additional labels to add to rendered manifests",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "forceCommonAnnotations": {
                  "description": "ForceCommonAnnotations specifies whether to force applying common annotations to resources for Kustomize apps",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "forceCommonLabels": {
                  "description": "ForceCommonLabels specifies whether to force applying common labels to resources for Kustomize apps",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "images": {
                  "description": "Images is a list of Kustomize image override specifications",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "KustomizeImage represents a Kustomize image definition in the format [old_image_name=]<image_name>:<image_tag>",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "namePrefix": {
                  "description": "NamePrefix is a prefix appended to resources for Kustomize apps",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "nameSuffix": {
                  "description": "NameSuffix is a suffix appended to resources for Kustomize apps",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "version": {
                  "description": "Version controls which version of Kustomize to use for rendering manifests",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "path": {
              "description": "Path is a directory path within the Git repository, and is only valid for applications sourced from Git.",
              "type": [
                "string",
                "null"
              ]
            },
            "plugin": {
              "description": "Plugin holds config management plugin specific options",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "env": {
                  "description": "Env is a list of environment variable entries",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "EnvEntry represents an entry in the application's environment",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name is the name of the variable, usually expressed in uppercase",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value is the value of the variable",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "name": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "parameters": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "array": {
                        "description": "Array is the value of an array type parameter.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "map": {
                        "description": "Map is the value of a map type parameter.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "additionalProperties": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "name": {
                        "description": "Name is the name identifying a parameter.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "string": {
                        "description": "String_ is the value of a string type parameter.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "ref": {
              "description": "Ref is reference to another source within sources field. This field will not be used if used with a `source` tag.",
              "type": [
                "string",
                "null"
              ]
            },
            "repoURL": {
              "description": "RepoURL is the URL to the repository (Git or Helm) that contains the application manifests",
              "type": "string"
            },
            "targetRevision": {
              "description": "TargetRevision defines the revision of the source to sync the application to. In case of Git, this can be commit, tag, or branch. If omitted, will equal to HEAD. In case of Helm, this is a semver tag for the Chart's version.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "description": {
          "description": "Description of the Namespace",
          "type": [
            "string",
            "null"
          ]
        },
        "egressIPs": {
          "description": "For API backward compatibility only. Currently, without effect - see ProjectSpec.EgressIPs for Kubernetes-OVN \n Egress IP addresses for the namespace",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "NetNamespaceEgressIP is a single egress IP out of a list of reserved IPs used as source of external traffic coming from pods in this namespace",
            "type": [
              "string",
              "null"
            ],
            "pattern": "^(([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[0-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
          }
        },
        "groupRoleBindings": {
          "description": "Roles",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Defines binding between subject and role",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "group",
              "kind",
              "role"
            ],
            "properties": {
              "group": {
                "description": "Name of the subject",
                "type": "string"
              },
              "kind": {
                "description": "Kind of the role",
                "type": "string"
              },
              "role": {
                "description": "Name of the role the subject will get",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "ipamName": {
          "description": "For API backward compatibility only. Currently, without effect - see ProjectSpec.EgressIPs for Kubernetes-OVN \n Egress IPAM CR Name",
          "type": [
            "string",
            "null"
          ]
        },
        "limits": {
          "description": "LimitRanges for this namespace",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "LimitRangeItem defines a min/max usage limit for any resource that matches on kind.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "type"
            ],
            "properties": {
              "default": {
                "description": "Default resource requirement limit value by resource name if resource limit is omitted.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "defaultRequest": {
                "description": "DefaultRequest is the default resource requirement request value by resource name if resource request is omitted.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "max": {
                "description": "Max usage constraints on this kind by resource name.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "maxLimitRequestRatio": {
                "description": "MaxLimitRequestRatio if specified, the named resource must have a request and limit that are both non-zero where limit divided by request is less than or equal to the enumerated value; this represents the max burst for the named resource.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "min": {
                "description": "Min usage constraints on this kind by resource name.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "x-kubernetes-int-or-string": true
                }
              },
              "type": {
                "description": "Type of resource that this limit applies to.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "orphanIgnore": {
          "description": "ArgoCD AppProject orphanedResources ignore list added to default provided by operator config",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "OrphanedResourceKey is a reference to a resource to be ignored from",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "group": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "kind": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "sccRanges": {
          "description": "SCC UID / SupplementaryGroups ranges - comma-delimited list of blocks in the format of <start>/<length or <start>-<end>. The openshift.io/sa.scc.uid-range annotation accepts only a single block.",
          "type": [
            "string",
            "null"
          ]
        },
        "sourceRepos": {
          "description": "List of allowed repositories for the project",
          "type": "array",
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ProjectEnvironmentStatus defines the observed state of ProjectEnvironment",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "ops.csas.cz",
      "kind": "ProjectEnvironment",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}