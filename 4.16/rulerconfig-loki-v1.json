{
  "description": "RulerConfig is the Schema for the rulerconfigs API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "loki.grafana.com/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "RulerConfig"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "RulerConfigSpec defines the desired state of Ruler",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "alertmanager": {
          "description": "Defines alert manager configuration to notify on firing alerts.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "endpoints"
          ],
          "properties": {
            "client": {
              "description": "Client configuration for reaching the alertmanager endpoint.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "basicAuth": {
                  "description": "Basic authentication configuration for reaching the alertmanager endpoints.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "password": {
                      "description": "The subject's password for the basic authentication configuration.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "username": {
                      "description": "The subject's username for the basic authentication configuration.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "headerAuth": {
                  "description": "Header authentication configuration for reaching the alertmanager endpoints.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "credentials": {
                      "description": "The credentials for the header authentication configuration.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "credentialsFile": {
                      "description": "The credentials file for the Header authentication configuration. It is mutually exclusive with `credentials`.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "type": {
                      "description": "The authentication type for the header authentication configuration.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "tls": {
                  "description": "TLS configuration for reaching the alertmanager endpoints.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "caPath": {
                      "description": "The CA certificate file path for the TLS configuration.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "certPath": {
                      "description": "The client-side certificate file path for the TLS configuration.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "insecureSkipVerify": {
                      "description": "Skip validating server certificate.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "keyPath": {
                      "description": "The client-side key file path for the TLS configuration.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "serverName": {
                      "description": "The server name to validate in the alertmanager server certificates.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "discovery": {
              "description": "Defines the configuration for DNS-based discovery of AlertManager hosts.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "enableSRV": {
                  "description": "Use DNS SRV records to discover Alertmanager hosts.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "refreshInterval": {
                  "description": "How long to wait between refreshing DNS resolutions of Alertmanager hosts.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                }
              },
              "additionalProperties": false
            },
            "enableV2": {
              "description": "If enabled, then requests to Alertmanager use the v2 API.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "endpoints": {
              "description": "List of AlertManager URLs to send notifications to. Each Alertmanager URL is treated as\na separate group in the configuration. Multiple Alertmanagers in HA per group can be\nsupported by using DNS resolution (See EnableDNSDiscovery).",
              "type": "array",
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "externalLabels": {
              "description": "Additional labels to add to all alerts.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "externalUrl": {
              "description": "URL for alerts return path.",
              "type": [
                "string",
                "null"
              ]
            },
            "notificationQueue": {
              "description": "Defines the configuration for the notification queue to AlertManager hosts.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "capacity": {
                  "description": "Capacity of the queue for notifications to be sent to the Alertmanager.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "forGracePeriod": {
                  "description": "Minimum duration between alert and restored \"for\" state. This is maintained\nonly for alerts with configured \"for\" time greater than the grace period.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                },
                "forOutageTolerance": {
                  "description": "Max time to tolerate outage for restoring \"for\" state of alert.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                },
                "resendDelay": {
                  "description": "Minimum amount of time to wait before resending an alert to Alertmanager.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                },
                "timeout": {
                  "description": "HTTP timeout duration when sending notifications to the Alertmanager.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                }
              },
              "additionalProperties": false
            },
            "relabelConfigs": {
              "description": "List of alert relabel configurations.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>` and `<alert_relabel_configs>` sections of Prometheus configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "sourceLabels"
                ],
                "properties": {
                  "action": {
                    "description": "Action to perform based on regex matching. Default is 'replace'",
                    "type": [
                      "string",
                      "null"
                    ],
                    "enum": [
                      "drop",
                      "hashmod",
                      "keep",
                      "labeldrop",
                      "labelkeep",
                      "labelmap",
                      "replace"
                    ]
                  },
                  "modulus": {
                    "description": "Modulus to take of the hash of the source label values.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int64"
                  },
                  "regex": {
                    "description": "Regular expression against which the extracted value is matched. Default is '(.*)'",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "replacement": {
                    "description": "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "separator": {
                    "description": "Separator placed between concatenated source label values. default is ';'.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "sourceLabels": {
                    "description": "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions.",
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "targetLabel": {
                    "description": "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "evaluationInterval": {
          "description": "Interval on how frequently to evaluate rules.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
        },
        "overrides": {
          "description": "Overrides defines the config overrides to be applied per-tenant.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "RulerOverrides defines the overrides applied per-tenant.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "alertmanager": {
                "description": "AlertManagerOverrides defines the overrides to apply to the alertmanager config.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "endpoints"
                ],
                "properties": {
                  "client": {
                    "description": "Client configuration for reaching the alertmanager endpoint.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "basicAuth": {
                        "description": "Basic authentication configuration for reaching the alertmanager endpoints.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "password": {
                            "description": "The subject's password for the basic authentication configuration.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "username": {
                            "description": "The subject's username for the basic authentication configuration.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "headerAuth": {
                        "description": "Header authentication configuration for reaching the alertmanager endpoints.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "credentials": {
                            "description": "The credentials for the header authentication configuration.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "credentialsFile": {
                            "description": "The credentials file for the Header authentication configuration. It is mutually exclusive with `credentials`.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": {
                            "description": "The authentication type for the header authentication configuration.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "tls": {
                        "description": "TLS configuration for reaching the alertmanager endpoints.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "caPath": {
                            "description": "The CA certificate file path for the TLS configuration.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "certPath": {
                            "description": "The client-side certificate file path for the TLS configuration.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "insecureSkipVerify": {
                            "description": "Skip validating server certificate.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "keyPath": {
                            "description": "The client-side key file path for the TLS configuration.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "serverName": {
                            "description": "The server name to validate in the alertmanager server certificates.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "discovery": {
                    "description": "Defines the configuration for DNS-based discovery of AlertManager hosts.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "enableSRV": {
                        "description": "Use DNS SRV records to discover Alertmanager hosts.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "refreshInterval": {
                        "description": "How long to wait between refreshing DNS resolutions of Alertmanager hosts.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                      }
                    },
                    "additionalProperties": false
                  },
                  "enableV2": {
                    "description": "If enabled, then requests to Alertmanager use the v2 API.",
                    "type": [
                      "boolean",
                      "null"
                    ]
                  },
                  "endpoints": {
                    "description": "List of AlertManager URLs to send notifications to. Each Alertmanager URL is treated as\na separate group in the configuration. Multiple Alertmanagers in HA per group can be\nsupported by using DNS resolution (See EnableDNSDiscovery).",
                    "type": "array",
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "externalLabels": {
                    "description": "Additional labels to add to all alerts.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "externalUrl": {
                    "description": "URL for alerts return path.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "notificationQueue": {
                    "description": "Defines the configuration for the notification queue to AlertManager hosts.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "capacity": {
                        "description": "Capacity of the queue for notifications to be sent to the Alertmanager.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      },
                      "forGracePeriod": {
                        "description": "Minimum duration between alert and restored \"for\" state. This is maintained\nonly for alerts with configured \"for\" time greater than the grace period.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                      },
                      "forOutageTolerance": {
                        "description": "Max time to tolerate outage for restoring \"for\" state of alert.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                      },
                      "resendDelay": {
                        "description": "Minimum amount of time to wait before resending an alert to Alertmanager.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                      },
                      "timeout": {
                        "description": "HTTP timeout duration when sending notifications to the Alertmanager.",
                        "type": [
                          "string",
                          "null"
                        ],
                        "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                      }
                    },
                    "additionalProperties": false
                  },
                  "relabelConfigs": {
                    "description": "List of alert relabel configurations.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>` and `<alert_relabel_configs>` sections of Prometheus configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "sourceLabels"
                      ],
                      "properties": {
                        "action": {
                          "description": "Action to perform based on regex matching. Default is 'replace'",
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "drop",
                            "hashmod",
                            "keep",
                            "labeldrop",
                            "labelkeep",
                            "labelmap",
                            "replace"
                          ]
                        },
                        "modulus": {
                          "description": "Modulus to take of the hash of the source label values.",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64"
                        },
                        "regex": {
                          "description": "Regular expression against which the extracted value is matched. Default is '(.*)'",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "replacement": {
                          "description": "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "separator": {
                          "description": "Separator placed between concatenated source label values. default is ';'.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "sourceLabels": {
                          "description": "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions.",
                          "type": "array",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "targetLabel": {
                          "description": "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "pollInterval": {
          "description": "Interval on how frequently to poll for new rule definitions.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
        },
        "remoteWrite": {
          "description": "Defines a remote write endpoint to write recording rule metrics.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "client": {
              "description": "Defines the configuration for remote write client.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "authorization",
                "authorizationSecretName",
                "name",
                "url"
              ],
              "properties": {
                "additionalHeaders": {
                  "description": "Additional HTTP headers to be sent along with each remote write request.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "authorization": {
                  "description": "Type of authorzation to use to access the remote write endpoint",
                  "type": "string",
                  "enum": [
                    "basic",
                    "header"
                  ]
                },
                "authorizationSecretName": {
                  "description": "Name of a secret in the namespace configured for authorization secrets.",
                  "type": "string"
                },
                "followRedirects": {
                  "description": "Configure whether HTTP requests follow HTTP 3xx redirects.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "name": {
                  "description": "Name of the remote write config, which if specified must be unique among remote write configs.",
                  "type": "string"
                },
                "proxyUrl": {
                  "description": "Optional proxy URL.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "relabelConfigs": {
                  "description": "List of remote write relabel configurations.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "RelabelConfig allows dynamic rewriting of the label set, being applied to samples before ingestion.\nIt defines `<metric_relabel_configs>` and `<alert_relabel_configs>` sections of Prometheus configuration.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "sourceLabels"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action to perform based on regex matching. Default is 'replace'",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "drop",
                          "hashmod",
                          "keep",
                          "labeldrop",
                          "labelkeep",
                          "labelmap",
                          "replace"
                        ]
                      },
                      "modulus": {
                        "description": "Modulus to take of the hash of the source label values.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int64"
                      },
                      "regex": {
                        "description": "Regular expression against which the extracted value is matched. Default is '(.*)'",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "replacement": {
                        "description": "Replacement value against which a regex replace is performed if the\nregular expression matches. Regex capture groups are available. Default is '$1'",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "separator": {
                        "description": "Separator placed between concatenated source label values. default is ';'.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "sourceLabels": {
                        "description": "The source labels select values from existing labels. Their content is concatenated\nusing the configured separator and matched against the configured regular expression\nfor the replace, keep, and drop actions.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "targetLabel": {
                        "description": "Label to which the resulting value is written in a replace action.\nIt is mandatory for replace actions. Regex capture groups are available.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "timeout": {
                  "description": "Timeout for requests to the remote write endpoint.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                },
                "url": {
                  "description": "The URL of the endpoint to send samples to.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "Enable remote-write functionality.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "queue": {
              "description": "Defines the configuration for remote write client queue.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "batchSendDeadline": {
                  "description": "Maximum time a sample will wait in buffer.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                },
                "capacity": {
                  "description": "Number of samples to buffer per shard before we block reading of more",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "maxBackOffPeriod": {
                  "description": "Maximum retry delay.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                },
                "maxSamplesPerSend": {
                  "description": "Maximum number of samples per send.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "maxShards": {
                  "description": "Maximum number of shards, i.e. amount of concurrency.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "minBackOffPeriod": {
                  "description": "Initial retry delay. Gets doubled for every retry.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
                },
                "minShards": {
                  "description": "Minimum number of shards, i.e. amount of concurrency.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "refreshPeriod": {
              "description": "Minimum period to wait between refreshing remote-write reconfigurations.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0)"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "RulerConfigStatus defines the observed state of RulerConfig",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions of the RulerConfig health.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "loki.grafana.com",
      "kind": "RulerConfig",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}