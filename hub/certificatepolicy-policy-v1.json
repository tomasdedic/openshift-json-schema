{
  "description": "CertificatePolicy is the schema for the certificatepolicies API. Certificate policy monitors\ncertificates on a cluster against user-defined restrictions, and it returns a noncompliance\nstatus if any certificate does not meet the requirements of the parameters. By default the\ncertificate policy uses the 'tls.crt' key of a secret to find the certificate, but you can use an\nalternate key if specified in the 'certificate_key_name' label on the secret.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "policy.open-cluster-management.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "CertificatePolicy"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "CertificatePolicySpec defines which certificates need to be checked and how those certificates\nshould be configured to be compliant with the policy. Enforce remediation action is not currently\nsupported, so you are responsible to take actions to fix any noncompliant certificates.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "allowedSANPattern": {
          "description": "AllowedSANPattern is the pattern that must match any defined subject alternative name (SAN)\nentries in the certificate for the certificate to be compliant. Refer to\nhttps://pkg.go.dev/regexp/syntax for the regular expression syntax.",
          "type": [
            "string",
            "null"
          ],
          "minLength": 1
        },
        "disallowedSANPattern": {
          "description": "DisallowedSANPattern is the pattern that must not match any defined subject alternative name\n(SAN) entries in the certificate for the certificate to be compliant. Refer to\nhttps://pkg.go.dev/regexp/syntax for the regular expression syntax.",
          "type": [
            "string",
            "null"
          ],
          "minLength": 1
        },
        "labelSelector": {
          "description": "LabelSelector restricts the secrets that are checked to the ones that match these labels.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ],
            "minLength": 1
          }
        },
        "maximumCADuration": {
          "description": "MaxCADuration is the maximum duration for the expiration of the certificate authority (CA),\nwhere a value that is greater than that duration is considered noncompliant. The value follows\nthe Golang duration format 0h0m0s, where hours (h) is the largest accepted unit of time.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))+$"
        },
        "maximumDuration": {
          "description": "MaxDuration is the maximum duration for the expiration of a certificate, where a value that is\ngreater than that duration is considered noncompliant. The value follows the Golang duration\nformat 0h0m0s, where hours (h) is the largest accepted unit of time.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))+$"
        },
        "minimumCADuration": {
          "description": "MinCADuration is the minimum duration for the expiration of the certificate authority (CA),\nwhere any value lesser than that duration is considered noncompliant. The value follows the\nGolang duration format 0h0m0s, where hours (h) is the largest accepted unit of time.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))+$"
        },
        "minimumDuration": {
          "description": "MinDuration is the minimum duration for the expiration of a certificate, where a value that is\nlesser than that duration is considered noncompliant. The value follows the Golang duration\nformat 0h0m0s, where hours (h) is the largest accepted unit of time.",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^(?:(?:[0-9]+(?:.[0-9])?)(?:h|m|s|(?:ms)|(?:us)|(?:ns)))+$"
        },
        "namespaceSelector": {
          "description": "NamespaceSelector determines namespaces on the managed cluster in which to validate\ncertificates. The Include and Exclude parameters accept file path expressions to include and\nexclude namespaces by name. The MatchExpressions and MatchLabels parameters specify namespaces\nto include by label. See the Kubernetes labels and selectors documentation. The resulting list\nis compiled by using the intersection of results from all parameters. You must provide either\nInclude or at least one of MatchExpressions or MatchLabels to retrieve namespaces.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "exclude": {
              "description": "Exclude is an array of filepath expressions to exclude objects by name.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "minLength": 1
              }
            },
            "include": {
              "description": "Include is an array of filepath expressions to include objects by name.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ],
                "minLength": 1
              }
            },
            "matchExpressions": {
              "description": "MatchExpressions is an array of label selector requirements matching objects by label.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "description": "MatchLabels is a map of {key,value} pairs matching objects by label.",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "remediationAction": {
          "description": "RemediationAction must be set to \"Inform\". Enforce is not currently supported, so setting this\nto \"Enforce\" has the same effect as \"Inform\".",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Inform",
            "inform",
            "Enforce",
            "enforce"
          ]
        },
        "severity": {
          "description": "Severity is a user-defined severity for when a certificate is found out of compliance with this\ncertificate policy. Accepted values are low, medium, high, and critical.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "low",
            "Low",
            "medium",
            "Medium",
            "high",
            "High",
            "critical",
            "Critical"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "CertificatePolicyStatus reports the observed status that results from parameters of the\ncertificate policy.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "compliancyDetails": {
          "description": "CompliancyDetails is a map of namespaces to the compliance details of its contained\ncertificates.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "description": "CompliancyDetails reports the details related to whether the policy is compliant.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "message": {
                "description": "Message is a human-readable summary of the compliance details.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "nonCompliantCertificates": {
                "description": "NonCompliantCertificates reports the total number of noncompliant certificates.",
                "type": [
                  "integer",
                  "null"
                ]
              },
              "nonCompliantCertificatesList": {
                "description": "NonCompliantCertificatesList reports a map of the details for each noncompliant certificate,\nwhere the key comes from the \"certificate-name\" label, \"certmanager.k8s.io/certificate-name\"\nlabel, or defaults to the name of the secret.",
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": {
                  "description": "Cert reports the related secret and parsed details of a certificate.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "ca": {
                      "description": "CA is a boolean reporting whether the certificate contains a CA.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "duration": {
                      "description": "Duration is the total duration of the certificate by calculating the difference between its\nNotAfter and NotBefore values.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "expiration": {
                      "description": "Expiration is the string representation of the expiration of the certificate from the time of\nthe report.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "expiry": {
                      "description": "Expiry is the time.Duration representation of the expiration of the certificate from the time\nof the report.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int64"
                    },
                    "sans": {
                      "description": "Sans is a list of subject alternative names in the certificate.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "secretName": {
                      "description": "Secret is the name of the secret containing the certificate.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "compliant": {
          "description": "ComplianceState reports the compliance that results from parameters of the certificate policy.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "Compliant",
            "NonCompliant",
            "UnknownCompliancy"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "policy.open-cluster-management.io",
      "kind": "CertificatePolicy",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}