{
  "description": "Schedule is a Velero resource that represents a pre-scheduled or periodic Backup that should be run.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "velero.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Schedule"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ScheduleSpec defines the specification for a Velero schedule",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "schedule",
        "template"
      ],
      "properties": {
        "paused": {
          "description": "Paused specifies whether the schedule is paused or not",
          "type": [
            "boolean",
            "null"
          ]
        },
        "schedule": {
          "description": "Schedule is a Cron expression defining when to run the Backup.",
          "type": "string"
        },
        "template": {
          "description": "Template is the definition of the Backup to be run on the provided schedule",
          "type": "object",
          "properties": {
            "csiSnapshotTimeout": {
              "description": "CSISnapshotTimeout specifies the time used to wait for CSI VolumeSnapshot status turns to ReadyToUse during creation, before returning error as timeout. The default value is 10 minute.",
              "type": [
                "string",
                "null"
              ]
            },
            "datamover": {
              "description": "DataMover specifies the data mover to be used by the backup. If DataMover is \"\" or \"velero\", the built-in data mover will be used.",
              "type": [
                "string",
                "null"
              ]
            },
            "defaultVolumesToFsBackup": {
              "description": "DefaultVolumesToFsBackup specifies whether pod volume file system backup should be used for all volumes by default."
            },
            "defaultVolumesToRestic": {
              "description": "DefaultVolumesToRestic specifies whether restic should be used to take a backup of all pod volumes by default. \n Deprecated: this field is no longer used and will be removed entirely in future. Use DefaultVolumesToFsBackup instead."
            },
            "excludedClusterScopedResources": {
              "description": "ExcludedClusterScopedResources is a slice of cluster-scoped resource type names to exclude from the backup. If set to \"*\", all cluster-scoped resource types are excluded. The default value is empty."
            },
            "excludedNamespaceScopedResources": {
              "description": "ExcludedNamespaceScopedResources is a slice of namespace-scoped resource type names to exclude from the backup. If set to \"*\", all namespace-scoped resource types are excluded. The default value is empty."
            },
            "excludedNamespaces": {
              "description": "ExcludedNamespaces contains a list of namespaces that are not included in the backup."
            },
            "excludedResources": {
              "description": "ExcludedResources is a slice of resource names that are not included in the backup."
            },
            "hooks": {
              "description": "Hooks represent custom behaviors that should be executed at different phases of the backup.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "resources": {
                  "description": "Resources are hooks that should be executed when backing up individual instances of a resource."
                }
              },
              "additionalProperties": false
            },
            "includeClusterResources": {
              "description": "IncludeClusterResources specifies whether cluster-scoped resources should be included for consideration in the backup."
            },
            "includedClusterScopedResources": {
              "description": "IncludedClusterScopedResources is a slice of cluster-scoped resource type names to include in the backup. If set to \"*\", all cluster-scoped resource types are included. The default value is empty, which means only related cluster-scoped resources are included."
            },
            "includedNamespaceScopedResources": {
              "description": "IncludedNamespaceScopedResources is a slice of namespace-scoped resource type names to include in the backup. The default value is \"*\"."
            },
            "includedNamespaces": {
              "description": "IncludedNamespaces is a slice of namespace names to include objects from. If empty, all namespaces are included."
            },
            "includedResources": {
              "description": "IncludedResources is a slice of resource names to include in the backup. If empty, all resources are included."
            },
            "itemOperationTimeout": {
              "description": "ItemOperationTimeout specifies the time used to wait for asynchronous BackupItemAction operations The default value is 1 hour.",
              "type": [
                "string",
                "null"
              ]
            },
            "labelSelector": {
              "description": "LabelSelector is a metav1.LabelSelector to filter with when adding individual objects to the backup. If empty or nil, all objects are included. Optional.",
              "x-kubernetes-map-type": "atomic"
            },
            "metadata": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "labels": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "additionalProperties": false
            },
            "orLabelSelectors": {
              "description": "OrLabelSelectors is list of metav1.LabelSelector to filter with when adding individual objects to the backup. If multiple provided they will be joined by the OR operator. LabelSelector as well as OrLabelSelectors cannot co-exist in backup request, only one of them can be used."
            },
            "orderedResources": {
              "description": "OrderedResources specifies the backup order of resources of specific Kind. The map key is the resource name and value is a list of object names separated by commas. Each resource name has format \"namespace/objectname\".  For cluster resources, simply use \"objectname\".",
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "resourcePolicy": {
              "description": "ResourcePolicy specifies the referenced resource policies that backup should follow",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "kind",
                "name"
              ],
              "properties": {
                "apiGroup": {
                  "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "kind": {
                  "description": "Kind is the type of resource being referenced",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the name of resource being referenced",
                  "type": "string"
                }
              },
              "x-kubernetes-map-type": "atomic",
              "additionalProperties": false
            },
            "snapshotMoveData": {
              "description": "SnapshotMoveData specifies whether snapshot data should be moved"
            },
            "snapshotVolumes": {
              "description": "SnapshotVolumes specifies whether to take snapshots of any PV's referenced in the set of objects included in the Backup."
            },
            "storageLocation": {
              "description": "StorageLocation is a string containing the name of a BackupStorageLocation where the backup should be stored.",
              "type": [
                "string",
                "null"
              ]
            },
            "ttl": {
              "description": "TTL is a time.Duration-parseable string describing how long the Backup should be retained for.",
              "type": [
                "string",
                "null"
              ]
            },
            "volumeSnapshotLocations": {
              "description": "VolumeSnapshotLocations is a list containing names of VolumeSnapshotLocations associated with this backup.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "useOwnerReferencesInBackup": {
          "description": "UseOwnerReferencesBackup specifies whether to use OwnerReferences on backups created by this Schedule."
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ScheduleStatus captures the current state of a Velero schedule",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "lastBackup": {
          "description": "LastBackup is the last time a Backup was run for this Schedule schedule",
          "format": "date-time"
        },
        "phase": {
          "description": "Phase is the current phase of the Schedule",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "New",
            "Enabled",
            "FailedValidation"
          ]
        },
        "validationErrors": {
          "description": "ValidationErrors is a slice of all validation errors (if applicable)",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "velero.io",
      "kind": "Schedule",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}