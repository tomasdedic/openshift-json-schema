{
  "description": "AWSManagedMachinePool is the Schema for the awsmanagedmachinepools API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "infrastructure.cluster.x-k8s.io/v1beta2"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "AWSManagedMachinePool"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "AWSManagedMachinePoolSpec defines the desired state of AWSManagedMachinePool.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "additionalTags": {
          "description": "AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the\nones added by default.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "amiType": {
          "description": "AMIType defines the AMI type",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "AL2_x86_64",
            "AL2_x86_64_GPU",
            "AL2_ARM_64",
            "CUSTOM"
          ]
        },
        "amiVersion": {
          "description": "AMIVersion defines the desired AMI release version. If no version number\nis supplied then the latest version for the Kubernetes version\nwill be used",
          "type": [
            "string",
            "null"
          ],
          "minLength": 2
        },
        "availabilityZoneSubnetType": {
          "description": "AvailabilityZoneSubnetType specifies which type of subnets to use when an availability zone is specified.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "public",
            "private",
            "all"
          ]
        },
        "availabilityZones": {
          "description": "AvailabilityZones is an array of availability zones instances can run in",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "awsLaunchTemplate": {
          "description": "AWSLaunchTemplate specifies the launch template to use to create the managed node group.\nIf AWSLaunchTemplate is specified, certain node group configuraions outside of launch template\nare prohibited (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "additionalSecurityGroups": {
              "description": "AdditionalSecurityGroups is an array of references to security groups that should be applied to the\ninstances. These security groups would be set in addition to any security groups defined\nat the cluster level or in the actuator.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "AWSResourceReference is a reference to a specific AWS resource by ID or filters.\nOnly one of ID or Filters may be specified. Specifying more than one will result in\na validation error.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "filters": {
                    "description": "Filters is a set of key/value pairs used to identify a resource\nThey are applied according to the rules defined by the AWS API:\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "Filter is a filter used to identify an AWS resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name",
                        "values"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the filter. Filter names are case-sensitive.",
                          "type": "string"
                        },
                        "values": {
                          "description": "Values includes one or more filter values. Filter values are case-sensitive.",
                          "type": "array",
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "id": {
                    "description": "ID of resource",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "ami": {
              "description": "AMI is the reference to the AMI from which to create the machine instance.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "eksLookupType": {
                  "description": "EKSOptimizedLookupType If specified, will look up an EKS Optimized image in SSM Parameter store",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "AmazonLinux",
                    "AmazonLinuxGPU"
                  ]
                },
                "id": {
                  "description": "ID of resource",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "iamInstanceProfile": {
              "description": "The name or the Amazon Resource Name (ARN) of the instance profile associated\nwith the IAM role for the instance. The instance profile contains the IAM\nrole.",
              "type": [
                "string",
                "null"
              ]
            },
            "imageLookupBaseOS": {
              "description": "ImageLookupBaseOS is the name of the base operating system to use for\nimage lookup the AMI is not set.",
              "type": [
                "string",
                "null"
              ]
            },
            "imageLookupFormat": {
              "description": "ImageLookupFormat is the AMI naming format to look up the image for this\nmachine It will be ignored if an explicit AMI is set. Supports\nsubstitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and\nkubernetes version, respectively. The BaseOS will be the value in\nImageLookupBaseOS or ubuntu (the default), and the kubernetes version as\ndefined by the packages produced by kubernetes/release without v as a\nprefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default\nimage format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up\nsearching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a\nMachine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See\nalso: https://golang.org/pkg/text/template/",
              "type": [
                "string",
                "null"
              ]
            },
            "imageLookupOrg": {
              "description": "ImageLookupOrg is the AWS Organization ID to use for image lookup if AMI is not set.",
              "type": [
                "string",
                "null"
              ]
            },
            "instanceMetadataOptions": {
              "description": "InstanceMetadataOptions defines the behavior for applying metadata to instances.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "httpEndpoint": {
                  "description": "Enables or disables the HTTP metadata endpoint on your instances.\n\n\nIf you specify a value of disabled, you cannot access your instance metadata.\n\n\nDefault: enabled",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "enabled",
                    "disabled"
                  ]
                },
                "httpPutResponseHopLimit": {
                  "description": "The desired HTTP PUT response hop limit for instance metadata requests. The\nlarger the number, the further instance metadata requests can travel.\n\n\nDefault: 1",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int64",
                  "maximum": 64,
                  "minimum": 1
                },
                "httpTokens": {
                  "description": "The state of token usage for your instance metadata requests.\n\n\nIf the state is optional, you can choose to retrieve instance metadata with\nor without a session token on your request. If you retrieve the IAM role\ncredentials without a token, the version 1.0 role credentials are returned.\nIf you retrieve the IAM role credentials using a valid session token, the\nversion 2.0 role credentials are returned.\n\n\nIf the state is required, you must send a session token with any instance\nmetadata retrieval requests. In this state, retrieving the IAM role credentials\nalways returns the version 2.0 credentials; the version 1.0 credentials are\nnot available.\n\n\nDefault: optional",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "optional",
                    "required"
                  ]
                },
                "instanceMetadataTags": {
                  "description": "Set to enabled to allow access to instance tags from the instance metadata.\nSet to disabled to turn off access to instance tags from the instance metadata.\nFor more information, see Work with instance tags using the instance metadata\n(https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).\n\n\nDefault: disabled",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "enabled",
                    "disabled"
                  ]
                }
              },
              "additionalProperties": false
            },
            "instanceType": {
              "description": "InstanceType is the type of instance to create. Example: m4.xlarge",
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "description": "The name of the launch template.",
              "type": [
                "string",
                "null"
              ]
            },
            "privateDnsName": {
              "description": "PrivateDNSName is the options for the instance hostname.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "enableResourceNameDnsAAAARecord": {
                  "description": "EnableResourceNameDNSAAAARecord indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "enableResourceNameDnsARecord": {
                  "description": "EnableResourceNameDNSARecord indicates whether to respond to DNS queries for instance hostnames with DNS A records.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "hostnameType": {
                  "description": "The type of hostname to assign to an instance.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "ip-name",
                    "resource-name"
                  ]
                }
              },
              "additionalProperties": false
            },
            "rootVolume": {
              "description": "RootVolume encapsulates the configuration options for the root volume",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "size"
              ],
              "properties": {
                "deviceName": {
                  "description": "Device name",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "encrypted": {
                  "description": "Encrypted is whether the volume should be encrypted or not.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "encryptionKey": {
                  "description": "EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.\nIf Encrypted is set and this is omitted, the default AWS key will be used.\nThe key must already exist and be accessible by the controller.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "iops": {
                  "description": "IOPS is the number of IOPS requested for the disk. Not applicable to all types.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int64"
                },
                "size": {
                  "description": "Size specifies size (in Gi) of the storage device.\nMust be greater than the image snapshot size or 8 (whichever is greater).",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 8
                },
                "throughput": {
                  "description": "Throughput to provision in MiB/s supported for the volume type. Not applicable to all types.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int64"
                },
                "type": {
                  "description": "Type is the type of the volume (e.g. gp2, io1, etc...).",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "spotMarketOptions": {
              "description": "SpotMarketOptions are options for configuring AWSMachinePool instances to be run using AWS Spot instances.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "maxPrice": {
                  "description": "MaxPrice defines the maximum price the user is willing to pay for Spot VM instances",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "sshKeyName": {
              "description": "SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string\n(do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)",
              "type": [
                "string",
                "null"
              ]
            },
            "versionNumber": {
              "description": "VersionNumber is the version of the launch template that is applied.\nTypically a new version is created when at least one of the following happens:\n1) A new launch template spec is applied.\n2) One or more parameters in an existing template is changed.\n3) A new AMI is discovered.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            }
          },
          "additionalProperties": false
        },
        "capacityType": {
          "description": "CapacityType specifies the capacity type for the ASG behind this pool",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "onDemand",
            "spot"
          ]
        },
        "diskSize": {
          "description": "DiskSize specifies the root disk size",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "eksNodegroupName": {
          "description": "EKSNodegroupName specifies the name of the nodegroup in AWS\ncorresponding to this MachinePool. If you don't specify a name\nthen a default name will be created based on the namespace and\nname of the managed machine pool.",
          "type": [
            "string",
            "null"
          ]
        },
        "instanceType": {
          "description": "InstanceType specifies the AWS instance type",
          "type": [
            "string",
            "null"
          ]
        },
        "labels": {
          "description": "Labels specifies labels for the Kubernetes node objects",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "providerIDList": {
          "description": "ProviderIDList are the provider IDs of instances in the\nautoscaling group corresponding to the nodegroup represented by this\nmachine pool",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "remoteAccess": {
          "description": "RemoteAccess specifies how machines can be accessed remotely",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "public": {
              "description": "Public specifies whether to open port 22 to the public internet",
              "type": [
                "boolean",
                "null"
              ]
            },
            "sourceSecurityGroups": {
              "description": "SourceSecurityGroups specifies which security groups are allowed access",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "sshKeyName": {
              "description": "SSHKeyName specifies which EC2 SSH key can be used to access machines.\nIf left empty, the key from the control plane is used.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "roleAdditionalPolicies": {
          "description": "RoleAdditionalPolicies allows you to attach additional polices to\nthe node group role. You must enable the EKSAllowAddRoles\nfeature flag to incorporate these into the created role.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "roleName": {
          "description": "RoleName specifies the name of IAM role for the node group.\nIf the role is pre-existing we will treat it as unmanaged\nand not delete it on deletion. If the EKSEnableIAM feature\nflag is true and no name is supplied then a role is created.",
          "type": [
            "string",
            "null"
          ]
        },
        "scaling": {
          "description": "Scaling specifies scaling for the ASG behind this pool",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "maxSize": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "minSize": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "subnetIDs": {
          "description": "SubnetIDs specifies which subnets are used for the\nauto scaling group of this nodegroup",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "taints": {
          "description": "Taints specifies the taints to apply to the nodes of the machine pool",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Taint defines the specs for a Kubernetes taint.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "effect",
              "key",
              "value"
            ],
            "properties": {
              "effect": {
                "description": "Effect specifies the effect for the taint",
                "type": "string",
                "enum": [
                  "no-schedule",
                  "no-execute",
                  "prefer-no-schedule"
                ]
              },
              "key": {
                "description": "Key is the key of the taint",
                "type": "string"
              },
              "value": {
                "description": "Value is the value of the taint",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "updateConfig": {
          "description": "UpdateConfig holds the optional config to control the behaviour of the update\nto the nodegroup.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "maxUnavailable": {
              "description": "MaxUnavailable is the maximum number of nodes unavailable at once during a version update.\nNodes will be updated in parallel. The maximum number is 100.",
              "type": [
                "integer",
                "null"
              ],
              "maximum": 100,
              "minimum": 1
            },
            "maxUnavailablePercentage": {
              "description": "MaxUnavailablePercentage is the maximum percentage of nodes unavailable during a version update. This\npercentage of nodes will be updated in parallel, up to 100 nodes at once.",
              "type": [
                "integer",
                "null"
              ],
              "maximum": 100,
              "minimum": 1
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "AWSManagedMachinePoolStatus defines the observed state of AWSManagedMachinePool.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "ready"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions defines current service state of the managed machine pool",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may not be empty.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "severity": {
                "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "failureMessage": {
          "description": "FailureMessage will be set in the event that there is a terminal problem\nreconciling the MachinePool and will contain a more verbose string suitable\nfor logging and human consumption.\n\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the MachinePool's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\n\nAny transient errors that occur during the reconciliation of MachinePools\ncan be added as events to the MachinePool object and/or logged in the\ncontroller's output.",
          "type": [
            "string",
            "null"
          ]
        },
        "failureReason": {
          "description": "FailureReason will be set in the event that there is a terminal problem\nreconciling the MachinePool and will contain a succinct value suitable\nfor machine interpretation.\n\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the Machine's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\n\nAny transient errors that occur during the reconciliation of MachinePools\ncan be added as events to the MachinePool object and/or logged in the\ncontroller's output.",
          "type": [
            "string",
            "null"
          ]
        },
        "launchTemplateID": {
          "description": "The ID of the launch template",
          "type": [
            "string",
            "null"
          ]
        },
        "launchTemplateVersion": {
          "description": "The version of the launch template",
          "type": [
            "string",
            "null"
          ]
        },
        "ready": {
          "description": "Ready denotes that the AWSManagedMachinePool nodegroup has joined\nthe cluster",
          "type": "boolean"
        },
        "replicas": {
          "description": "Replicas is the most recently observed number of replicas.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "infrastructure.cluster.x-k8s.io",
      "kind": "AWSManagedMachinePool",
      "version": "v1beta2"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}