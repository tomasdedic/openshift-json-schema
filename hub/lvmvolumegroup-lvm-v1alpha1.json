{
  "description": "LVMVolumeGroup is the Schema for the lvmvolumegroups API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "lvm.topolvm.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "LVMVolumeGroup"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "LVMVolumeGroupSpec defines the desired state of LVMVolumeGroup",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "thinPoolConfig"
      ],
      "properties": {
        "default": {
          "description": "Default is a flag to indicate whether the device-class is the default",
          "type": [
            "boolean",
            "null"
          ]
        },
        "deviceSelector": {
          "description": "DeviceSelector is a set of rules that should match for a device to be included in this TopoLVMCluster",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "optionalPaths": {
              "description": "A list of device paths which could be chosen for creating Volume Group. For example \"/dev/disk/by-path/pci-0000:04:00.0-nvme-1\" We discourage using the device names as they can change over node restarts.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "paths": {
              "description": "A list of device paths which would be chosen for creating Volume Group. For example \"/dev/disk/by-path/pci-0000:04:00.0-nvme-1\" We discourage using the device names as they can change over node restarts.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "additionalProperties": false
        },
        "nodeSelector": {
          "description": "NodeSelector chooses nodes",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "nodeSelectorTerms"
          ],
          "properties": {
            "nodeSelectorTerms": {
              "description": "Required. A list of node selector terms. The terms are ORed.",
              "type": "array",
              "items": {
                "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "matchExpressions": {
                    "description": "A list of node selector requirements by node's labels.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "The label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                          "type": "string"
                        },
                        "values": {
                          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "matchFields": {
                    "description": "A list of node selector requirements by node's fields.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "The label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                          "type": "string"
                        },
                        "values": {
                          "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "thinPoolConfig": {
          "description": "ThinPoolConfig contains configurations for the thin-pool",
          "type": "object",
          "required": [
            "name",
            "overprovisionRatio"
          ],
          "properties": {
            "name": {
              "description": "Name of the thin pool to be created",
              "type": "string"
            },
            "overprovisionRatio": {
              "description": "OverProvisionRatio is the factor by which additional storage can be provisioned compared to the available storage in the thin pool.",
              "type": "integer",
              "minimum": 1
            },
            "sizePercent": {
              "description": "SizePercent specifies the percentage of space in the LVM volume group for creating the thin pool. If the size configuration is 100, the whole disk will be used. By default, 90% of the disk is used for the thin pool to allow for data or metadata expansion later on.",
              "type": [
                "integer",
                "null"
              ],
              "maximum": 100,
              "minimum": 10
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "LVMVolumeGroupStatus defines the observed state of LVMVolumeGroup",
      "type": [
        "object",
        "null"
      ]
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "lvm.topolvm.io",
      "kind": "LVMVolumeGroup",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}