{
  "description": "Observatorium is the Schema for the observatoria API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "core.observatorium.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Observatorium"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ObservatoriumSpec defines the desired state of Observatorium",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "hashrings",
        "objectStorageConfig"
      ],
      "properties": {
        "affinity": {
          "description": "Affinity causes all components to be scheduled on nodes with matching rules.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "nodeAffinity": {
              "description": "Describes node affinity scheduling rules for the pod.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "preference",
                      "weight"
                    ],
                    "properties": {
                      "preference": {
                        "description": "A node selector term, associated with the corresponding weight.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "A list of node selector requirements by node's labels.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "matchFields": {
                            "description": "A list of node selector requirements by node's fields.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "weight": {
                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "nodeSelectorTerms"
                  ],
                  "properties": {
                    "nodeSelectorTerms": {
                      "description": "Required. A list of node selector terms. The terms are ORed.",
                      "type": "array",
                      "items": {
                        "description": "A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "matchExpressions": {
                            "description": "A list of node selector requirements by node's labels.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "matchFields": {
                            "description": "A list of node selector requirements by node's fields.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "podAffinity": {
              "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "podAffinityTerm",
                      "weight"
                    ],
                    "properties": {
                      "podAffinityTerm": {
                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                        "type": "object",
                        "required": [
                          "topologyKey"
                        ],
                        "properties": {
                          "labelSelector": {
                            "description": "A label query over a set of resources, in this case pods.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "namespaces": {
                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "topologyKey": {
                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "weight": {
                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "description": "If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "topologyKey"
                    ],
                    "properties": {
                      "labelSelector": {
                        "description": "A label query over a set of resources, in this case pods.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "namespaces": {
                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "topologyKey": {
                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "podAntiAffinity": {
              "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "podAffinityTerm",
                      "weight"
                    ],
                    "properties": {
                      "podAffinityTerm": {
                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                        "type": "object",
                        "required": [
                          "topologyKey"
                        ],
                        "properties": {
                          "labelSelector": {
                            "description": "A label query over a set of resources, in this case pods.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "additionalProperties": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "namespaces": {
                            "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "topologyKey": {
                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "weight": {
                        "description": "weight associated with matching the corresponding podAffinityTerm, in the range 1-100.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "description": "If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "topologyKey"
                    ],
                    "properties": {
                      "labelSelector": {
                        "description": "A label query over a set of resources, in this case pods.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "namespaces": {
                        "description": "namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means \"this pod's namespace\"",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "topologyKey": {
                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "api": {
          "description": "API",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "rbac",
            "tenants"
          ],
          "properties": {
            "additionalWriteEndpoints": {
              "description": "AdditionalWriteEndpoints is a slice of additional write endpoint for the Observatorium API.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "endpointsConfigSecret"
              ],
              "properties": {
                "endpointsConfigSecret": {
                  "description": "Secret name for the endpoints configuration",
                  "type": "string"
                },
                "mountPath": {
                  "description": "Mount path for the secrets",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "mountSecrets": {
                  "description": "Secret list to be mounted",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "additionalProperties": false
            },
            "image": {
              "description": "API image",
              "type": [
                "string",
                "null"
              ]
            },
            "imagePullPolicy": {
              "description": "API image pull policy",
              "type": [
                "string",
                "null"
              ]
            },
            "rbac": {
              "description": "RBAC is an RBAC configuration for the Observatorium API.",
              "type": "object",
              "required": [
                "roleBindings",
                "roles"
              ],
              "properties": {
                "roleBindings": {
                  "description": "RoleBindings is a slice of Observatorium API role bindings.",
                  "type": "array",
                  "items": {
                    "description": "RBACRoleBinding binds a set of roles to a set of subjects.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "roles",
                      "subjects"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name is the name of the role binding.",
                        "type": "string"
                      },
                      "roles": {
                        "description": "Roles is a list of roles that will be bound.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "subjects": {
                        "description": "Subjects is a list of subjects who will be given access to the specified roles.",
                        "type": "array",
                        "items": {
                          "description": "Subject represents a subject to which an RBAC role can be bound.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "kind",
                            "name"
                          ],
                          "properties": {
                            "kind": {
                              "description": "SubjectKind is a kind of Observatorium subject.",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "roles": {
                  "description": "Roles is a slice of Observatorium API roles.",
                  "type": "array",
                  "items": {
                    "description": "RBACRole describes a set of permissions to interact with a tenant.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "permissions",
                      "resources",
                      "tenants"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name is the name of the role.",
                        "type": "string"
                      },
                      "permissions": {
                        "description": "Permissions is a list of permissions that will be granted.",
                        "type": "array",
                        "items": {
                          "description": "Permission is an Observatorium RBAC permission.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "resources": {
                        "description": "Resources is a list of resources to which access will be granted.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "tenants": {
                        "description": "Tenants is a list of tenants whose resources will be considered.",
                        "type": "array",
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "replicas": {
              "description": "Number of API replicas.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "resources": {
              "description": "Compute Resources required by this container.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  }
                }
              },
              "additionalProperties": false
            },
            "serviceMonitor": {
              "description": "ServiceMonitor enables servicemonitor.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "tenants": {
              "description": "Tenants is a slice of tenants for the Observatorium API.",
              "type": "array",
              "items": {
                "description": "APITenant represents a tenant in the Observatorium API.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "mTLS": {
                    "description": "TenantMTLS represents the mTLS configuration for an Observatorium API tenant.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "caKey"
                    ],
                    "properties": {
                      "caKey": {
                        "type": "string"
                      },
                      "configMapName": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "secretName": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "type": "string"
                  },
                  "oidc": {
                    "description": "TenantOIDC represents the OIDC configuration for an Observatorium API tenant.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "clientID",
                      "issuerURL"
                    ],
                    "properties": {
                      "caKey": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "clientID": {
                        "type": "string"
                      },
                      "clientSecret": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "configMapName": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "issuerCAPath": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "issuerURL": {
                        "type": "string"
                      },
                      "redirectURL": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "usernameClaim": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "tls": {
              "description": "TLS configuration for the Observatorium API.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "certKey",
                "keyKey",
                "secretName"
              ],
              "properties": {
                "caKey": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "certKey": {
                  "type": "string"
                },
                "configMapName": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "keyKey": {
                  "type": "string"
                },
                "reloadInterval": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "secretName": {
                  "type": "string"
                },
                "serverName": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "version": {
              "description": "Version describes the version of API to use.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "envVars": {
          "description": "EnvVars define the common environment variables. EnvVars apply to thanos compact/receive/rule/store components",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "hashrings": {
          "description": "Hashrings describes a list of Hashrings",
          "type": "array",
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "hashring"
            ],
            "properties": {
              "hashring": {
                "description": "Thanos Hashring name",
                "type": "string"
              },
              "tenants": {
                "description": "Tenants describes a lists of tenants.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            },
            "additionalProperties": false
          }
        },
        "loki": {
          "description": "Loki",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "image",
            "volumeClaimTemplate"
          ],
          "properties": {
            "image": {
              "description": "Loki image",
              "type": "string"
            },
            "imagePullPolicy": {
              "description": "Loki image pull policy",
              "type": [
                "string",
                "null"
              ]
            },
            "replicas": {
              "description": "Loki replicas per component",
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int32"
              }
            },
            "version": {
              "description": "Version of Loki image to be deployed",
              "type": [
                "string",
                "null"
              ]
            },
            "volumeClaimTemplate": {
              "description": "VolumeClaimTemplate",
              "type": "object",
              "required": [
                "spec"
              ],
              "properties": {
                "spec": {
                  "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
                  "type": "object",
                  "properties": {
                    "accessModes": {
                      "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "dataSource": {
                      "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "kind",
                        "name"
                      ],
                      "properties": {
                        "apiGroup": {
                          "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "kind": {
                          "description": "Kind is the type of resource being referenced",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of resource being referenced",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "resources": {
                      "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "selector": {
                      "description": "A label query over volumes to consider for binding.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "storageClassName": {
                      "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "volumeMode": {
                      "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "volumeName": {
                      "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "nodeSelector": {
          "description": "NodeSelector causes all components to be scheduled on nodes with matching labels.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "objectStorageConfig": {
          "description": "Objest Storage Configuration",
          "type": "object",
          "required": [
            "thanos"
          ],
          "properties": {
            "loki": {
              "description": "Object Store Config Secret for Loki",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "secretName"
              ],
              "properties": {
                "accessKeyIdKey": {
                  "description": "Object Store Config key for AWS_ACCESS_KEY_ID",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "bucketsKey": {
                  "description": "Object Store Config key for S3_BUCKETS",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "endpointKey": {
                  "description": "Object Store Config key for S3_URL",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "regionKey": {
                  "description": "Object Store Config key for S3_REGION",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "secretAccessKeyKey": {
                  "description": "Object Store Config key for AWS_SECRET_ACCESS_KEY",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "secretName": {
                  "description": "Object Store Config Secret Name",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "thanos": {
              "description": "Object Store Config Secret for Thanos",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "description": "Object Store Config key",
                  "type": "string"
                },
                "name": {
                  "description": "Object Store Config Secret Name",
                  "type": "string"
                },
                "serviceAccountProjection": {
                  "description": "When set to true, mounts service account token in thanos store, ruler, compact and receiver pods. Default is false.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "tlsSecretMountPath": {
                  "description": "TLS secret mount path in thanos store/ruler/compact/receiver",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "tlsSecretName": {
                  "description": "TLS secret contains the custom certificate for the object store",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "pullSecret": {
          "description": "Pull secret used to pull the images.",
          "type": [
            "string",
            "null"
          ]
        },
        "securityContext": {
          "description": "Security options the pod should run with.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "allowPrivilegeEscalation": {
              "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
              "type": [
                "boolean",
                "null"
              ]
            },
            "capabilities": {
              "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "add": {
                  "description": "Added capabilities",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "drop": {
                  "description": "Removed capabilities",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "additionalProperties": false
            },
            "privileged": {
              "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "procMount": {
              "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
              "type": [
                "string",
                "null"
              ]
            },
            "readOnlyRootFilesystem": {
              "description": "Whether this container has a read-only root filesystem. Default is false.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "runAsGroup": {
              "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "runAsNonRoot": {
              "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
              "type": [
                "boolean",
                "null"
              ]
            },
            "runAsUser": {
              "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int64"
            },
            "seLinuxOptions": {
              "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "level": {
                  "description": "Level is SELinux level label that applies to the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "role": {
                  "description": "Role is a SELinux role label that applies to the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "type": {
                  "description": "Type is a SELinux type label that applies to the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "user": {
                  "description": "User is a SELinux user label that applies to the container.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "seccompProfile": {
              "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "type": {
                  "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "windowsOptions": {
              "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "gmsaCredentialSpec": {
                  "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "gmsaCredentialSpecName": {
                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "runAsUserName": {
                  "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "thanos": {
          "description": "Thanos Spec",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "compact",
            "receivers",
            "rule",
            "store"
          ],
          "properties": {
            "compact": {
              "description": "Thanos CompactSpec",
              "type": "object",
              "required": [
                "retentionResolution1h",
                "retentionResolution5m",
                "retentionResolutionRaw",
                "volumeClaimTemplate"
              ],
              "properties": {
                "containers": {
                  "description": "The container object, provides a way to override parameters of existing containers. Currently only the `args` value are overwritten.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A single application container that you want to run within a pod.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "args": {
                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "command": {
                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "env": {
                        "description": "List of environment variables to set in the container. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvVar represents an environment variable present in a Container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "valueFrom": {
                              "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvFromSource represents the source of a set of ConfigMaps",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMapRef": {
                              "description": "The ConfigMap to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "prefix": {
                              "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "The Secret to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "imagePullPolicy": {
                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "lifecycle": {
                        "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "postStart": {
                            "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "preStop": {
                            "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "livenessProbe": {
                        "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                        "type": "string"
                      },
                      "ports": {
                        "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "ContainerPort represents a network port in a single container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "containerPort"
                          ],
                          "properties": {
                            "containerPort": {
                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "description": "What host IP to bind the external port to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostPort": {
                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "name": {
                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "containerPort",
                          "protocol"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "readinessProbe": {
                        "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "resources": {
                        "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "limits": {
                            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "capabilities": {
                            "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "add": {
                                "description": "Added capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "drop": {
                                "description": "Removed capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "procMount": {
                            "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnlyRootFilesystem": {
                            "description": "Whether this container has a read-only root filesystem. Default is false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsGroup": {
                            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsUser": {
                            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "level": {
                                "description": "Level is SELinux level label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "role": {
                                "description": "Role is a SELinux role label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "Type is a SELinux type label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "user": {
                                "description": "User is a SELinux user label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "gmsaCredentialSpec": {
                                "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "gmsaCredentialSpecName": {
                                "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "runAsUserName": {
                                "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "startupProbe": {
                        "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "stdin": {
                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "stdinOnce": {
                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "terminationMessagePath": {
                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "terminationMessagePolicy": {
                        "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tty": {
                        "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "volumeDevices": {
                        "description": "volumeDevices is the list of block devices to be used by the container.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "volumeDevice describes a mapping of a raw block device within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "devicePath",
                            "name"
                          ],
                          "properties": {
                            "devicePath": {
                              "description": "devicePath is the path inside of the container that the device will be mapped to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "name must match the name of a persistentVolumeClaim in the pod",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "volumeMounts": {
                        "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "VolumeMount describes a mounting of a Volume within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                              "type": "string"
                            },
                            "mountPropagation": {
                              "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subPathExpr": {
                              "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "deleteDelay": {
                  "description": "Time before a block marked for deletion is deleted from bucket",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "enableDownsampling": {
                  "description": "EnableDownsampling enables downsampling.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "replicas": {
                  "description": "Number of Compact replicas.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "resources": {
                  "description": "Compute Resources required by this container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "retentionResolution1h": {
                  "description": "RetentionResolutionRaw",
                  "type": "string"
                },
                "retentionResolution5m": {
                  "description": "RetentionResolutionRaw",
                  "type": "string"
                },
                "retentionResolutionRaw": {
                  "description": "RetentionResolutionRaw",
                  "type": "string"
                },
                "serviceAccountAnnotations": {
                  "description": "Annotations is an unstructured key value map stored with a service account",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "serviceMonitor": {
                  "description": "ServiceMonitor enables servicemonitor.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate",
                  "type": "object",
                  "required": [
                    "spec"
                  ],
                  "properties": {
                    "spec": {
                      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "dataSource": {
                          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "kind",
                            "name"
                          ],
                          "properties": {
                            "apiGroup": {
                              "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "kind": {
                              "description": "Kind is the type of resource being referenced",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the name of resource being referenced",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "resources": {
                          "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "limits": {
                              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "requests": {
                              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "selector": {
                          "description": "A label query over volumes to consider for binding.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "matchExpressions": {
                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "matchLabels": {
                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "storageClassName": {
                          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "volumeMode": {
                          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "volumeName": {
                          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "image": {
              "description": "Thanos image",
              "type": [
                "string",
                "null"
              ]
            },
            "imagePullPolicy": {
              "description": "Thanos image pull policy",
              "type": [
                "string",
                "null"
              ]
            },
            "query": {
              "description": "Query",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "containers": {
                  "description": "The container object, provides a way to override parameters of existing containers. Currently only the `args` value are overwritten.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A single application container that you want to run within a pod.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "args": {
                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "command": {
                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "env": {
                        "description": "List of environment variables to set in the container. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvVar represents an environment variable present in a Container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "valueFrom": {
                              "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvFromSource represents the source of a set of ConfigMaps",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMapRef": {
                              "description": "The ConfigMap to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "prefix": {
                              "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "The Secret to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "imagePullPolicy": {
                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "lifecycle": {
                        "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "postStart": {
                            "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "preStop": {
                            "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "livenessProbe": {
                        "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                        "type": "string"
                      },
                      "ports": {
                        "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "ContainerPort represents a network port in a single container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "containerPort"
                          ],
                          "properties": {
                            "containerPort": {
                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "description": "What host IP to bind the external port to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostPort": {
                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "name": {
                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "containerPort",
                          "protocol"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "readinessProbe": {
                        "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "resources": {
                        "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "limits": {
                            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "capabilities": {
                            "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "add": {
                                "description": "Added capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "drop": {
                                "description": "Removed capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "procMount": {
                            "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnlyRootFilesystem": {
                            "description": "Whether this container has a read-only root filesystem. Default is false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsGroup": {
                            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsUser": {
                            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "level": {
                                "description": "Level is SELinux level label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "role": {
                                "description": "Role is a SELinux role label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "Type is a SELinux type label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "user": {
                                "description": "User is a SELinux user label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "gmsaCredentialSpec": {
                                "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "gmsaCredentialSpecName": {
                                "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "runAsUserName": {
                                "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "startupProbe": {
                        "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "stdin": {
                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "stdinOnce": {
                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "terminationMessagePath": {
                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "terminationMessagePolicy": {
                        "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tty": {
                        "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "volumeDevices": {
                        "description": "volumeDevices is the list of block devices to be used by the container.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "volumeDevice describes a mapping of a raw block device within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "devicePath",
                            "name"
                          ],
                          "properties": {
                            "devicePath": {
                              "description": "devicePath is the path inside of the container that the device will be mapped to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "name must match the name of a persistentVolumeClaim in the pod",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "volumeMounts": {
                        "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "VolumeMount describes a mounting of a Volume within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                              "type": "string"
                            },
                            "mountPropagation": {
                              "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subPathExpr": {
                              "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "lookbackDelta": {
                  "description": "The maximum lookback duration for retrieving metrics during expression evaluations.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "replicas": {
                  "description": "Number of Query replicas.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "resources": {
                  "description": "Compute Resources required by this container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "serviceAccountAnnotations": {
                  "description": "Annotations is an unstructured key value map stored with a service account",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "serviceMonitor": {
                  "description": "ServiceMonitor enables servicemonitor.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "queryFrontend": {
              "description": "Thanos QueryFrontend",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "cache": {
                  "description": "Memcached spec for QueryFrontend",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "connectionLimit": {
                      "description": "Max simultaneous connections",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    },
                    "exporterImage": {
                      "description": "Memcached Prometheus Exporter image",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "exporterImagePullPolicy": {
                      "description": "Memcached Prometheus Exporter image image pull policy",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "exporterResources": {
                      "description": "Compute Resources required by this container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "exporterVersion": {
                      "description": "Version of Memcached Prometheus Exporter image to be deployed.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "image": {
                      "description": "Memcached image",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "imagePullPolicy": {
                      "description": "Memcached image pull policy",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "maxItemSize": {
                      "description": "Max item size (default: 1m, min: 1k, max: 1024m)",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "memoryLimitMb": {
                      "description": "Memory limit of Memcached in megabytes.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    },
                    "replicas": {
                      "description": "Number of Memcached replicas.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    },
                    "resources": {
                      "description": "Compute Resources required by this container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "serviceMonitor": {
                      "description": "ServiceMonitor enables servicemonitor.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "version": {
                      "description": "Version of Memcached image to be deployed.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "containers": {
                  "description": "The container object, provides a way to override parameters of existing containers. Currently only the `args` value are overwritten.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A single application container that you want to run within a pod.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "args": {
                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "command": {
                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "env": {
                        "description": "List of environment variables to set in the container. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvVar represents an environment variable present in a Container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "valueFrom": {
                              "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvFromSource represents the source of a set of ConfigMaps",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMapRef": {
                              "description": "The ConfigMap to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "prefix": {
                              "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "The Secret to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "imagePullPolicy": {
                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "lifecycle": {
                        "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "postStart": {
                            "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "preStop": {
                            "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "livenessProbe": {
                        "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                        "type": "string"
                      },
                      "ports": {
                        "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "ContainerPort represents a network port in a single container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "containerPort"
                          ],
                          "properties": {
                            "containerPort": {
                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "description": "What host IP to bind the external port to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostPort": {
                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "name": {
                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "containerPort",
                          "protocol"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "readinessProbe": {
                        "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "resources": {
                        "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "limits": {
                            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "capabilities": {
                            "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "add": {
                                "description": "Added capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "drop": {
                                "description": "Removed capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "procMount": {
                            "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnlyRootFilesystem": {
                            "description": "Whether this container has a read-only root filesystem. Default is false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsGroup": {
                            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsUser": {
                            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "level": {
                                "description": "Level is SELinux level label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "role": {
                                "description": "Role is a SELinux role label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "Type is a SELinux type label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "user": {
                                "description": "User is a SELinux user label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "gmsaCredentialSpec": {
                                "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "gmsaCredentialSpecName": {
                                "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "runAsUserName": {
                                "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "startupProbe": {
                        "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "stdin": {
                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "stdinOnce": {
                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "terminationMessagePath": {
                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "terminationMessagePolicy": {
                        "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tty": {
                        "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "volumeDevices": {
                        "description": "volumeDevices is the list of block devices to be used by the container.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "volumeDevice describes a mapping of a raw block device within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "devicePath",
                            "name"
                          ],
                          "properties": {
                            "devicePath": {
                              "description": "devicePath is the path inside of the container that the device will be mapped to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "name must match the name of a persistentVolumeClaim in the pod",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "volumeMounts": {
                        "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "VolumeMount describes a mounting of a Volume within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                              "type": "string"
                            },
                            "mountPropagation": {
                              "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subPathExpr": {
                              "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "replicas": {
                  "description": "Number of Query Frontend replicas.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "resources": {
                  "description": "Compute Resources required by this container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "serviceMonitor": {
                  "description": "ServiceMonitor enables servicemonitor.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "receiveController": {
              "description": "Thanos Receive Controller Spec",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "image": {
                  "description": "Receive Controller image",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "imagePullPolicy": {
                  "description": "Receive image pull policy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "resources": {
                  "description": "Compute Resources required by this container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "serviceMonitor": {
                  "description": "ServiceMonitor enables servicemonitor.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "version": {
                  "description": "Version describes the version of Thanos receive controller to use.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "receivers": {
              "description": "Thanos ThanosPersistentSpec",
              "type": "object",
              "required": [
                "volumeClaimTemplate"
              ],
              "properties": {
                "containers": {
                  "description": "The container object, provides a way to override parameters of existing containers. Currently only the `args` value are overwritten.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A single application container that you want to run within a pod.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "args": {
                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "command": {
                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "env": {
                        "description": "List of environment variables to set in the container. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvVar represents an environment variable present in a Container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "valueFrom": {
                              "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvFromSource represents the source of a set of ConfigMaps",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMapRef": {
                              "description": "The ConfigMap to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "prefix": {
                              "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "The Secret to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "imagePullPolicy": {
                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "lifecycle": {
                        "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "postStart": {
                            "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "preStop": {
                            "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "livenessProbe": {
                        "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                        "type": "string"
                      },
                      "ports": {
                        "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "ContainerPort represents a network port in a single container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "containerPort"
                          ],
                          "properties": {
                            "containerPort": {
                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "description": "What host IP to bind the external port to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostPort": {
                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "name": {
                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "containerPort",
                          "protocol"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "readinessProbe": {
                        "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "resources": {
                        "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "limits": {
                            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "capabilities": {
                            "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "add": {
                                "description": "Added capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "drop": {
                                "description": "Removed capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "procMount": {
                            "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnlyRootFilesystem": {
                            "description": "Whether this container has a read-only root filesystem. Default is false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsGroup": {
                            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsUser": {
                            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "level": {
                                "description": "Level is SELinux level label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "role": {
                                "description": "Role is a SELinux role label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "Type is a SELinux type label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "user": {
                                "description": "User is a SELinux user label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "gmsaCredentialSpec": {
                                "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "gmsaCredentialSpecName": {
                                "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "runAsUserName": {
                                "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "startupProbe": {
                        "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "stdin": {
                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "stdinOnce": {
                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "terminationMessagePath": {
                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "terminationMessagePolicy": {
                        "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tty": {
                        "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "volumeDevices": {
                        "description": "volumeDevices is the list of block devices to be used by the container.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "volumeDevice describes a mapping of a raw block device within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "devicePath",
                            "name"
                          ],
                          "properties": {
                            "devicePath": {
                              "description": "devicePath is the path inside of the container that the device will be mapped to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "name must match the name of a persistentVolumeClaim in the pod",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "volumeMounts": {
                        "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "VolumeMount describes a mounting of a Volume within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                              "type": "string"
                            },
                            "mountPropagation": {
                              "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subPathExpr": {
                              "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "replicas": {
                  "description": "Number of Receiver replicas.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "replicationFactor": {
                  "description": "ReplicationFactor defines the number of copies of every time-series",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "resources": {
                  "description": "Compute Resources required by this container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "retention": {
                  "description": "How long to retain raw samples on local storage",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "serviceAccountAnnotations": {
                  "description": "Annotations is an unstructured key value map stored with a service account",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "serviceMonitor": {
                  "description": "ServiceMonitor enables servicemonitor.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate",
                  "type": "object",
                  "required": [
                    "spec"
                  ],
                  "properties": {
                    "spec": {
                      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "dataSource": {
                          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "kind",
                            "name"
                          ],
                          "properties": {
                            "apiGroup": {
                              "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "kind": {
                              "description": "Kind is the type of resource being referenced",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the name of resource being referenced",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "resources": {
                          "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "limits": {
                              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "requests": {
                              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "selector": {
                          "description": "A label query over volumes to consider for binding.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "matchExpressions": {
                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "matchLabels": {
                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "storageClassName": {
                          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "volumeMode": {
                          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "volumeName": {
                          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "rule": {
              "description": "Thanos RulerSpec",
              "type": "object",
              "required": [
                "volumeClaimTemplate"
              ],
              "properties": {
                "alertmanagerConfigFile": {
                  "description": "AlertmanagerConfigFile",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "description": "Alertmanager ConfigMap key",
                      "type": "string"
                    },
                    "name": {
                      "description": "Alertmanager ConfigMap Name",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "alertmanagerURLs": {
                  "description": "AlertmanagerURLs",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "blockDuration": {
                  "description": "Block duration for TSDB block",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "containers": {
                  "description": "The container object, provides a way to override parameters of existing containers. Currently only the `args` value are overwritten.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A single application container that you want to run within a pod.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "args": {
                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "command": {
                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "env": {
                        "description": "List of environment variables to set in the container. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvVar represents an environment variable present in a Container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "valueFrom": {
                              "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvFromSource represents the source of a set of ConfigMaps",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMapRef": {
                              "description": "The ConfigMap to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "prefix": {
                              "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "The Secret to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "imagePullPolicy": {
                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "lifecycle": {
                        "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "postStart": {
                            "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "preStop": {
                            "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "livenessProbe": {
                        "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                        "type": "string"
                      },
                      "ports": {
                        "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "ContainerPort represents a network port in a single container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "containerPort"
                          ],
                          "properties": {
                            "containerPort": {
                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "description": "What host IP to bind the external port to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostPort": {
                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "name": {
                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "containerPort",
                          "protocol"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "readinessProbe": {
                        "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "resources": {
                        "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "limits": {
                            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "capabilities": {
                            "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "add": {
                                "description": "Added capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "drop": {
                                "description": "Removed capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "procMount": {
                            "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnlyRootFilesystem": {
                            "description": "Whether this container has a read-only root filesystem. Default is false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsGroup": {
                            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsUser": {
                            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "level": {
                                "description": "Level is SELinux level label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "role": {
                                "description": "Role is a SELinux role label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "Type is a SELinux type label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "user": {
                                "description": "User is a SELinux user label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "gmsaCredentialSpec": {
                                "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "gmsaCredentialSpecName": {
                                "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "runAsUserName": {
                                "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "startupProbe": {
                        "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "stdin": {
                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "stdinOnce": {
                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "terminationMessagePath": {
                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "terminationMessagePolicy": {
                        "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tty": {
                        "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "volumeDevices": {
                        "description": "volumeDevices is the list of block devices to be used by the container.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "volumeDevice describes a mapping of a raw block device within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "devicePath",
                            "name"
                          ],
                          "properties": {
                            "devicePath": {
                              "description": "devicePath is the path inside of the container that the device will be mapped to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "name must match the name of a persistentVolumeClaim in the pod",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "volumeMounts": {
                        "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "VolumeMount describes a mounting of a Volume within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                              "type": "string"
                            },
                            "mountPropagation": {
                              "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subPathExpr": {
                              "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "evalInterval": {
                  "description": "Evaluation interval",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "extraVolumeMounts": {
                  "description": "ExtraVolumeMounts",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key",
                      "mountPath",
                      "name",
                      "type"
                    ],
                    "properties": {
                      "key": {
                        "description": "File name for the mount",
                        "type": "string"
                      },
                      "mountPath": {
                        "description": "Volume mount path in the pod",
                        "type": "string"
                      },
                      "name": {
                        "description": "Resource name for the volume mount source",
                        "type": "string"
                      },
                      "type": {
                        "description": "Voume mount type, configMap or secret",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "reloaderImage": {
                  "description": "ReloaderImage is an image of configmap reloader",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "reloaderImagePullPolicy": {
                  "description": "ReloaderImage image pull policy",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "reloaderResources": {
                  "description": "Compute Resources required by this container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "replicas": {
                  "description": "Number of Rule replicas.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "resources": {
                  "description": "Compute Resources required by this container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "retention": {
                  "description": "Block retention time on local disk",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "rulesConfig": {
                  "description": "RulesConfig configures rules from the configmaps",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "description": "Rule ConfigMap key",
                        "type": "string"
                      },
                      "name": {
                        "description": "Rule ConfigMap Name",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "serviceAccountAnnotations": {
                  "description": "Annotations is an unstructured key value map stored with a service account",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "serviceMonitor": {
                  "description": "ServiceMonitor enables servicemonitor.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate",
                  "type": "object",
                  "required": [
                    "spec"
                  ],
                  "properties": {
                    "spec": {
                      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "dataSource": {
                          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "kind",
                            "name"
                          ],
                          "properties": {
                            "apiGroup": {
                              "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "kind": {
                              "description": "Kind is the type of resource being referenced",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the name of resource being referenced",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "resources": {
                          "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "limits": {
                              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "requests": {
                              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "selector": {
                          "description": "A label query over volumes to consider for binding.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "matchExpressions": {
                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "matchLabels": {
                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "storageClassName": {
                          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "volumeMode": {
                          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "volumeName": {
                          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "store": {
              "description": "Thanos StoreSpec",
              "type": "object",
              "required": [
                "volumeClaimTemplate"
              ],
              "properties": {
                "cache": {
                  "description": "Memcached spec for Store",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "connectionLimit": {
                      "description": "Max simultaneous connections",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    },
                    "exporterImage": {
                      "description": "Memcached Prometheus Exporter image",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "exporterImagePullPolicy": {
                      "description": "Memcached Prometheus Exporter image image pull policy",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "exporterResources": {
                      "description": "Compute Resources required by this container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "exporterVersion": {
                      "description": "Version of Memcached Prometheus Exporter image to be deployed.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "image": {
                      "description": "Memcached image",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "imagePullPolicy": {
                      "description": "Memcached image pull policy",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "maxItemSize": {
                      "description": "Max item size (default: 1m, min: 1k, max: 1024m)",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "memoryLimitMb": {
                      "description": "Memory limit of Memcached in megabytes.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    },
                    "replicas": {
                      "description": "Number of Memcached replicas.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    },
                    "resources": {
                      "description": "Compute Resources required by this container.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "serviceMonitor": {
                      "description": "ServiceMonitor enables servicemonitor.",
                      "type": [
                        "boolean",
                        "null"
                      ]
                    },
                    "version": {
                      "description": "Version of Memcached image to be deployed.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "containers": {
                  "description": "The container object, provides a way to override parameters of existing containers. Currently only the `args` value are overwritten.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "A single application container that you want to run within a pod.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "args": {
                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "command": {
                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "env": {
                        "description": "List of environment variables to set in the container. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvVar represents an environment variable present in a Container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "valueFrom": {
                              "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "EnvFromSource represents the source of a set of ConfigMaps",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "configMapRef": {
                              "description": "The ConfigMap to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            },
                            "prefix": {
                              "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "secretRef": {
                              "description": "The Secret to select from",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "optional": {
                                  "description": "Specify whether the Secret must be defined",
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "imagePullPolicy": {
                        "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "lifecycle": {
                        "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "postStart": {
                            "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "preStop": {
                            "description": "PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "exec": {
                                "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies the http request to perform.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "additionalProperties": false
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "livenessProbe": {
                        "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.",
                        "type": "string"
                      },
                      "ports": {
                        "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "ContainerPort represents a network port in a single container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "containerPort"
                          ],
                          "properties": {
                            "containerPort": {
                              "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostIP": {
                              "description": "What host IP to bind the external port to.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "hostPort": {
                              "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.",
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32"
                            },
                            "name": {
                              "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "protocol": {
                              "description": "Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "containerPort",
                          "protocol"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "readinessProbe": {
                        "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "resources": {
                        "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "limits": {
                            "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "capabilities": {
                            "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "add": {
                                "description": "Added capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "drop": {
                                "description": "Removed capabilities",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "Capability represent POSIX capabilities type",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "procMount": {
                            "description": "procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "readOnlyRootFilesystem": {
                            "description": "Whether this container has a read-only root filesystem. Default is false.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsGroup": {
                            "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "runAsUser": {
                            "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "level": {
                                "description": "Level is SELinux level label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "role": {
                                "description": "Role is a SELinux role label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "Type is a SELinux type label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "user": {
                                "description": "User is a SELinux user label that applies to the container.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "description": "The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "description": "localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "type": {
                                "description": "type indicates which kind of seccomp profile will be applied. Valid options are: \n Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "description": "The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "gmsaCredentialSpec": {
                                "description": "GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "gmsaCredentialSpecName": {
                                "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "runAsUserName": {
                                "description": "The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "startupProbe": {
                        "description": "StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "exec": {
                            "description": "One and only one of the following should be specified. Exec specifies the action to take.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "command": {
                                "description": "Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "failureThreshold": {
                            "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "HTTPGet specifies the http request to perform.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "httpHeaders": {
                                "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Path to access on the HTTP server.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              },
                              "scheme": {
                                "description": "Scheme to use for connecting to the host. Defaults to HTTP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "successThreshold": {
                            "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "port": {
                                "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "stdin": {
                        "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "stdinOnce": {
                        "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "terminationMessagePath": {
                        "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "terminationMessagePolicy": {
                        "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "tty": {
                        "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "volumeDevices": {
                        "description": "volumeDevices is the list of block devices to be used by the container.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "volumeDevice describes a mapping of a raw block device within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "devicePath",
                            "name"
                          ],
                          "properties": {
                            "devicePath": {
                              "description": "devicePath is the path inside of the container that the device will be mapped to.",
                              "type": "string"
                            },
                            "name": {
                              "description": "name must match the name of a persistentVolumeClaim in the pod",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "volumeMounts": {
                        "description": "Pod volumes to mount into the container's filesystem. Cannot be updated.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "description": "VolumeMount describes a mounting of a Volume within a container.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                              "type": "string"
                            },
                            "mountPropagation": {
                              "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "This must match the Name of a Volume.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.",
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "subPath": {
                              "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "subPathExpr": {
                              "description": "Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "resources": {
                  "description": "Compute Resources required by this container.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "serviceAccountAnnotations": {
                  "description": "Annotations is an unstructured key value map stored with a service account",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "serviceMonitor": {
                  "description": "ServiceMonitor enables servicemonitor.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "shards": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "volumeClaimTemplate": {
                  "description": "VolumeClaimTemplate",
                  "type": "object",
                  "required": [
                    "spec"
                  ],
                  "properties": {
                    "spec": {
                      "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices and allows a Source for provider-specific attributes",
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "description": "AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "dataSource": {
                          "description": "This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "kind",
                            "name"
                          ],
                          "properties": {
                            "apiGroup": {
                              "description": "APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "kind": {
                              "description": "Kind is the type of resource being referenced",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the name of resource being referenced",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "resources": {
                          "description": "Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "limits": {
                              "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "requests": {
                              "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "selector": {
                          "description": "A label query over volumes to consider for binding.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "matchExpressions": {
                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                    "type": [
                                      "array",
                                      "null"
                                    ],
                                    "items": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "matchLabels": {
                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "additionalProperties": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "storageClassName": {
                          "description": "Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "volumeMode": {
                          "description": "volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "volumeName": {
                          "description": "VolumeName is the binding reference to the PersistentVolume backing this claim.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "version": {
              "description": "Version of Thanos image to be deployed.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "tolerations": {
          "description": "Tolerations causes all components to tolerate specified taints.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ObservatoriumStatus defines the observed state of Observatorium",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Represents the status of Observatorium",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "currentStatus",
              "lastTransitionTime",
              "name"
            ],
            "properties": {
              "currentStatus": {
                "type": "string"
              },
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "core.observatorium.io",
      "kind": "Observatorium",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}