{
  "description": "ClusterPool represents a pool of clusters that should be kept ready to be given out to users. Clusters are removed from the pool once claimed and then automatically replaced with a new one.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "hive.openshift.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ClusterPool"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ClusterPoolSpec defines the desired state of the ClusterPool.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "baseDomain",
        "imageSetRef",
        "platform",
        "size"
      ],
      "properties": {
        "annotations": {
          "description": "Annotations to be applied to new ClusterDeployments created for the pool. ClusterDeployments that have already been claimed will not be affected when this value is modified.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "baseDomain": {
          "description": "BaseDomain is the base domain to use for all clusters created in this pool.",
          "type": "string"
        },
        "claimLifetime": {
          "description": "ClaimLifetime defines the lifetimes for claims for the cluster pool.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "default": {
              "description": "Default is the default lifetime of the claim when no lifetime is set on the claim itself. This is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats. Note: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See https://bugzilla.redhat.com/show_bug.cgi?id=2050332 https://github.com/kubernetes/apimachinery/issues/131 https://github.com/kubernetes/apiextensions-apiserver/issues/56",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$"
            },
            "maximum": {
              "description": "Maximum is the maximum lifetime of the claim after it is assigned a cluster. If the claim still exists when the lifetime has elapsed, the claim will be deleted by Hive. The lifetime of a claim is the mimimum of the lifetimes set by the cluster pool and the claim itself. This is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats. Note: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See https://bugzilla.redhat.com/show_bug.cgi?id=2050332 https://github.com/kubernetes/apimachinery/issues/131 https://github.com/kubernetes/apiextensions-apiserver/issues/56",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$"
            }
          },
          "additionalProperties": false
        },
        "hibernateAfter": {
          "description": "HibernateAfter will be applied to new ClusterDeployments created for the pool. HibernateAfter will transition clusters in the clusterpool to hibernating power state after it has been running for the given duration. The time that a cluster has been running is the time since the cluster was installed or the time since the cluster last came out of hibernation. This is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats. Note: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See https://bugzilla.redhat.com/show_bug.cgi?id=2050332 https://github.com/kubernetes/apimachinery/issues/131 https://github.com/kubernetes/apiextensions-apiserver/issues/56",
          "type": [
            "string",
            "null"
          ],
          "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$"
        },
        "hibernationConfig": {
          "description": "HibernationConfig configures the hibernation/resume behavior of ClusterDeployments owned by the ClusterPool.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "resumeTimeout": {
              "description": "ResumeTimeout is the maximum amount of time we will wait for an unclaimed ClusterDeployment to resume from hibernation (e.g. at the behest of runningCount, or in preparation for being claimed). If this time is exceeded, the ClusterDeployment will be considered Broken and we will replace it. The default (unspecified or zero) means no timeout -- we will allow the ClusterDeployment to continue trying to resume \"forever\". This is a Duration value; see https://pkg.go.dev/time#ParseDuration for accepted formats. Note: due to discrepancies in validation vs parsing, we use a Pattern instead of `Format=duration`. See https://bugzilla.redhat.com/show_bug.cgi?id=2050332 https://github.com/kubernetes/apimachinery/issues/131 https://github.com/kubernetes/apiextensions-apiserver/issues/56",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$"
            }
          },
          "additionalProperties": false
        },
        "imageSetRef": {
          "description": "ImageSetRef is a reference to a ClusterImageSet. The release image specified in the ClusterImageSet will be used by clusters created for this cluster pool.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the ClusterImageSet that this refers to",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "installAttemptsLimit": {
          "description": "InstallAttemptsLimit is the maximum number of times Hive will attempt to install the cluster.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "installConfigSecretTemplateRef": {
          "description": "InstallConfigSecretTemplateRef is a secret with the key install-config.yaml consisting of the content of the install-config.yaml to be used as a template for all clusters in this pool. Cluster specific settings (name, basedomain) will be injected dynamically when the ClusterDeployment install-config Secret is generated.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "inventory": {
          "description": "Inventory maintains a list of entries consumed by the ClusterPool to customize the default ClusterDeployment.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "InventoryEntry maintains a reference to a custom resource consumed by a clusterpool to customize the cluster deployment.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "kind": {
                "description": "Kind denotes the kind of the referenced resource. The default is ClusterDeploymentCustomization, which is also currently the only supported value.",
                "type": [
                  "string",
                  "null"
                ],
                "enum": [
                  "",
                  "ClusterDeploymentCustomization"
                ]
              },
              "name": {
                "description": "Name is the name of the referenced resource.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "labels": {
          "description": "Labels to be applied to new ClusterDeployments created for the pool. ClusterDeployments that have already been claimed will not be affected when this value is modified.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "maxConcurrent": {
          "description": "MaxConcurrent is the maximum number of clusters that will be provisioned or deprovisioned at an time. This includes the claimed clusters being deprovisioned. By default there is no limit.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "maxSize": {
          "description": "MaxSize is the maximum number of clusters that will be provisioned including clusters that have been claimed and ones waiting to be used. By default there is no limit.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "platform": {
          "description": "Platform encompasses the desired platform for the cluster.",
          "type": "object",
          "properties": {
            "agentBareMetal": {
              "description": "AgentBareMetal is the configuration used when performing an Assisted Agent based installation to bare metal.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "agentSelector"
              ],
              "properties": {
                "agentSelector": {
                  "description": "AgentSelector is a label selector used for associating relevant custom resources with this cluster. (Agent, BareMetalHost, etc)",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "key",
                          "operator"
                        ],
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "matchLabels": {
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "aws": {
              "description": "AWS is the configuration used when installing on AWS.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "region"
              ],
              "properties": {
                "credentialsAssumeRole": {
                  "description": "CredentialsAssumeRole refers to the IAM role that must be assumed to obtain AWS account access for the cluster operations.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "roleARN"
                  ],
                  "properties": {
                    "externalID": {
                      "description": "ExternalID is random string generated by platform so that assume role is protected from confused deputy problem. more info: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "roleARN": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "credentialsSecretRef": {
                  "description": "CredentialsSecretRef refers to a secret that contains the AWS account access credentials.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "privateLink": {
                  "description": "PrivateLink allows uses to enable access to the cluster's API server using AWS PrivateLink. AWS PrivateLink includes a pair of VPC Endpoint Service and VPC Endpoint accross AWS accounts and allows clients to connect to services using AWS's internal networking instead of the Internet.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "enabled"
                  ],
                  "properties": {
                    "additionalAllowedPrincipals": {
                      "description": "AdditionalAllowedPrincipals is a list of additional allowed principal ARNs to be configured for the Private Link cluster's VPC Endpoint Service. ARNs provided as AdditionalAllowedPrincipals will be configured for the cluster's VPC Endpoint Service in addition to the IAM entity used by Hive.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "region": {
                  "description": "Region specifies the AWS region where the cluster will be created.",
                  "type": "string"
                },
                "userTags": {
                  "description": "UserTags specifies additional tags for AWS resources created for the cluster.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "additionalProperties": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              "additionalProperties": false
            },
            "azure": {
              "description": "Azure is the configuration used when installing on Azure.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "credentialsSecretRef",
                "region"
              ],
              "properties": {
                "baseDomainResourceGroupName": {
                  "description": "BaseDomainResourceGroupName specifies the resource group where the azure DNS zone for the base domain is found",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "cloudName": {
                  "description": "cloudName is the name of the Azure cloud environment which can be used to configure the Azure SDK with the appropriate Azure API endpoints. If empty, the value is equal to \"AzurePublicCloud\".",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "",
                    "AzurePublicCloud",
                    "AzureUSGovernmentCloud",
                    "AzureChinaCloud",
                    "AzureGermanCloud"
                  ]
                },
                "credentialsSecretRef": {
                  "description": "CredentialsSecretRef refers to a secret that contains the Azure account access credentials.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "region": {
                  "description": "Region specifies the Azure region where the cluster will be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "baremetal": {
              "description": "BareMetal is the configuration used when installing on bare metal.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "libvirtSSHPrivateKeySecretRef"
              ],
              "properties": {
                "libvirtSSHPrivateKeySecretRef": {
                  "description": "LibvirtSSHPrivateKeySecretRef is the reference to the secret that contains the private SSH key to use for access to the libvirt provisioning host. The SSH private key is expected to be in the secret data under the \"ssh-privatekey\" key.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "gcp": {
              "description": "GCP is the configuration used when installing on Google Cloud Platform.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "credentialsSecretRef",
                "region"
              ],
              "properties": {
                "credentialsSecretRef": {
                  "description": "CredentialsSecretRef refers to a secret that contains the GCP account access credentials.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "region": {
                  "description": "Region specifies the GCP region where the cluster will be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ibmcloud": {
              "description": "IBMCloud is the configuration used when installing on IBM Cloud",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "credentialsSecretRef",
                "region"
              ],
              "properties": {
                "accountID": {
                  "description": "AccountID is the IBM Cloud Account ID. AccountID is DEPRECATED and is gathered via the IBM Cloud API for the provided credentials. This field will be ignored.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "cisInstanceCRN": {
                  "description": "CISInstanceCRN is the IBM Cloud Internet Services Instance CRN CISInstanceCRN is DEPRECATED and gathered via the IBM Cloud API for the provided credentials and cluster deployment base domain. This field will be ignored.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "credentialsSecretRef": {
                  "description": "CredentialsSecretRef refers to a secret that contains IBM Cloud account access credentials.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "region": {
                  "description": "Region specifies the IBM Cloud region where the cluster will be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "none": {
              "description": "None indicates platform-agnostic install. https://docs.openshift.com/container-platform/4.7/installing/installing_platform_agnostic/installing-platform-agnostic.html",
              "type": [
                "object",
                "null"
              ]
            },
            "openstack": {
              "description": "OpenStack is the configuration used when installing on OpenStack",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "cloud",
                "credentialsSecretRef"
              ],
              "properties": {
                "certificatesSecretRef": {
                  "description": "CertificatesSecretRef refers to a secret that contains CA certificates necessary for communicating with the OpenStack. There is additional configuration required for the OpenShift cluster to trust the certificates provided in this secret. The \"clouds.yaml\" file included in the credentialsSecretRef Secret must also include a reference to the certificate bundle file for the OpenShift cluster being created to trust the OpenStack endpoints. The \"clouds.yaml\" file must set the \"cacert\" field to either \"/etc/openstack-ca/<key name containing the trust bundle in credentialsSecretRef Secret>\" or \"/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\". \n For example, \"\"\"clouds.yaml clouds: shiftstack: auth: ... cacert: \"/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\" \"\"\"",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "cloud": {
                  "description": "Cloud will be used to indicate the OS_CLOUD value to use the right section from the clouds.yaml in the CredentialsSecretRef.",
                  "type": "string"
                },
                "credentialsSecretRef": {
                  "description": "CredentialsSecretRef refers to a secret that contains the OpenStack account access credentials.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "trunkSupport": {
                  "description": "TrunkSupport indicates whether or not to use trunk ports in your OpenShift cluster.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "ovirt": {
              "description": "Ovirt is the configuration used when installing on oVirt",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "certificatesSecretRef",
                "credentialsSecretRef",
                "ovirt_cluster_id",
                "storage_domain_id"
              ],
              "properties": {
                "certificatesSecretRef": {
                  "description": "CertificatesSecretRef refers to a secret that contains the oVirt CA certificates necessary for communicating with oVirt.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "credentialsSecretRef": {
                  "description": "CredentialsSecretRef refers to a secret that contains the oVirt account access credentials with fields: ovirt_url, ovirt_username, ovirt_password, ovirt_ca_bundle",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "ovirt_cluster_id": {
                  "description": "The target cluster under which all VMs will run",
                  "type": "string"
                },
                "ovirt_network_name": {
                  "description": "The target network of all the network interfaces of the nodes. Omitting defaults to ovirtmgmt network which is a default network for evert ovirt cluster.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "storage_domain_id": {
                  "description": "The target storage domain under which all VM disk would be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "vsphere": {
              "description": "VSphere is the configuration used when installing on vSphere",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "certificatesSecretRef",
                "credentialsSecretRef",
                "datacenter",
                "defaultDatastore",
                "vCenter"
              ],
              "properties": {
                "certificatesSecretRef": {
                  "description": "CertificatesSecretRef refers to a secret that contains the vSphere CA certificates necessary for communicating with the VCenter.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "cluster": {
                  "description": "Cluster is the name of the cluster virtual machines will be cloned into.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "credentialsSecretRef": {
                  "description": "CredentialsSecretRef refers to a secret that contains the vSphere account access credentials: GOVC_USERNAME, GOVC_PASSWORD fields.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "datacenter": {
                  "description": "Datacenter is the name of the datacenter to use in the vCenter.",
                  "type": "string"
                },
                "defaultDatastore": {
                  "description": "DefaultDatastore is the default datastore to use for provisioning volumes.",
                  "type": "string"
                },
                "folder": {
                  "description": "Folder is the name of the folder that will be used and/or created for virtual machines.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "network": {
                  "description": "Network specifies the name of the network to be used by the cluster.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "vCenter": {
                  "description": "VCenter is the domain name or IP address of the vCenter.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "pullSecretRef": {
          "description": "PullSecretRef is the reference to the secret to use when pulling images.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "runningCount": {
          "description": "RunningCount is the number of clusters we should keep running. The remainder will be kept hibernated until claimed. By default no clusters will be kept running (all will be hibernated).",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32",
          "minimum": 0
        },
        "size": {
          "description": "Size is the default number of clusters that we should keep provisioned and waiting for use.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "skipMachinePools": {
          "description": "SkipMachinePools allows creating clusterpools where the machinepools are not managed by hive after cluster creation",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ClusterPoolStatus defines the observed state of ClusterPool",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "ready",
        "size"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions includes more detailed status for the cluster pool",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ClusterPoolCondition contains details for the current condition of a cluster pool",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastProbeTime": {
                "description": "LastProbeTime is the last time we probed the condition.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "message": {
                "description": "Message is a human-readable message indicating details about last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "reason": {
                "description": "Reason is a unique, one-word, CamelCase reason for the condition's last transition.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "status": {
                "description": "Status is the status of the condition.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "ready": {
          "description": "Ready is the number of unclaimed clusters that are installed and are running and ready to be claimed.",
          "type": "integer",
          "format": "int32"
        },
        "size": {
          "description": "Size is the number of unclaimed clusters that have been created for the pool.",
          "type": "integer",
          "format": "int32"
        },
        "standby": {
          "description": "Standby is the number of unclaimed clusters that are installed, but not running.",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "hive.openshift.io",
      "kind": "ClusterPool",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}