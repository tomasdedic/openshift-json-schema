{
  "description": "Restore is a Velero resource that represents the application of resources from a Velero backup to a target Kubernetes cluster.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "velero.io/v1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Restore"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "RestoreSpec defines the specification for a Velero restore.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "backupName"
      ],
      "properties": {
        "backupName": {
          "description": "BackupName is the unique name of the Velero backup to restore from.",
          "type": "string"
        },
        "excludedNamespaces": {
          "description": "ExcludedNamespaces contains a list of namespaces that are not included in the restore."
        },
        "excludedResources": {
          "description": "ExcludedResources is a slice of resource names that are not included in the restore."
        },
        "existingResourcePolicy": {
          "description": "ExistingResourcePolicy specifies the restore behavior for the Kubernetes resource to be restored"
        },
        "hooks": {
          "description": "Hooks represent custom behaviors that should be executed during or post restore.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "resources": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "RestoreResourceHookSpec defines one or more RestoreResrouceHooks that should be executed based on the rules defined for namespaces, resources, and label selector.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "name"
                ],
                "properties": {
                  "excludedNamespaces": {
                    "description": "ExcludedNamespaces specifies the namespaces to which this hook spec does not apply."
                  },
                  "excludedResources": {
                    "description": "ExcludedResources specifies the resources to which this hook spec does not apply."
                  },
                  "includedNamespaces": {
                    "description": "IncludedNamespaces specifies the namespaces to which this hook spec applies. If empty, it applies to all namespaces."
                  },
                  "includedResources": {
                    "description": "IncludedResources specifies the resources to which this hook spec applies. If empty, it applies to all resources."
                  },
                  "labelSelector": {
                    "description": "LabelSelector, if specified, filters the resources to which this hook spec applies.",
                    "x-kubernetes-map-type": "atomic"
                  },
                  "name": {
                    "description": "Name is the name of this hook.",
                    "type": "string"
                  },
                  "postHooks": {
                    "description": "PostHooks is a list of RestoreResourceHooks to execute during and after restoring a resource.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "RestoreResourceHook defines a restore hook for a resource.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "exec": {
                          "description": "Exec defines an exec restore hook.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "command"
                          ],
                          "properties": {
                            "command": {
                              "description": "Command is the command and arguments to execute from within a container after a pod has been restored.",
                              "type": "array",
                              "minItems": 1,
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "container": {
                              "description": "Container is the container in the pod where the command should be executed. If not specified, the pod's first container is used.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "execTimeout": {
                              "description": "ExecTimeout defines the maximum amount of time Velero should wait for the hook to complete before considering the execution a failure.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "onError": {
                              "description": "OnError specifies how Velero should behave if it encounters an error executing this hook.",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "Continue",
                                "Fail"
                              ]
                            },
                            "waitTimeout": {
                              "description": "WaitTimeout defines the maximum amount of time Velero should wait for the container to be Ready before attempting to run the command.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "init": {
                          "description": "Init defines an init restore hook.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "initContainers": {
                              "description": "InitContainers is list of init containers to be added to a pod during its restore.",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "timeout": {
                              "description": "Timeout defines the maximum amount of time Velero should wait for the initContainers to complete.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "includeClusterResources": {
          "description": "IncludeClusterResources specifies whether cluster-scoped resources should be included for consideration in the restore. If null, defaults to true."
        },
        "includedNamespaces": {
          "description": "IncludedNamespaces is a slice of namespace names to include objects from. If empty, all namespaces are included."
        },
        "includedResources": {
          "description": "IncludedResources is a slice of resource names to include in the restore. If empty, all resources in the backup are included."
        },
        "itemOperationTimeout": {
          "description": "ItemOperationTimeout specifies the time used to wait for RestoreItemAction operations The default value is 1 hour.",
          "type": [
            "string",
            "null"
          ]
        },
        "labelSelector": {
          "description": "LabelSelector is a metav1.LabelSelector to filter with when restoring individual objects from the backup. If empty or nil, all objects are included. Optional.",
          "x-kubernetes-map-type": "atomic"
        },
        "namespaceMapping": {
          "description": "NamespaceMapping is a map of source namespace names to target namespace names to restore into. Any source namespaces not included in the map will be restored into namespaces of the same name.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "orLabelSelectors": {
          "description": "OrLabelSelectors is list of metav1.LabelSelector to filter with when restoring individual objects from the backup. If multiple provided they will be joined by the OR operator. LabelSelector as well as OrLabelSelectors cannot co-exist in restore request, only one of them can be used"
        },
        "preserveNodePorts": {
          "description": "PreserveNodePorts specifies whether to restore old nodePorts from backup."
        },
        "resourceModifier": {
          "description": "ResourceModifier specifies the reference to JSON resource patches that should be applied to resources before restoration.",
          "required": [
            "kind",
            "name"
          ],
          "x-kubernetes-map-type": "atomic"
        },
        "restorePVs": {
          "description": "RestorePVs specifies whether to restore all included PVs from snapshot"
        },
        "restoreStatus": {
          "description": "RestoreStatus specifies which resources we should restore the status field. If nil, no objects are included. Optional."
        },
        "scheduleName": {
          "description": "ScheduleName is the unique name of the Velero schedule to restore from. If specified, and BackupName is empty, Velero will restore from the most recent successful backup created from this schedule.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "RestoreStatus captures the current status of a Velero restore",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "completionTimestamp": {
          "description": "CompletionTimestamp records the time the restore operation was completed. Completion time is recorded even on failed restore. The server's time is used for StartTimestamps",
          "format": "date-time"
        },
        "errors": {
          "description": "Errors is a count of all error messages that were generated during execution of the restore. The actual errors are stored in object storage.",
          "type": [
            "integer",
            "null"
          ]
        },
        "failureReason": {
          "description": "FailureReason is an error that caused the entire restore to fail.",
          "type": [
            "string",
            "null"
          ]
        },
        "phase": {
          "description": "Phase is the current state of the Restore",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "New",
            "FailedValidation",
            "InProgress",
            "WaitingForPluginOperations",
            "WaitingForPluginOperationsPartiallyFailed",
            "Completed",
            "PartiallyFailed",
            "Failed"
          ]
        },
        "progress": {
          "description": "Progress contains information about the restore's execution progress. Note that this information is best-effort only -- if Velero fails to update it during a restore for any reason, it may be inaccurate/stale."
        },
        "restoreItemOperationsAttempted": {
          "description": "RestoreItemOperationsAttempted is the total number of attempted async RestoreItemAction operations for this restore.",
          "type": [
            "integer",
            "null"
          ]
        },
        "restoreItemOperationsCompleted": {
          "description": "RestoreItemOperationsCompleted is the total number of successfully completed async RestoreItemAction operations for this restore.",
          "type": [
            "integer",
            "null"
          ]
        },
        "restoreItemOperationsFailed": {
          "description": "RestoreItemOperationsFailed is the total number of async RestoreItemAction operations for this restore which ended with an error.",
          "type": [
            "integer",
            "null"
          ]
        },
        "startTimestamp": {
          "description": "StartTimestamp records the time the restore operation was started. The server's time is used for StartTimestamps",
          "format": "date-time"
        },
        "validationErrors": {
          "description": "ValidationErrors is a slice of all validation errors (if applicable)"
        },
        "warnings": {
          "description": "Warnings is a count of all warning messages that were generated during execution of the restore. The actual warnings are stored in object storage.",
          "type": [
            "integer",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "velero.io",
      "kind": "Restore",
      "version": "v1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}