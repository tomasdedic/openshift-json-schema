{
  "description": "Search is the schema for the searches API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "search.open-cluster-management.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "Search"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "SearchSpec defines the desired state of Search.",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "availabilityConfig": {
          "description": "[PLACEHOLDER, NOT IMPLEMENTED] Specifies deployment replication for improved availability. Options are: Basic and High (default)",
          "type": [
            "string",
            "null"
          ]
        },
        "dbConfig": {
          "description": "The config map name contains parameters to override default database parameters.",
          "type": [
            "string",
            "null"
          ]
        },
        "dbStorage": {
          "description": "Storage configuration for the database.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "size": {
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "x-kubernetes-int-or-string": true
            },
            "storageClassName": {
              "description": "name of the storage class",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "deployments": {
          "description": "Customization for search deployments.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "collector": {
              "description": "Configuration for the collector.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "arguments": {
                  "description": "Container Arguments",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "envVar": {
                  "description": "Container Env variables",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "EnvVar represents an environment variable present in a Container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "valueFrom": {
                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Selects a key of a ConfigMap.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "fieldRef": {
                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fieldPath": {
                                "description": "Path of the field to select in the specified API version.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "resourceFieldRef": {
                            "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "description": "Container name: required for volumes, optional for env vars",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "divisor": {
                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "description": "Required: resource to select",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "secretKeyRef": {
                            "description": "Selects a key of a secret in the pod's namespace",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "imageOverride": {
                  "description": "Image_override",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "replicaCount": {
                  "description": "Number of pod instances for the deployment.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "minimum": 1
                },
                "resources": {
                  "description": "Compute resources required by deployment.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "database": {
              "description": "Configuration for the database.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "arguments": {
                  "description": "Container Arguments",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "envVar": {
                  "description": "Container Env variables",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "EnvVar represents an environment variable present in a Container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "valueFrom": {
                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Selects a key of a ConfigMap.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "fieldRef": {
                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fieldPath": {
                                "description": "Path of the field to select in the specified API version.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "resourceFieldRef": {
                            "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "description": "Container name: required for volumes, optional for env vars",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "divisor": {
                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "description": "Required: resource to select",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "secretKeyRef": {
                            "description": "Selects a key of a secret in the pod's namespace",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "imageOverride": {
                  "description": "Image_override",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "replicaCount": {
                  "description": "Number of pod instances for the deployment.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "minimum": 1
                },
                "resources": {
                  "description": "Compute resources required by deployment.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "indexer": {
              "description": "Configuration for the indexer.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "arguments": {
                  "description": "Container Arguments",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "envVar": {
                  "description": "Container Env variables",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "EnvVar represents an environment variable present in a Container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "valueFrom": {
                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Selects a key of a ConfigMap.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "fieldRef": {
                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fieldPath": {
                                "description": "Path of the field to select in the specified API version.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "resourceFieldRef": {
                            "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "description": "Container name: required for volumes, optional for env vars",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "divisor": {
                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "description": "Required: resource to select",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "secretKeyRef": {
                            "description": "Selects a key of a secret in the pod's namespace",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "imageOverride": {
                  "description": "Image_override",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "replicaCount": {
                  "description": "Number of pod instances for the deployment.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "minimum": 1
                },
                "resources": {
                  "description": "Compute resources required by deployment.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "queryapi": {
              "description": "Configuration for Query API.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "arguments": {
                  "description": "Container Arguments",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "envVar": {
                  "description": "Container Env variables",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "EnvVar represents an environment variable present in a Container.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "valueFrom": {
                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Selects a key of a ConfigMap.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "fieldRef": {
                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fieldPath": {
                                "description": "Path of the field to select in the specified API version.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "resourceFieldRef": {
                            "description": "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "description": "Container name: required for volumes, optional for env vars",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "divisor": {
                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "description": "Required: resource to select",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          },
                          "secretKeyRef": {
                            "description": "Selects a key of a secret in the pod's namespace",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": [
                                  "boolean",
                                  "null"
                                ]
                              }
                            },
                            "x-kubernetes-map-type": "atomic",
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "imageOverride": {
                  "description": "Image_override",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "replicaCount": {
                  "description": "Number of pod instances for the deployment.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32",
                  "minimum": 1
                },
                "resources": {
                  "description": "Compute resources required by deployment.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "claims": {
                      "description": "Claims lists the names of resources, defined in spec.resourceClaims, that are used by this container. \n This is an alpha field and requires enabling the DynamicResourceAllocation feature gate. \n This field is immutable. It can only be set for containers.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "limits": {
                      "description": "Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "requests": {
                      "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. Requests cannot exceed Limits. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "externalDBInstance": {
          "description": "[PLACEHOLDER, NOT IMPLEMENTED] Kubernetes secret name containing user provided db secret Secret should contain connection parameters [db_host, db_port, db_user, db_password, db_name, ca_cert] Not supported for development preview.",
          "type": [
            "string",
            "null"
          ]
        },
        "imagePullPolicy": {
          "description": "ImagePullPolicy",
          "type": [
            "string",
            "null"
          ]
        },
        "imagePullSecret": {
          "description": "ImagePullSecret",
          "type": [
            "string",
            "null"
          ]
        },
        "nodeSelector": {
          "description": "Define the nodes that you want to schedule with matching labels.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "tolerations": {
          "description": "Define tolerations to schedule pods on nodes with matching taints.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.",
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.",
                "type": [
                  "string",
                  "null"
                ]
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SearchStatus defines the observed state of Search.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "db",
        "storage"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition. This may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "db": {
          "description": "Database used by Search.",
          "type": "string"
        },
        "storage": {
          "description": "Storage used by database",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "search.open-cluster-management.io",
      "kind": "Search",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}