{
  "description": "KubevirtMachineTemplate is the Schema for the kubevirtmachinetemplates API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "infrastructure.cluster.x-k8s.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "KubevirtMachineTemplate"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "KubevirtMachineTemplateSpec defines the desired state of KubevirtMachineTemplate.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "template"
      ],
      "properties": {
        "template": {
          "description": "KubevirtMachineTemplateResource describes the data needed to create a KubevirtMachine from a template.",
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "description": "Spec is the specification of the desired behavior of the machine.",
              "type": "object",
              "properties": {
                "infraClusterSecretRef": {
                  "description": "InfraClusterSecretRef is a reference to a secret with a kubeconfig for external cluster used for infra.\nWhen nil, this defaults to the value present in the KubevirtCluster object's spec associated with this machine.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "fieldPath": {
                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.\nTODO: this design is not final and this field is subject to change in the future.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "kind": {
                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "namespace": {
                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "resourceVersion": {
                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "uid": {
                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "providerID": {
                  "description": "ProviderID TBD what to use for Kubevirt",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "virtualMachineBootstrapCheck": {
                  "description": "BootstrapCheckSpec defines how the CAPK controller is checking CAPI Sentinel file inside the VM.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "checkStrategy": {
                      "description": "CheckStrategy describes how CAPK controller will validate a successful CAPI bootstrap.\nFollowing specified method, CAPK will try to retrieve the state of the CAPI Sentinel file from the VM.\nPossible values are: \"none\" or \"ssh\" (default is \"ssh\") and this value is validated by apiserver.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "none",
                        "ssh"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "virtualMachineTemplate": {
                  "description": "VirtualMachineTemplateSpec defines the desired state of the kubevirt VM.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "metadata": {
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "spec": {
                      "description": "VirtualMachineSpec contains the VirtualMachine specification.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "template"
                      ],
                      "properties": {
                        "dataVolumeTemplates": {
                          "description": "dataVolumeTemplates is a list of dataVolumes that the VirtualMachineInstance template can reference.\nDataVolumes in this list are dynamically created for the VirtualMachine and are tied to the VirtualMachine's life-cycle.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "required": [
                              "spec"
                            ]
                          }
                        },
                        "instancetype": {
                          "description": "InstancetypeMatcher references a instancetype that is used to fill fields in Template",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "inferFromVolume": {
                              "description": "InferFromVolume lists the name of a volume that should be used to infer or discover the instancetype\nto be used through known annotations on the underlying resource. Once applied to the InstancetypeMatcher\nthis field is removed.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "inferFromVolumeFailurePolicy": {
                              "description": "InferFromVolumeFailurePolicy controls what should happen on failure when inferring the instancetype.\nAllowed values are: \"RejectInferFromVolumeFailure\" and \"IgnoreInferFromVolumeFailure\".\nIf not specified, \"RejectInferFromVolumeFailure\" is used by default.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "kind": {
                              "description": "Kind specifies which instancetype resource is referenced.\nAllowed values are: \"VirtualMachineInstancetype\" and \"VirtualMachineClusterInstancetype\".\nIf not specified, \"VirtualMachineClusterInstancetype\" is used by default.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "Name is the name of the VirtualMachineInstancetype or VirtualMachineClusterInstancetype",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "revisionName": {
                              "description": "RevisionName specifies a ControllerRevision containing a specific copy of the\nVirtualMachineInstancetype or VirtualMachineClusterInstancetype to be used. This is initially\ncaptured the first time the instancetype is applied to the VirtualMachineInstance.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "liveUpdateFeatures": {
                          "description": "LiveUpdateFeatures references a configuration of hotpluggable resources",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "affinity": {
                              "description": "Affinity allows live updating the virtual machines node affinity",
                              "type": [
                                "object",
                                "null"
                              ]
                            },
                            "cpu": {
                              "description": "LiveUpdateCPU holds hotplug configuration for the CPU resource.\nEmpty struct indicates that default will be used for maxSockets.\nDefault is specified on cluster level.\nAbsence of the struct means opt-out from CPU hotplug functionality.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "maxSockets": {
                                  "description": "The maximum amount of sockets that can be hot-plugged to the Virtual Machine",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int32"
                                }
                              },
                              "additionalProperties": false
                            },
                            "memory": {
                              "description": "MemoryLiveUpdateConfiguration defines the live update memory features for the VirtualMachine",
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "maxGuest": {
                                  "description": "MaxGuest defines the maximum amount memory that can be allocated for the VM.",
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "preference": {
                          "description": "PreferenceMatcher references a set of preference that is used to fill fields in Template",
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "inferFromVolume": {
                              "description": "InferFromVolume lists the name of a volume that should be used to infer or discover the preference\nto be used through known annotations on the underlying resource. Once applied to the PreferenceMatcher\nthis field is removed.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "inferFromVolumeFailurePolicy": {
                              "description": "InferFromVolumeFailurePolicy controls what should happen on failure when preference the instancetype.\nAllowed values are: \"RejectInferFromVolumeFailure\" and \"IgnoreInferFromVolumeFailure\".\nIf not specified, \"RejectInferFromVolumeFailure\" is used by default.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "kind": {
                              "description": "Kind specifies which preference resource is referenced.\nAllowed values are: \"VirtualMachinePreference\" and \"VirtualMachineClusterPreference\".\nIf not specified, \"VirtualMachineClusterPreference\" is used by default.",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "name": {
                              "description": "Name is the name of the VirtualMachinePreference or VirtualMachineClusterPreference",
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "revisionName": {
                              "description": "RevisionName specifies a ControllerRevision containing a specific copy of the\nVirtualMachinePreference or VirtualMachineClusterPreference to be used. This is\ninitially captured the first time the instancetype is applied to the VirtualMachineInstance.",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "runStrategy": {
                          "description": "Running state indicates the requested running state of the VirtualMachineInstance\nmutually exclusive with Running",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "running": {
                          "description": "Running controls whether the associatied VirtualMachineInstance is created or not\nMutually exclusive with RunStrategy",
                          "type": [
                            "boolean",
                            "null"
                          ]
                        },
                        "template": {
                          "description": "Template is the direct specification of VirtualMachineInstance",
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "spec": {
                              "description": "VirtualMachineInstance Spec contains the VirtualMachineInstance specification.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "domain"
                              ],
                              "properties": {
                                "accessCredentials": {
                                  "description": "Specifies a set of public keys to inject into the vm guest",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "AccessCredential represents a credential source that can be used to\nauthorize remote access to the vm guest\nOnly one of its members may be specified.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "sshPublicKey": {
                                        "description": "SSHPublicKey represents the source and method of applying a ssh public\nkey into a guest virtual machine.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "propagationMethod",
                                          "source"
                                        ],
                                        "properties": {
                                          "propagationMethod": {
                                            "description": "PropagationMethod represents how the public key is injected into the vm guest.",
                                            "type": "object",
                                            "properties": {
                                              "configDrive": {
                                                "description": "ConfigDrivePropagation means that the ssh public keys are injected\ninto the VM using metadata using the configDrive cloud-init provider",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "noCloud": {
                                                "description": "NoCloudPropagation means that the ssh public keys are injected\ninto the VM using metadata using the noCloud cloud-init provider",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "qemuGuestAgent": {
                                                "description": "QemuGuestAgentAccessCredentailPropagation means ssh public keys are\ndynamically injected into the vm at runtime via the qemu guest agent.\nThis feature requires the qemu guest agent to be running within the guest.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "required": [
                                                  "users"
                                                ],
                                                "properties": {
                                                  "users": {
                                                    "description": "Users represents a list of guest users that should have the ssh public keys\nadded to their authorized_keys file.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "x-kubernetes-list-type": "set"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "source": {
                                            "description": "Source represents where the public keys are pulled from",
                                            "type": "object",
                                            "properties": {
                                              "secret": {
                                                "description": "Secret means that the access credential is pulled from a kubernetes secret",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "required": [
                                                  "secretName"
                                                ],
                                                "properties": {
                                                  "secretName": {
                                                    "description": "SecretName represents the name of the secret in the VMI's namespace",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "userPassword": {
                                        "description": "UserPassword represents the source and method for applying a guest user's\npassword",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "propagationMethod",
                                          "source"
                                        ],
                                        "properties": {
                                          "propagationMethod": {
                                            "description": "propagationMethod represents how the user passwords are injected into the vm guest.",
                                            "type": "object",
                                            "properties": {
                                              "qemuGuestAgent": {
                                                "description": "QemuGuestAgentAccessCredentailPropagation means passwords are\ndynamically injected into the vm at runtime via the qemu guest agent.\nThis feature requires the qemu guest agent to be running within the guest.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "source": {
                                            "description": "Source represents where the user passwords are pulled from",
                                            "type": "object",
                                            "properties": {
                                              "secret": {
                                                "description": "Secret means that the access credential is pulled from a kubernetes secret",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "required": [
                                                  "secretName"
                                                ],
                                                "properties": {
                                                  "secretName": {
                                                    "description": "SecretName represents the name of the secret in the VMI's namespace",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "affinity": {
                                  "description": "If affinity is specifies, obey all the affinity rules",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "nodeAffinity": {
                                      "description": "Describes node affinity scheduling rules for the pod.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "preference",
                                              "weight"
                                            ],
                                            "properties": {
                                              "preference": {
                                                "description": "A node selector term, associated with the corresponding weight.",
                                                "type": "object",
                                                "properties": {
                                                  "matchExpressions": {
                                                    "description": "A list of node selector requirements by node's labels.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "The label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ],
                                                          "items": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "matchFields": {
                                                    "description": "A list of node selector requirements by node's fields.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "The label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ],
                                                          "items": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                              },
                                              "weight": {
                                                "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                          "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "required": [
                                            "nodeSelectorTerms"
                                          ],
                                          "properties": {
                                            "nodeSelectorTerms": {
                                              "description": "Required. A list of node selector terms. The terms are ORed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "matchExpressions": {
                                                    "description": "A list of node selector requirements by node's labels.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "The label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ],
                                                          "items": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "matchFields": {
                                                    "description": "A list of node selector requirements by node's fields.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "The label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ],
                                                          "items": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic",
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "podAffinity": {
                                      "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "podAffinityTerm",
                                              "weight"
                                            ],
                                            "properties": {
                                              "podAffinityTerm": {
                                                "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                "type": "object",
                                                "required": [
                                                  "topologyKey"
                                                ],
                                                "properties": {
                                                  "labelSelector": {
                                                    "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "properties": {
                                                      "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "type": [
                                                          "array",
                                                          "null"
                                                        ],
                                                        "items": {
                                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                          "type": [
                                                            "object",
                                                            "null"
                                                          ],
                                                          "required": [
                                                            "key",
                                                            "operator"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "description": "key is the label key that the selector applies to.",
                                                              "type": "string"
                                                            },
                                                            "operator": {
                                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                              "type": "string"
                                                            },
                                                            "values": {
                                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                              "type": [
                                                                "array",
                                                                "null"
                                                              ],
                                                              "items": {
                                                                "type": [
                                                                  "string",
                                                                  "null"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "matchLabels": {
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ],
                                                        "additionalProperties": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic",
                                                    "additionalProperties": false
                                                  },
                                                  "matchLabelKeys": {
                                                    "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "mismatchLabelKeys": {
                                                    "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "namespaceSelector": {
                                                    "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "properties": {
                                                      "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "type": [
                                                          "array",
                                                          "null"
                                                        ],
                                                        "items": {
                                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                          "type": [
                                                            "object",
                                                            "null"
                                                          ],
                                                          "required": [
                                                            "key",
                                                            "operator"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "description": "key is the label key that the selector applies to.",
                                                              "type": "string"
                                                            },
                                                            "operator": {
                                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                              "type": "string"
                                                            },
                                                            "values": {
                                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                              "type": [
                                                                "array",
                                                                "null"
                                                              ],
                                                              "items": {
                                                                "type": [
                                                                  "string",
                                                                  "null"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "matchLabels": {
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ],
                                                        "additionalProperties": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic",
                                                    "additionalProperties": false
                                                  },
                                                  "namespaces": {
                                                    "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "topologyKey": {
                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "weight": {
                                                "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                          "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "topologyKey"
                                            ],
                                            "properties": {
                                              "labelSelector": {
                                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "matchExpressions": {
                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "key is the label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ],
                                                          "items": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "matchLabels": {
                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "additionalProperties": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                              },
                                              "matchLabelKeys": {
                                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                "type": [
                                                  "array",
                                                  "null"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "mismatchLabelKeys": {
                                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                "type": [
                                                  "array",
                                                  "null"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "namespaceSelector": {
                                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "matchExpressions": {
                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "key is the label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ],
                                                          "items": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "matchLabels": {
                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "additionalProperties": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                              },
                                              "namespaces": {
                                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                "type": [
                                                  "array",
                                                  "null"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "topologyKey": {
                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "podAntiAffinity": {
                                      "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "preferredDuringSchedulingIgnoredDuringExecution": {
                                          "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "podAffinityTerm",
                                              "weight"
                                            ],
                                            "properties": {
                                              "podAffinityTerm": {
                                                "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                                "type": "object",
                                                "required": [
                                                  "topologyKey"
                                                ],
                                                "properties": {
                                                  "labelSelector": {
                                                    "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "properties": {
                                                      "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "type": [
                                                          "array",
                                                          "null"
                                                        ],
                                                        "items": {
                                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                          "type": [
                                                            "object",
                                                            "null"
                                                          ],
                                                          "required": [
                                                            "key",
                                                            "operator"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "description": "key is the label key that the selector applies to.",
                                                              "type": "string"
                                                            },
                                                            "operator": {
                                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                              "type": "string"
                                                            },
                                                            "values": {
                                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                              "type": [
                                                                "array",
                                                                "null"
                                                              ],
                                                              "items": {
                                                                "type": [
                                                                  "string",
                                                                  "null"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "matchLabels": {
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ],
                                                        "additionalProperties": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic",
                                                    "additionalProperties": false
                                                  },
                                                  "matchLabelKeys": {
                                                    "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "mismatchLabelKeys": {
                                                    "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "namespaceSelector": {
                                                    "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "properties": {
                                                      "matchExpressions": {
                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                        "type": [
                                                          "array",
                                                          "null"
                                                        ],
                                                        "items": {
                                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                          "type": [
                                                            "object",
                                                            "null"
                                                          ],
                                                          "required": [
                                                            "key",
                                                            "operator"
                                                          ],
                                                          "properties": {
                                                            "key": {
                                                              "description": "key is the label key that the selector applies to.",
                                                              "type": "string"
                                                            },
                                                            "operator": {
                                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                              "type": "string"
                                                            },
                                                            "values": {
                                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                              "type": [
                                                                "array",
                                                                "null"
                                                              ],
                                                              "items": {
                                                                "type": [
                                                                  "string",
                                                                  "null"
                                                                ]
                                                              }
                                                            }
                                                          },
                                                          "additionalProperties": false
                                                        }
                                                      },
                                                      "matchLabels": {
                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ],
                                                        "additionalProperties": {
                                                          "type": [
                                                            "string",
                                                            "null"
                                                          ]
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-map-type": "atomic",
                                                    "additionalProperties": false
                                                  },
                                                  "namespaces": {
                                                    "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "topologyKey": {
                                                    "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "weight": {
                                                "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                                "type": "integer",
                                                "format": "int32"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                          "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key <topologyKey> matches that of any node on which\na pod of the set of pods is running",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "topologyKey"
                                            ],
                                            "properties": {
                                              "labelSelector": {
                                                "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "matchExpressions": {
                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "key is the label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ],
                                                          "items": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "matchLabels": {
                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "additionalProperties": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                              },
                                              "matchLabelKeys": {
                                                "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nAlso, MatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                "type": [
                                                  "array",
                                                  "null"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "mismatchLabelKeys": {
                                                "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.\nAlso, MismatchLabelKeys cannot be set when LabelSelector isn't set.\nThis is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.",
                                                "type": [
                                                  "array",
                                                  "null"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "namespaceSelector": {
                                                "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "matchExpressions": {
                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "key is the label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                          "type": [
                                                            "array",
                                                            "null"
                                                          ],
                                                          "items": {
                                                            "type": [
                                                              "string",
                                                              "null"
                                                            ]
                                                          }
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "matchLabels": {
                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "additionalProperties": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic",
                                                "additionalProperties": false
                                              },
                                              "namespaces": {
                                                "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                                "type": [
                                                  "array",
                                                  "null"
                                                ],
                                                "items": {
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "topologyKey": {
                                                "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "architecture": {
                                  "description": "Specifies the architecture of the vm guest you are attempting to run. Defaults to the compiled architecture of the KubeVirt components",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "dnsConfig": {
                                  "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "nameservers": {
                                      "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "options": {
                                      "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "name": {
                                            "description": "Required.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "value": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "searches": {
                                      "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                                      "type": [
                                        "array",
                                        "null"
                                      ],
                                      "items": {
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "dnsPolicy": {
                                  "description": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "domain": {
                                  "description": "Specification of the desired behavior of the VirtualMachineInstance on the host.",
                                  "type": "object",
                                  "required": [
                                    "devices"
                                  ],
                                  "properties": {
                                    "chassis": {
                                      "description": "Chassis specifies the chassis info passed to the domain.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "asset": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "manufacturer": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "serial": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "sku": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "version": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "clock": {
                                      "description": "Clock sets the clock and timers of the vmi.",
                                      "x-kubernetes-preserve-unknown-fields": true
                                    },
                                    "cpu": {
                                      "description": "CPU allow specified the detailed CPU topology inside the vmi.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "cores": {
                                          "description": "Cores specifies the number of cores inside the vmi.\nMust be a value greater or equal 1.",
                                          "type": [
                                            "integer",
                                            "null"
                                          ],
                                          "format": "int32"
                                        },
                                        "dedicatedCpuPlacement": {
                                          "description": "DedicatedCPUPlacement requests the scheduler to place the VirtualMachineInstance on a node\nwith enough dedicated pCPUs and pin the vCPUs to it.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "features": {
                                          "description": "Features specifies the CPU features list inside the VMI.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "CPUFeature allows specifying a CPU feature.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the CPU feature",
                                                "type": "string"
                                              },
                                              "policy": {
                                                "description": "Policy is the CPU feature attribute which can have the following attributes:\nforce    - The virtual CPU will claim the feature is supported regardless of it being supported by host CPU.\nrequire  - Guest creation will fail unless the feature is supported by the host CPU or the hypervisor is able to emulate it.\noptional - The feature will be supported by virtual CPU if and only if it is supported by host CPU.\ndisable  - The feature will not be supported by virtual CPU.\nforbid   - Guest creation will fail if the feature is supported by host CPU.\nDefaults to require",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "isolateEmulatorThread": {
                                          "description": "IsolateEmulatorThread requests one more dedicated pCPU to be allocated for the VMI to place\nthe emulator thread on it.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "maxSockets": {
                                          "description": "MaxSockets specifies the maximum amount of sockets that can\nbe hotplugged",
                                          "type": [
                                            "integer",
                                            "null"
                                          ],
                                          "format": "int32"
                                        },
                                        "model": {
                                          "description": "Model specifies the CPU model inside the VMI.\nList of available models https://github.com/libvirt/libvirt/tree/master/src/cpu_map.\nIt is possible to specify special cases like \"host-passthrough\" to get the same CPU as the node\nand \"host-model\" to get CPU closest to the node one.\nDefaults to host-model.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "numa": {
                                          "description": "NUMA allows specifying settings for the guest NUMA topology",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "guestMappingPassthrough": {
                                              "description": "GuestMappingPassthrough will create an efficient guest topology based on host CPUs exclusively assigned to a pod.\nThe created topology ensures that memory and CPUs on the virtual numa nodes never cross boundaries of host numa nodes.",
                                              "type": [
                                                "object",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "realtime": {
                                          "description": "Realtime instructs the virt-launcher to tune the VMI for lower latency, optional for real time workloads",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "mask": {
                                              "description": "Mask defines the vcpu mask expression that defines which vcpus are used for realtime. Format matches libvirt's expressions.\nExample: \"0-3,^1\",\"0,2,3\",\"2-3\"",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "sockets": {
                                          "description": "Sockets specifies the number of sockets inside the vmi.\nMust be a value greater or equal 1.",
                                          "type": [
                                            "integer",
                                            "null"
                                          ],
                                          "format": "int32"
                                        },
                                        "threads": {
                                          "description": "Threads specifies the number of threads inside the vmi.\nMust be a value greater or equal 1.",
                                          "type": [
                                            "integer",
                                            "null"
                                          ],
                                          "format": "int32"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "devices": {
                                      "description": "Devices allows adding disks, network interfaces, and others",
                                      "type": "object",
                                      "properties": {
                                        "autoattachGraphicsDevice": {
                                          "description": "Whether to attach the default graphics device or not.\nVNC will not be available if set to false. Defaults to true.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "autoattachInputDevice": {
                                          "description": "Whether to attach an Input Device.\nDefaults to false.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "autoattachMemBalloon": {
                                          "description": "Whether to attach the Memory balloon device with default period.\nPeriod can be adjusted in virt-config.\nDefaults to true.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "autoattachPodInterface": {
                                          "description": "Whether to attach a pod network interface. Defaults to true.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "autoattachSerialConsole": {
                                          "description": "Whether to attach the default virtio-serial console or not.\nSerial console access will not be available if set to false. Defaults to true.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "autoattachVSOCK": {
                                          "description": "Whether to attach the VSOCK CID to the VM or not.\nVSOCK access will be available if set to true. Defaults to false.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "blockMultiQueue": {
                                          "description": "Whether or not to enable virtio multi-queue for block devices.\nDefaults to false.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "clientPassthrough": {
                                          "description": "To configure and access client devices such as redirecting USB",
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "disableHotplug": {
                                          "description": "DisableHotplug disabled the ability to hotplug disks.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "disks": {
                                          "description": "Disks describes disks, cdroms and luns which are connected to the vmi.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "blockSize": {
                                                "description": "If specified, the virtual disk will be presented with the given block sizes.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "custom": {
                                                    "description": "CustomBlockSize represents the desired logical and physical block size for a VM disk.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "required": [
                                                      "logical",
                                                      "physical"
                                                    ],
                                                    "properties": {
                                                      "logical": {
                                                        "type": "integer"
                                                      },
                                                      "physical": {
                                                        "type": "integer"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  },
                                                  "matchVolume": {
                                                    "description": "Represents if a feature is enabled or disabled.",
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "properties": {
                                                      "enabled": {
                                                        "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                        "type": [
                                                          "boolean",
                                                          "null"
                                                        ]
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "bootOrder": {
                                                "description": "BootOrder is an integer value > 0, used to determine ordering of boot devices.\nLower values take precedence.\nEach disk or interface that has a boot order must have a unique value.\nDisks without a boot order are not tried if a disk with a boot order exists.",
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "cache": {
                                                "description": "Cache specifies which kvm disk cache mode should be used.\nSupported values are: CacheNone, CacheWriteThrough.",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "cdrom": {
                                                "description": "Attach a volume as a cdrom to the vmi.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "bus": {
                                                    "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi.",
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "readonly": {
                                                    "description": "ReadOnly.\nDefaults to true.",
                                                    "type": [
                                                      "boolean",
                                                      "null"
                                                    ]
                                                  },
                                                  "tray": {
                                                    "description": "Tray indicates if the tray of the device is open or closed.\nAllowed values are \"open\" and \"closed\".\nDefaults to closed.",
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "dedicatedIOThread": {
                                                "description": "dedicatedIOThread indicates this disk should have an exclusive IO Thread.\nEnabling this implies useIOThreads = true.\nDefaults to false.",
                                                "type": [
                                                  "boolean",
                                                  "null"
                                                ]
                                              },
                                              "disk": {
                                                "description": "Attach a volume as a disk to the vmi.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "bus": {
                                                    "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi, usb.",
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "pciAddress": {
                                                    "description": "If specified, the virtual disk will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10",
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "readonly": {
                                                    "description": "ReadOnly.\nDefaults to false.",
                                                    "type": [
                                                      "boolean",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "errorPolicy": {
                                                "description": "If specified, it can change the default error policy (stop) for the disk",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "io": {
                                                "description": "IO specifies which QEMU disk IO mode should be used.\nSupported values are: native, default, threads.",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "lun": {
                                                "description": "Attach a volume as a LUN to the vmi.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "bus": {
                                                    "description": "Bus indicates the type of disk device to emulate.\nsupported values: virtio, sata, scsi.",
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "readonly": {
                                                    "description": "ReadOnly.\nDefaults to false.",
                                                    "type": [
                                                      "boolean",
                                                      "null"
                                                    ]
                                                  },
                                                  "reservation": {
                                                    "description": "Reservation indicates if the disk needs to support the persistent reservation for the SCSI disk",
                                                    "type": [
                                                      "boolean",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "name": {
                                                "description": "Name is the device name",
                                                "type": "string"
                                              },
                                              "serial": {
                                                "description": "Serial provides the ability to specify a serial number for the disk device.",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "shareable": {
                                                "description": "If specified the disk is made sharable and multiple write from different VMs are permitted",
                                                "type": [
                                                  "boolean",
                                                  "null"
                                                ]
                                              },
                                              "tag": {
                                                "description": "If specified, disk address and its tag will be provided to the guest via config drive metadata",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "downwardMetrics": {
                                          "description": "DownwardMetrics creates a virtio serials for exposing the downward metrics to the vmi.",
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "filesystems": {
                                          "description": "Filesystems describes filesystem which is connected to the vmi.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "name",
                                              "virtiofs"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name is the device name",
                                                "type": "string"
                                              },
                                              "virtiofs": {
                                                "description": "Virtiofs is supported",
                                                "type": "object"
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "gpus": {
                                          "description": "Whether to attach a GPU device to the vmi.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "deviceName",
                                              "name"
                                            ],
                                            "properties": {
                                              "deviceName": {
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the GPU device as exposed by a device plugin",
                                                "type": "string"
                                              },
                                              "tag": {
                                                "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "virtualGPUOptions": {
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "display": {
                                                    "type": [
                                                      "object",
                                                      "null"
                                                    ],
                                                    "properties": {
                                                      "enabled": {
                                                        "description": "Enabled determines if a display addapter backed by a vGPU should be enabled or disabled on the guest.\nDefaults to true.",
                                                        "type": [
                                                          "boolean",
                                                          "null"
                                                        ]
                                                      },
                                                      "ramFB": {
                                                        "description": "Enables a boot framebuffer, until the guest OS loads a real GPU driver\nDefaults to true.",
                                                        "type": [
                                                          "object",
                                                          "null"
                                                        ],
                                                        "properties": {
                                                          "enabled": {
                                                            "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                            "type": [
                                                              "boolean",
                                                              "null"
                                                            ]
                                                          }
                                                        },
                                                        "additionalProperties": false
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "hostDevices": {
                                          "description": "Whether to attach a host device to the vmi.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "deviceName",
                                              "name"
                                            ],
                                            "properties": {
                                              "deviceName": {
                                                "description": "DeviceName is the resource name of the host device exposed by a device plugin",
                                                "type": "string"
                                              },
                                              "name": {
                                                "type": "string"
                                              },
                                              "tag": {
                                                "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "inputs": {
                                          "description": "Inputs describe input devices",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "name",
                                              "type"
                                            ],
                                            "properties": {
                                              "bus": {
                                                "description": "Bus indicates the bus of input device to emulate.\nSupported values: virtio, usb.",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "name": {
                                                "description": "Name is the device name",
                                                "type": "string"
                                              },
                                              "type": {
                                                "description": "Type indicated the type of input device.\nSupported values: tablet.",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "interfaces": {
                                          "description": "Interfaces describe network interfaces which are added to the vmi.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "acpiIndex": {
                                                "description": "If specified, the ACPI index is used to provide network interface device naming, that is stable across changes\nin PCI addresses assigned to the device.\nThis value is required to be unique across all devices and be between 1 and (16*1024-1).",
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "binding": {
                                                "description": "Binding specifies the binding plugin that will be used to connect the interface to the guest.\nIt provides an alternative to InterfaceBindingMethod.\nversion: 1alphav1",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "description": "Name references to the binding name as denined in the kubevirt CR.\nversion: 1alphav1",
                                                    "type": "string"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "bootOrder": {
                                                "description": "BootOrder is an integer value > 0, used to determine ordering of boot devices.\nLower values take precedence.\nEach interface or disk that has a boot order must have a unique value.\nInterfaces without a boot order are not tried.",
                                                "type": [
                                                  "integer",
                                                  "null"
                                                ]
                                              },
                                              "bridge": {
                                                "description": "InterfaceBridge connects to a given network via a linux bridge.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "dhcpOptions": {
                                                "description": "If specified the network interface will pass additional DHCP options to the VMI",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ],
                                                "properties": {
                                                  "bootFileName": {
                                                    "description": "If specified will pass option 67 to interface's DHCP server",
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  },
                                                  "ntpServers": {
                                                    "description": "If specified will pass the configured NTP server to the VM via DHCP option 042.",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "privateOptions": {
                                                    "description": "If specified will pass extra DHCP options for private use, range: 224-254",
                                                    "type": [
                                                      "array",
                                                      "null"
                                                    ],
                                                    "items": {
                                                      "description": "DHCPExtraOptions defines Extra DHCP options for a VM.",
                                                      "type": [
                                                        "object",
                                                        "null"
                                                      ],
                                                      "required": [
                                                        "option",
                                                        "value"
                                                      ],
                                                      "properties": {
                                                        "option": {
                                                          "description": "Option is an Integer value from 224-254\nRequired.",
                                                          "type": "integer"
                                                        },
                                                        "value": {
                                                          "description": "Value is a String value for the Option provided\nRequired.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "additionalProperties": false
                                                    }
                                                  },
                                                  "tftpServerName": {
                                                    "description": "If specified will pass option 66 to interface's DHCP server",
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "macAddress": {
                                                "description": "Interface MAC address. For example: de:ad:00:00:be:af or DE-AD-00-00-BE-AF.",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "macvtap": {
                                                "description": "InterfaceMacvtap connects to a given network by extending the Kubernetes node's L2 networks via a macvtap interface.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "masquerade": {
                                                "description": "InterfaceMasquerade connects to a given network using netfilter rules to nat the traffic.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "model": {
                                                "description": "Interface model.\nOne of: e1000, e1000e, ne2k_pci, pcnet, rtl8139, virtio.\nDefaults to virtio.\nTODO:(ihar) switch to enums once opengen-api supports them. See: https://github.com/kubernetes/kube-openapi/issues/51",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "name": {
                                                "description": "Logical name of the interface as well as a reference to the associated networks.\nMust match the Name of a Network.",
                                                "type": "string"
                                              },
                                              "passt": {
                                                "description": "InterfacePasst connects to a given network.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "pciAddress": {
                                                "description": "If specified, the virtual network interface will be placed on the guests pci address with the specified PCI address. For example: 0000:81:01.10",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "ports": {
                                                "description": "List of ports to be forwarded to the virtual machine.",
                                                "type": [
                                                  "array",
                                                  "null"
                                                ],
                                                "items": {
                                                  "description": "Port represents a port to expose from the virtual machine.\nDefault protocol TCP.\nThe port field is mandatory",
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ],
                                                  "required": [
                                                    "port"
                                                  ],
                                                  "properties": {
                                                    "name": {
                                                      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "port": {
                                                      "description": "Number of port to expose for the virtual machine.\nThis must be a valid port number, 0 < x < 65536.",
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "protocol": {
                                                      "description": "Protocol for port. Must be UDP or TCP.\nDefaults to \"TCP\".",
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                }
                                              },
                                              "slirp": {
                                                "description": "InterfaceSlirp connects to a given network using QEMU user networking mode.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "sriov": {
                                                "description": "InterfaceSRIOV connects to a given network by passing-through an SR-IOV PCI device via vfio.",
                                                "type": [
                                                  "object",
                                                  "null"
                                                ]
                                              },
                                              "state": {
                                                "description": "State represents the requested operational state of the interface.\nThe (only) value supported is `absent`, expressing a request to remove the interface.",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              },
                                              "tag": {
                                                "description": "If specified, the virtual network interface address and its tag will be provided to the guest via config drive",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "logSerialConsole": {
                                          "description": "Whether to log the auto-attached default serial console or not.\nSerial console logs will be collect to a file and then streamed from a named `guest-console-log`.\nNot relevant if autoattachSerialConsole is disabled.\nDefaults to cluster wide setting on VirtualMachineOptions.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "networkInterfaceMultiqueue": {
                                          "description": "If specified, virtual network interfaces configured with a virtio bus will also enable the vhost multiqueue feature for network devices. The number of queues created depends on additional factors of the VirtualMachineInstance, like the number of guest CPUs.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "rng": {
                                          "description": "Whether to have random number generator from host",
                                          "type": [
                                            "object",
                                            "null"
                                          ]
                                        },
                                        "sound": {
                                          "description": "Whether to emulate a sound device.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "model": {
                                              "description": "We only support ich9 or ac97.\nIf SoundDevice is not set: No sound card is emulated.\nIf SoundDevice is set but Model is not: ich9",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "name": {
                                              "description": "User's defined name for this sound device",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "tpm": {
                                          "description": "Whether to emulate a TPM device.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "persistent": {
                                              "description": "Persistent indicates the state of the TPM device should be kept accross reboots\nDefaults to false",
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "useVirtioTransitional": {
                                          "description": "Fall back to legacy virtio 0.9 support if virtio bus is selected on devices.\nThis is helpful for old machines like CentOS6 or RHEL6 which\ndo not understand virtio_non_transitional (virtio 1.0).",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "watchdog": {
                                          "description": "Watchdog describes a watchdog device which can be added to the vmi.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "required": [
                                            "name"
                                          ],
                                          "properties": {
                                            "i6300esb": {
                                              "description": "i6300esb watchdog device.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "action": {
                                                  "description": "The action to take. Valid values are poweroff, reset, shutdown.\nDefaults to reset.",
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "name": {
                                              "description": "Name of the watchdog.",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "features": {
                                      "description": "Features like acpi, apic, hyperv, smm.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "acpi": {
                                          "description": "ACPI enables/disables ACPI inside the guest.\nDefaults to enabled.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "apic": {
                                          "description": "Defaults to the machine type setting.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            },
                                            "endOfInterrupt": {
                                              "description": "EndOfInterrupt enables the end of interrupt notification in the guest.\nDefaults to false.",
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "hyperv": {
                                          "description": "Defaults to the machine type setting.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "evmcs": {
                                              "description": "EVMCS Speeds up L2 vmexits, but disables other virtualization features. Requires vapic.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "frequencies": {
                                              "description": "Frequencies improves the TSC clock source handling for Hyper-V on KVM.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "ipi": {
                                              "description": "IPI improves performances in overcommited environments. Requires vpindex.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "reenlightenment": {
                                              "description": "Reenlightenment enables the notifications on TSC frequency changes.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "relaxed": {
                                              "description": "Relaxed instructs the guest OS to disable watchdog timeouts.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "reset": {
                                              "description": "Reset enables Hyperv reboot/reset for the vmi. Requires synic.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "runtime": {
                                              "description": "Runtime improves the time accounting to improve scheduling in the guest.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "spinlocks": {
                                              "description": "Spinlocks allows to configure the spinlock retry attempts.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                },
                                                "spinlocks": {
                                                  "description": "Retries indicates the number of retries.\nMust be a value greater or equal 4096.\nDefaults to 4096.",
                                                  "type": [
                                                    "integer",
                                                    "null"
                                                  ],
                                                  "format": "int32"
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "synic": {
                                              "description": "SyNIC enables the Synthetic Interrupt Controller.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "synictimer": {
                                              "description": "SyNICTimer enables Synthetic Interrupt Controller Timers, reducing CPU load.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "direct": {
                                                  "description": "Represents if a feature is enabled or disabled.",
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ],
                                                  "properties": {
                                                    "enabled": {
                                                      "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                      "type": [
                                                        "boolean",
                                                        "null"
                                                      ]
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "enabled": {
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "tlbflush": {
                                              "description": "TLBFlush improves performances in overcommited environments. Requires vpindex.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "vapic": {
                                              "description": "VAPIC improves the paravirtualized handling of interrupts.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "vendorid": {
                                              "description": "VendorID allows setting the hypervisor vendor id.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                },
                                                "vendorid": {
                                                  "description": "VendorID sets the hypervisor vendor id, visible to the vmi.\nString up to twelve characters.",
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "vpindex": {
                                              "description": "VPIndex enables the Virtual Processor Index to help windows identifying virtual processors.\nDefaults to the machine type setting.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "enabled": {
                                                  "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "kvm": {
                                          "description": "Configure how KVM presence is exposed to the guest.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "hidden": {
                                              "description": "Hide the KVM hypervisor from standard MSR based discovery.\nDefaults to false",
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "pvspinlock": {
                                          "description": "Notify the guest that the host supports paravirtual spinlocks.\nFor older kernels this feature should be explicitly disabled.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "smm": {
                                          "description": "SMM enables/disables System Management Mode.\nTSEG not yet implemented.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "enabled": {
                                              "description": "Enabled determines if the feature should be enabled or disabled on the guest.\nDefaults to true.",
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "firmware": {
                                      "description": "Firmware.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "bootloader": {
                                          "description": "Settings to control the bootloader that is used.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "bios": {
                                              "description": "If set (default), BIOS will be used.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "useSerial": {
                                                  "description": "If set, the BIOS output will be transmitted over serial",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "efi": {
                                              "description": "If set, EFI will be used instead of BIOS.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "persistent": {
                                                  "description": "If set to true, Persistent will persist the EFI NVRAM across reboots.\nDefaults to false",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                },
                                                "secureBoot": {
                                                  "description": "If set, SecureBoot will be enabled and the OVMF roms will be swapped for\nSecureBoot-enabled ones.\nRequires SMM to be enabled.\nDefaults to true",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "kernelBoot": {
                                          "description": "Settings to set the kernel for booting.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "container": {
                                              "description": "Container defines the container that containes kernel artifacts",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "required": [
                                                "image"
                                              ],
                                              "properties": {
                                                "image": {
                                                  "description": "Image that contains initrd / kernel files.",
                                                  "type": "string"
                                                },
                                                "imagePullPolicy": {
                                                  "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "imagePullSecret": {
                                                  "description": "ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.",
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "initrdPath": {
                                                  "description": "the fully-qualified path to the ramdisk image in the host OS",
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                },
                                                "kernelPath": {
                                                  "description": "The fully-qualified path to the kernel image in the host OS",
                                                  "type": [
                                                    "string",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "kernelArgs": {
                                              "description": "Arguments to be passed to the kernel at boot time",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "serial": {
                                          "description": "The system-serial-number in SMBIOS",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "uuid": {
                                          "description": "UUID reported by the vmi bios.\nDefaults to a random generated uid.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "ioThreadsPolicy": {
                                      "description": "Controls whether or not disks will share IOThreads.\nOmitting IOThreadsPolicy disables use of IOThreads.\nOne of: shared, auto",
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "launchSecurity": {
                                      "description": "Launch Security setting of the vmi.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "sev": {
                                          "description": "AMD Secure Encrypted Virtualization (SEV).",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "attestation": {
                                              "description": "If specified, run the attestation process for a vmi.",
                                              "type": [
                                                "object",
                                                "null"
                                              ]
                                            },
                                            "dhCert": {
                                              "description": "Base64 encoded guest owner's Diffie-Hellman key.",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "policy": {
                                              "description": "Guest policy flags as defined in AMD SEV API specification.\nNote: due to security reasons it is not allowed to enable guest debugging. Therefore NoDebug flag is not exposed to users and is always true.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "properties": {
                                                "encryptedState": {
                                                  "description": "SEV-ES is required.\nDefaults to false.",
                                                  "type": [
                                                    "boolean",
                                                    "null"
                                                  ]
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "session": {
                                              "description": "Base64 encoded session blob.",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "machine": {
                                      "description": "Machine type.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "type": {
                                          "description": "QEMU machine type is the actual chipset of the VirtualMachineInstance.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "memory": {
                                      "description": "Memory allow specifying the VMI memory features.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "guest": {
                                          "description": "Guest allows to specifying the amount of memory which is visible inside the Guest OS.\nThe Guest must lie between Requests and Limits from the resources section.\nDefaults to the requested memory in the resources section if not specified.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "hugepages": {
                                          "description": "Hugepages allow to use hugepages for the VirtualMachineInstance instead of regular memory.",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "properties": {
                                            "pageSize": {
                                              "description": "PageSize specifies the hugepage size, for x86_64 architecture valid values are 1Gi and 2Mi.",
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "maxGuest": {
                                          "description": "MaxGuest allows to specify the maximum amount of memory which is visible inside the Guest OS.\nThe delta between MaxGuest and Guest is the amount of memory that can be hot(un)plugged.",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "resources": {
                                      "description": "Resources describes the Compute Resources required by this vmi.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "limits": {
                                          "description": "Limits describes the maximum amount of compute resources allowed.\nValid resource keys are \"memory\" and \"cpu\".",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "overcommitGuestOverhead": {
                                          "description": "Don't ask the scheduler to take the guest-management overhead into account. Instead\nput the overhead only into the container's memory limit. This can lead to crashes if\nall memory is in use on a node. Defaults to false.",
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "requests": {
                                          "description": "Requests is a description of the initial vmi resources.\nValid resource keys are \"memory\" and \"cpu\".",
                                          "type": [
                                            "object",
                                            "null"
                                          ],
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "evictionStrategy": {
                                  "description": "EvictionStrategy can be set to \"LiveMigrate\" if the VirtualMachineInstance should be\nmigrated instead of shut-off in case of a node drain.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "hostname": {
                                  "description": "Specifies the hostname of the vmi\nIf not specified, the hostname will be set to the name of the vmi, if dhcp or cloud-init is configured properly.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "livenessProbe": {
                                  "description": "Periodic probe of VirtualMachineInstance liveness.\nVirtualmachineInstances will be stopped if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "exec": {
                                      "description": "One and only one of the following should be specified.\nExec specifies the action to take, it will be executed on the guest through the qemu-guest-agent.\nIf the guest agent is not available, this probe will fail.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "command": {
                                          "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    },
                                    "guestAgentPing": {
                                      "description": "GuestAgentPing contacts the qemu-guest-agent for availability checks.",
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port.\nTCP hooks not yet supported\nTODO: implement a realistic TCP lifecycle hook",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out.\nFor exec probes the timeout fails the probe but does not terminate the command running on the guest.\nThis means a blocking command can result in an increasing load on the guest.\nA small buffer will be added to the resulting workload exec probe to compensate for delays\ncaused by the qemu guest exec mechanism.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "networks": {
                                  "description": "List of networks that can be attached to a vm's virtual interface.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "Network represents a network type and a resource that should be connected to the vm.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "multus": {
                                        "description": "Represents the multus cni network.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "networkName"
                                        ],
                                        "properties": {
                                          "default": {
                                            "description": "Select the default network and add it to the\nmultus-cni.io/default-network annotation.",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          },
                                          "networkName": {
                                            "description": "References to a NetworkAttachmentDefinition CRD object. Format:\n<networkName>, <namespace>/<networkName>. If namespace is not\nspecified, VMI namespace is assumed.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Network name.\nMust be a DNS_LABEL and unique within the vm.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "pod": {
                                        "description": "Represents the stock pod network interface.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "vmIPv6NetworkCIDR": {
                                            "description": "IPv6 CIDR for the vm network.\nDefaults to fd10:0:2::/120 if not specified.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "vmNetworkCIDR": {
                                            "description": "CIDR for vm network.\nDefault 10.0.2.0/24 if not specified.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "nodeSelector": {
                                  "description": "NodeSelector is a selector which must be true for the vmi to fit on a node.\nSelector which must match a node's labels for the vmi to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "additionalProperties": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                },
                                "priorityClassName": {
                                  "description": "If specified, indicates the pod's priority.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "readinessProbe": {
                                  "description": "Periodic probe of VirtualMachineInstance service readiness.\nVirtualmachineInstances will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "exec": {
                                      "description": "One and only one of the following should be specified.\nExec specifies the action to take, it will be executed on the guest through the qemu-guest-agent.\nIf the guest agent is not available, this probe will fail.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "properties": {
                                        "command": {
                                          "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    },
                                    "guestAgentPing": {
                                      "description": "GuestAgentPing contacts the qemu-guest-agent for availability checks.",
                                      "type": [
                                        "object",
                                        "null"
                                      ]
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies the http request to perform.",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": [
                                            "array",
                                            "null"
                                          ],
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the VirtualMachineInstance has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness. Minimum value is 1.",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies an action involving a TCP port.\nTCP hooks not yet supported\nTODO: implement a realistic TCP lifecycle hook",
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "x-kubernetes-int-or-string": true
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out.\nFor exec probes the timeout fails the probe but does not terminate the command running on the guest.\nThis means a blocking command can result in an increasing load on the guest.\nA small buffer will be added to the resulting workload exec probe to compensate for delays\ncaused by the qemu guest exec mechanism.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": [
                                        "integer",
                                        "null"
                                      ],
                                      "format": "int32"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "schedulerName": {
                                  "description": "If specified, the VMI will be dispatched by specified scheduler.\nIf not specified, the VMI will be dispatched by default scheduler.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "startStrategy": {
                                  "description": "StartStrategy can be set to \"Paused\" if Virtual Machine should be started in paused state.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "subdomain": {
                                  "description": "If specified, the fully qualified vmi hostname will be \"<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\".\nIf not specified, the vmi will not have a domainname at all. The DNS entry will resolve to the vmi,\nno matter if the vmi itself can pick up a hostname.",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "terminationGracePeriodSeconds": {
                                  "description": "Grace period observed after signalling a VirtualMachineInstance to stop after which the VirtualMachineInstance is force terminated.",
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "format": "int64"
                                },
                                "tolerations": {
                                  "description": "If toleration is specified, obey all the toleration rules.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple <key,value,effect> using the matching operator <operator>.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "effect": {
                                        "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "key": {
                                        "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "operator": {
                                        "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "tolerationSeconds": {
                                        "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int64"
                                      },
                                      "value": {
                                        "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "topologySpreadConstraints": {
                                  "description": "TopologySpreadConstraints describes how a group of VMIs will be spread across a given topology\ndomains. K8s scheduler will schedule VMI pods in a way which abides by the constraints.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "maxSkew",
                                      "topologyKey",
                                      "whenUnsatisfiable"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "description": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                  "type": [
                                                    "array",
                                                    "null"
                                                  ],
                                                  "items": {
                                                    "type": [
                                                      "string",
                                                      "null"
                                                    ]
                                                  }
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "matchLabels": {
                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "additionalProperties": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                      },
                                      "matchLabelKeys": {
                                        "description": "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
                                        "type": [
                                          "array",
                                          "null"
                                        ],
                                        "items": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "maxSkew": {
                                        "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "minDomains": {
                                        "description": "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.\n\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).",
                                        "type": [
                                          "integer",
                                          "null"
                                        ],
                                        "format": "int32"
                                      },
                                      "nodeAffinityPolicy": {
                                        "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "nodeTaintsPolicy": {
                                        "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                                        "type": [
                                          "string",
                                          "null"
                                        ]
                                      },
                                      "topologyKey": {
                                        "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each <key, value> as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field.",
                                        "type": "string"
                                      },
                                      "whenUnsatisfiable": {
                                        "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "topologyKey",
                                    "whenUnsatisfiable"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "volumes": {
                                  "description": "List of volumes that can be mounted by disks belonging to the vmi.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "description": "Volume represents a named volume in a vmi.",
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "cloudInitConfigDrive": {
                                        "description": "CloudInitConfigDrive represents a cloud-init Config Drive user-data source.\nThe Config Drive data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest.\nMore info: https://cloudinit.readthedocs.io/en/latest/topics/datasources/configdrive.html",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "networkData": {
                                            "description": "NetworkData contains config drive inline cloud-init networkdata.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "networkDataBase64": {
                                            "description": "NetworkDataBase64 contains config drive cloud-init networkdata as a base64 encoded string.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "networkDataSecretRef": {
                                            "description": "NetworkDataSecretRef references a k8s secret that contains config drive networkdata.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic",
                                            "additionalProperties": false
                                          },
                                          "secretRef": {
                                            "description": "UserDataSecretRef references a k8s secret that contains config drive userdata.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic",
                                            "additionalProperties": false
                                          },
                                          "userData": {
                                            "description": "UserData contains config drive inline cloud-init userdata.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "userDataBase64": {
                                            "description": "UserDataBase64 contains config drive cloud-init userdata as a base64 encoded string.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "cloudInitNoCloud": {
                                        "description": "CloudInitNoCloud represents a cloud-init NoCloud user-data source.\nThe NoCloud data will be added as a disk to the vmi. A proper cloud-init installation is required inside the guest.\nMore info: http://cloudinit.readthedocs.io/en/latest/topics/datasources/nocloud.html",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "networkData": {
                                            "description": "NetworkData contains NoCloud inline cloud-init networkdata.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "networkDataBase64": {
                                            "description": "NetworkDataBase64 contains NoCloud cloud-init networkdata as a base64 encoded string.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "networkDataSecretRef": {
                                            "description": "NetworkDataSecretRef references a k8s secret that contains NoCloud networkdata.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic",
                                            "additionalProperties": false
                                          },
                                          "secretRef": {
                                            "description": "UserDataSecretRef references a k8s secret that contains NoCloud userdata.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic",
                                            "additionalProperties": false
                                          },
                                          "userData": {
                                            "description": "UserData contains NoCloud inline cloud-init userdata.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "userDataBase64": {
                                            "description": "UserDataBase64 contains NoCloud cloud-init userdata as a base64 encoded string.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "configMap": {
                                        "description": "ConfigMapSource represents a reference to a ConfigMap in the same namespace.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "name": {
                                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "optional": {
                                            "description": "Specify whether the ConfigMap or it's keys must be defined",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          },
                                          "volumeLabel": {
                                            "description": "The volume label of the resulting disk inside the VMI.\nDifferent bootstrapping mechanisms require different values.\nTypical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic",
                                        "additionalProperties": false
                                      },
                                      "containerDisk": {
                                        "description": "ContainerDisk references a docker image, embedding a qcow or raw disk.\nMore info: https://kubevirt.gitbooks.io/user-guide/registry-disk.html",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "image"
                                        ],
                                        "properties": {
                                          "image": {
                                            "description": "Image is the name of the image with the embedded disk.",
                                            "type": "string"
                                          },
                                          "imagePullPolicy": {
                                            "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "imagePullSecret": {
                                            "description": "ImagePullSecret is the name of the Docker registry secret required to pull the image. The secret must already exist.",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "path": {
                                            "description": "Path defines the path to disk file in the container",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "dataVolume": {
                                        "description": "DataVolume represents the dynamic creation a PVC for this volume as well as\nthe process of populating that PVC with a disk image.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "hotpluggable": {
                                            "description": "Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          },
                                          "name": {
                                            "description": "Name of both the DataVolume and the PVC in the same namespace.\nAfter PVC population the DataVolume is garbage collected by default.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "downwardAPI": {
                                        "description": "DownwardAPI represents downward API about the pod that should populate this volume",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "fields": {
                                            "description": "Fields is a list of downward API volume file",
                                            "type": [
                                              "array",
                                              "null"
                                            ],
                                            "items": {
                                              "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                              "type": [
                                                "object",
                                                "null"
                                              ],
                                              "required": [
                                                "path"
                                              ],
                                              "properties": {
                                                "fieldRef": {
                                                  "description": "Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.",
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ],
                                                  "required": [
                                                    "fieldPath"
                                                  ],
                                                  "properties": {
                                                    "apiVersion": {
                                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "fieldPath": {
                                                      "description": "Path of the field to select in the specified API version.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-kubernetes-map-type": "atomic",
                                                  "additionalProperties": false
                                                },
                                                "mode": {
                                                  "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                  "type": [
                                                    "integer",
                                                    "null"
                                                  ],
                                                  "format": "int32"
                                                },
                                                "path": {
                                                  "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                  "type": "string"
                                                },
                                                "resourceFieldRef": {
                                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                                  "type": [
                                                    "object",
                                                    "null"
                                                  ],
                                                  "required": [
                                                    "resource"
                                                  ],
                                                  "properties": {
                                                    "containerName": {
                                                      "description": "Container name: required for volumes, optional for env vars",
                                                      "type": [
                                                        "string",
                                                        "null"
                                                      ]
                                                    },
                                                    "divisor": {
                                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                      "x-kubernetes-int-or-string": true
                                                    },
                                                    "resource": {
                                                      "description": "Required: resource to select",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "x-kubernetes-map-type": "atomic",
                                                  "additionalProperties": false
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "volumeLabel": {
                                            "description": "The volume label of the resulting disk inside the VMI.\nDifferent bootstrapping mechanisms require different values.\nTypical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "downwardMetrics": {
                                        "description": "DownwardMetrics adds a very small disk to VMIs which contains a limited view of host and guest\nmetrics. The disk content is compatible with vhostmd (https://github.com/vhostmd/vhostmd) and vm-dump-metrics.",
                                        "type": [
                                          "object",
                                          "null"
                                        ]
                                      },
                                      "emptyDisk": {
                                        "description": "EmptyDisk represents a temporary disk which shares the vmis lifecycle.\nMore info: https://kubevirt.gitbooks.io/user-guide/disks-and-volumes.html",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "capacity"
                                        ],
                                        "properties": {
                                          "capacity": {
                                            "description": "Capacity of the sparse disk.",
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "ephemeral": {
                                        "description": "Ephemeral is a special volume source that \"wraps\" specified source and provides copy-on-write image on top of it.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "persistentVolumeClaim": {
                                            "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.\nDirectly attached to the vmi via qemu.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "required": [
                                              "claimName"
                                            ],
                                            "properties": {
                                              "claimName": {
                                                "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                                "type": "string"
                                              },
                                              "readOnly": {
                                                "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                                                "type": [
                                                  "boolean",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "hostDisk": {
                                        "description": "HostDisk represents a disk created on the cluster level",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "path",
                                          "type"
                                        ],
                                        "properties": {
                                          "capacity": {
                                            "description": "Capacity of the sparse disk",
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "path": {
                                            "description": "The path to HostDisk image located on the cluster",
                                            "type": "string"
                                          },
                                          "shared": {
                                            "description": "Shared indicate whether the path is shared between nodes",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          },
                                          "type": {
                                            "description": "Contains information if disk.img exists or should be created\nallowed options are 'Disk' and 'DiskOrCreate'",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "memoryDump": {
                                        "description": "MemoryDump is attached to the virt launcher and is populated with a memory dump of the vmi",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "claimName"
                                        ],
                                        "properties": {
                                          "claimName": {
                                            "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                            "type": "string"
                                          },
                                          "hotpluggable": {
                                            "description": "Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          },
                                          "readOnly": {
                                            "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "name": {
                                        "description": "Volume's name.\nMust be a DNS_LABEL and unique within the vmi.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string"
                                      },
                                      "persistentVolumeClaim": {
                                        "description": "PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace.\nDirectly attached to the vmi via qemu.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "required": [
                                          "claimName"
                                        ],
                                        "properties": {
                                          "claimName": {
                                            "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                            "type": "string"
                                          },
                                          "hotpluggable": {
                                            "description": "Hotpluggable indicates whether the volume can be hotplugged and hotunplugged.",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          },
                                          "readOnly": {
                                            "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "secret": {
                                        "description": "SecretVolumeSource represents a reference to a secret data in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/configuration/secret/",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "optional": {
                                            "description": "Specify whether the Secret or it's keys must be defined",
                                            "type": [
                                              "boolean",
                                              "null"
                                            ]
                                          },
                                          "secretName": {
                                            "description": "Name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          },
                                          "volumeLabel": {
                                            "description": "The volume label of the resulting disk inside the VMI.\nDifferent bootstrapping mechanisms require different values.\nTypical values are \"cidata\" (cloud-init), \"config-2\" (cloud-init) or \"OEMDRV\" (kickstart).",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "serviceAccount": {
                                        "description": "ServiceAccountVolumeSource represents a reference to a service account.\nThere can only be one volume of this type!\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "serviceAccountName": {
                                            "description": "Name of the service account in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                                            "type": [
                                              "string",
                                              "null"
                                            ]
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "sysprep": {
                                        "description": "Represents a Sysprep volume source.",
                                        "type": [
                                          "object",
                                          "null"
                                        ],
                                        "properties": {
                                          "configMap": {
                                            "description": "ConfigMap references a ConfigMap that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic",
                                            "additionalProperties": false
                                          },
                                          "secret": {
                                            "description": "Secret references a k8s Secret that contains Sysprep answer file named autounattend.xml that should be attached as disk of CDROM type.",
                                            "type": [
                                              "object",
                                              "null"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                                "type": [
                                                  "string",
                                                  "null"
                                                ]
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic",
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "infrastructure.cluster.x-k8s.io",
      "kind": "KubevirtMachineTemplate",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}