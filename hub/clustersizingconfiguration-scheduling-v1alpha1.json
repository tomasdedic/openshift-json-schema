{
  "description": "ClusterSizingConfiguration defines the desired state of ClusterSizingConfiguration.\nConfiguration options here allow management cluster administrators to define sizing classes for hosted clusters and\nhow the system should adapt hosted cluster functionality based on size.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "scheduling.hypershift.openshift.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "ClusterSizingConfiguration"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "ClusterSizingConfigurationSpec defines the desired state of ClusterSizingConfiguration",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "concurrency": {
          "description": "Concurrency defines the bounds of allowed behavior for clusters transitioning between sizes.\nTransitions will require that request-serving pods be re-scheduled between nodes, so each\ntransition incurs a small user-facing cost as well as a cost to the management cluster. Use\nthe concurrency configuration options to manage how many transitions can be occurring.\nIf unset, a sensible default will be provided.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "limit": {
              "description": "Limit is the maximum allowed number of cluster size transitions during the sliding window.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "minimum": 1
            },
            "slidingWindow": {
              "description": "SlidingWindow is the window over which the concurrency bound is enforced.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^([0-9]+(\\.[0-9]+)?(s|m|h))+$"
            }
          },
          "additionalProperties": false
        },
        "nonRequestServingNodesBufferPerZone": {
          "description": "NonRequestServingNodesBufferPerZone is the number of extra nodes to allocate for non request serving\nworkloads per zone.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "x-kubernetes-int-or-string": true
        },
        "sizes": {
          "description": "Sizes holds the different t-shirt size classes into which guest clusters will be sorted.\nEach size class applies to guest clusters using node count criteria; it is required that\nthe entire interval between [0,+inf) be covered by the set of sizes provided here.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "SizeConfiguration holds options for clusters of a given size.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "criteria",
              "name"
            ],
            "properties": {
              "criteria": {
                "description": "Criteria defines the node count range for clusters to fall into this t-shirt size class.",
                "type": "object",
                "required": [
                  "from"
                ],
                "properties": {
                  "from": {
                    "description": "From is the inclusive lower limit to node count for a cluster to be considered a particular size.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                  },
                  "to": {
                    "description": "To is the inclusive upper limit to node count for a cluster to be considered a particular size.\nIf unset, this size class will match clusters of all sizes greater than the lower limit.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "minimum": 0
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "message": "lower limit must be less than or equal to the upper limit",
                    "rule": "!has(self.to) || self.from <= self.to"
                  }
                ],
                "additionalProperties": false
              },
              "effects": {
                "description": "Effects define the effects on a cluster being considered part of this t-shirt size class.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "APICriticalPriorityClassName": {
                    "description": "APICriticalPriorityClassName is the priority class for pods in the API request serving path.\nThis includes Kube API Server, OpenShift APIServer, etc.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "controlPlanePriorityClassName": {
                    "description": "ControlPlanePriorityClassName is the priority class to use for most control plane pods",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "etcdPriorityClassName": {
                    "description": "EtcdPriorityClassName is the priority class to use for etcd pods",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "kasGoMemLimit": {
                    "description": "KASGoMemLimit is the value to set for the $GOMEMLIMIT of the Kube APIServer container",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "resourceRequests": {
                    "description": "ResourceRequests allows specifying resource requests for control plane pods.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "containerName",
                        "deploymentName"
                      ],
                      "properties": {
                        "containerName": {
                          "description": "ContainerName is the name of the container to which the resource request applies.",
                          "type": "string"
                        },
                        "cpu": {
                          "description": "CPU is the amount of CPU to request for the container.",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        },
                        "deploymentName": {
                          "description": "DeploymentName is the name of the deployment to which the resource request applies.",
                          "type": "string"
                        },
                        "memory": {
                          "description": "Memory is the amount of memory to request for the container.",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "management": {
                "description": "Management configures the management aspects of this size class on the management plane.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "nonRequestServingNodesPerZone": {
                    "description": "NonRequestServingNodesPerZone is the number of nodes to allocate for non request serving workloads\nper HostedCluster. This will likely be a fraction of a node (ie. 0.2) to allow 5 HostedClusters in\na single node. The total number of nodes needed per HostedCluster is this number multiplied by 3\n(number of zones).",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "x-kubernetes-int-or-string": true
                  },
                  "placeholders": {
                    "description": "Placeholders configures the number of dummy workloads that will be scheduled irrespective of\nHostedClusters in order to keep a set of nodes ready to accept new cluster creation and scheduling.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "Name is the t-shirt size name.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-validations": [
            {
              "message": "exactly one size class must have a lower limit of zero",
              "rule": "self.exists_one(i, i.criteria.from == 0)"
            },
            {
              "message": "exactly one size class must have no upper limit",
              "rule": "self.exists_one(i, !has(i.criteria.to))"
            }
          ]
        },
        "transitionDelay": {
          "description": "TransitionDelay configures how quickly the system reacts to clusters transitioning between size classes.\nIt may be advantageous, for instance, to have a near-instant scale-down for clusters that begin to\nuse fewer resources, but allow for some lag on scale-up to ensure that the use is sustained before\nincurring the larger cost for scale-up.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "decrease": {
              "description": "Decrease defines the minimum period of time to wait between a cluster's size decreasing and\nthe t-shirt size assigned to it being updated to reflect the new size.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^([0-9]+(\\.[0-9]+)?(s|m|h))+$"
            },
            "increase": {
              "description": "Increase defines the minimum period of time to wait between a cluster's size increasing and\nthe t-shirt size assigned to it being updated to reflect the new size.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^([0-9]+(\\.[0-9]+)?(s|m|h))+$"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ClusterSizingConfigurationStatus defines the observed state of ClusterSizingConfiguration",
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions contain details about the various aspects of cluster sizing.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "scheduling.hypershift.openshift.io",
      "kind": "ClusterSizingConfiguration",
      "version": "v1alpha1"
    }
  ],
  "x-kubernetes-validations": [
    {
      "message": "exactly one configuration may exist and must be named 'cluster'",
      "rule": "self.metadata.name == 'cluster'"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}