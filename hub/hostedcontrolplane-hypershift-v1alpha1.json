{
  "description": "HostedControlPlane defines the desired state of HostedControlPlane",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "hypershift.openshift.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": [
        "string",
        "null"
      ],
      "enum": [
        "HostedControlPlane"
      ]
    },
    "metadata": {
      "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
      "$ref": "_definitions.json#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.ObjectMeta"
    },
    "spec": {
      "description": "HostedControlPlaneSpec defines the desired state of HostedControlPlane",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "dns",
        "etcd",
        "infraID",
        "issuerURL",
        "platform",
        "pullSecret",
        "releaseImage",
        "services",
        "sshKey"
      ],
      "properties": {
        "additionalTrustBundle": {
          "description": "AdditionalTrustBundle references a ConfigMap containing a PEM-encoded X.509 certificate bundle",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "apiAdvertiseAddress": {
          "description": "deprecated\nuse networking.apiServer.AdvertiseAddress\nAPIAdvertiseAddress is the address at which the APIServer listens\ninside a worker.",
          "type": [
            "string",
            "null"
          ]
        },
        "apiAllowedCIDRBlocks": {
          "description": "deprecated\nuse networking.apiServer.APIAllowedCIDRBlocks\nAPIAllowedCIDRBlocks is an allow list of CIDR blocks that can access the APIServer\nIf not specified, traffic is allowed from all addresses.\nThis depends on underlying support by the cloud provider for Service LoadBalancerSourceRanges",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ],
            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$"
          }
        },
        "apiPort": {
          "description": "deprecated\nuse networking.apiServer.APIPort\nAPIPort is the port at which the APIServer listens inside a worker",
          "type": [
            "integer",
            "null"
          ],
          "format": "int32"
        },
        "auditWebhook": {
          "description": "AuditWebhook contains metadata for configuring an audit webhook\nendpoint for a cluster to process cluster audit events. It references\na secret that contains the webhook information for the audit webhook endpoint.\nIt is a secret because if the endpoint has MTLS the kubeconfig will contain client\nkeys. This is currently only supported in IBM Cloud. The kubeconfig needs to be stored\nin the secret with a secret key name that corresponds to the constant AuditWebhookKubeconfigKey.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "autoscaling": {
          "description": "Autoscaling specifies auto-scaling behavior that applies to all NodePools\nassociated with the control plane.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "maxNodeProvisionTime": {
              "description": "MaxNodeProvisionTime is the maximum time to wait for node provisioning\nbefore considering the provisioning to be unsuccessful, expressed as a Go\nduration string. The default is 15 minutes.",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^([0-9]+(\\.[0-9]+)?(ns|us|\u00b5s|ms|s|m|h))+$"
            },
            "maxNodesTotal": {
              "description": "MaxNodesTotal is the maximum allowable number of nodes across all NodePools\nfor a HostedCluster. The autoscaler will not grow the cluster beyond this\nnumber.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "minimum": 0
            },
            "maxPodGracePeriod": {
              "description": "MaxPodGracePeriod is the maximum seconds to wait for graceful pod\ntermination before scaling down a NodePool. The default is 600 seconds.",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "minimum": 0
            },
            "podPriorityThreshold": {
              "description": "PodPriorityThreshold enables users to schedule \"best-effort\" pods, which\nshouldn't trigger autoscaler actions, but only run when there are spare\nresources available. The default is -10.\n\n\nSee the following for more details:\nhttps://github.com/kubernetes/autoscaler/blob/master/cluster-autoscaler/FAQ.md#how-does-cluster-autoscaler-work-with-pod-priority-and-preemption",
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "channel": {
          "description": "channel is an identifier for explicitly requesting that a non-default\nset of updates be applied to this cluster. The default channel will be\ncontain stable updates that are appropriate for production clusters.",
          "type": [
            "string",
            "null"
          ]
        },
        "clusterID": {
          "description": "ClusterID is the unique id that identifies the cluster externally.\nMaking it optional here allows us to keep compatibility with previous\nversions of the control-plane-operator that have no knowledge of this\nfield.",
          "type": [
            "string",
            "null"
          ]
        },
        "configuration": {
          "description": "Configuration embeds resources that correspond to the openshift configuration API:\nhttps://docs.openshift.com/container-platform/4.7/rest_api/config_apis/config-apis-index.html",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "apiServer": {
              "description": "APIServer holds configuration (like serving certificates, client CA and CORS domains)\nshared by all API servers in the system, among them especially kube-apiserver\nand openshift-apiserver.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "additionalCORSAllowedOrigins": {
                  "description": "additionalCORSAllowedOrigins lists additional, user-defined regular expressions describing hosts for which the\nAPI server allows access using the CORS headers. This may be needed to access the API and the integrated OAuth\nserver from JavaScript applications.\nThe values are regular expressions that correspond to the Golang regular expression language.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "audit": {
                  "description": "audit specifies the settings for audit configuration to be applied to all OpenShift-provided\nAPI servers in the cluster.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "customRules": {
                      "description": "customRules specify profiles per group. These profile take precedence over the\ntop-level profile field if they apply. They are evaluation from top to bottom and\nthe first one that matches, applies.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "AuditCustomRule describes a custom rule for an audit profile that takes precedence over\nthe top-level profile.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "group",
                          "profile"
                        ],
                        "properties": {
                          "group": {
                            "description": "group is a name of group a request user must be member of in order to this profile to apply.",
                            "type": "string",
                            "minLength": 1
                          },
                          "profile": {
                            "description": "profile specifies the name of the desired audit policy configuration to be deployed to\nall OpenShift-provided API servers in the cluster.\n\n\nThe following profiles are provided:\n- Default: the existing default policy.\n- WriteRequestBodies: like 'Default', but logs request and response HTTP payloads for\nwrite requests (create, update, patch).\n- AllRequestBodies: like 'WriteRequestBodies', but also logs request and response\nHTTP payloads for read requests (get, list).\n- None: no requests are logged at all, not even oauthaccesstokens and oauthauthorizetokens.\n\n\nIf unset, the 'Default' profile is used as the default.",
                            "type": "string",
                            "enum": [
                              "Default",
                              "WriteRequestBodies",
                              "AllRequestBodies",
                              "None"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "group"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "profile": {
                      "description": "profile specifies the name of the desired top-level audit profile to be applied to all requests\nsent to any of the OpenShift-provided API servers in the cluster (kube-apiserver,\nopenshift-apiserver and oauth-apiserver), with the exception of those requests that match\none or more of the customRules.\n\n\nThe following profiles are provided:\n- Default: default policy which means MetaData level logging with the exception of events\n  (not logged at all), oauthaccesstokens and oauthauthorizetokens (both logged at RequestBody\n  level).\n- WriteRequestBodies: like 'Default', but logs request and response HTTP payloads for\nwrite requests (create, update, patch).\n- AllRequestBodies: like 'WriteRequestBodies', but also logs request and response\nHTTP payloads for read requests (get, list).\n- None: no requests are logged at all, not even oauthaccesstokens and oauthauthorizetokens.\n\n\nWarning: It is not recommended to disable audit logging by using the `None` profile unless you\nare fully aware of the risks of not logging data that can be beneficial when troubleshooting issues.\nIf you disable audit logging and a support situation arises, you might need to enable audit logging\nand reproduce the issue in order to troubleshoot properly.\n\n\nIf unset, the 'Default' profile is used as the default.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "Default",
                        "WriteRequestBodies",
                        "AllRequestBodies",
                        "None"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "clientCA": {
                  "description": "clientCA references a ConfigMap containing a certificate bundle for the signers that will be recognized for\nincoming client certificates in addition to the operator managed signers. If this is empty, then only operator managed signers are valid.\nYou usually only have to set this if you have your own PKI you wish to honor client certificates from.\nThe ConfigMap must exist in the openshift-config namespace and contain the following required fields:\n- ConfigMap.Data[\"ca-bundle.crt\"] - CA bundle.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the metadata.name of the referenced config map",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "encryption": {
                  "description": "encryption allows the configuration of encryption of resources at the datastore layer.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "type": {
                      "description": "type defines what encryption type should be used to encrypt resources at the datastore layer.\nWhen this field is unset (i.e. when it is set to the empty string), identity is implied.\nThe behavior of unset can and will change over time.  Even if encryption is enabled by default,\nthe meaning of unset may change to a different encryption type based on changes in best practices.\n\n\nWhen encryption is enabled, all sensitive resources shipped with the platform are encrypted.\nThis list of sensitive resources can and will change over time.  The current authoritative list is:\n\n\n  1. secrets\n  2. configmaps\n  3. routes.route.openshift.io\n  4. oauthaccesstokens.oauth.openshift.io\n  5. oauthauthorizetokens.oauth.openshift.io",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "",
                        "identity",
                        "aescbc",
                        "aesgcm"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "servingCerts": {
                  "description": "servingCert is the TLS cert info for serving secure traffic. If not specified, operator managed certificates\nwill be used for serving secure traffic.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "namedCertificates": {
                      "description": "namedCertificates references secrets containing the TLS cert info for serving secure traffic to specific hostnames.\nIf no named certificates are provided, or no named certificates match the server name as understood by a client,\nthe defaultServingCertificate will be used.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "description": "APIServerNamedServingCert maps a server DNS name, as understood by a client, to a certificate.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "names": {
                            "description": "names is a optional list of explicit DNS names (leading wildcards allowed) that should use this certificate to\nserve secure traffic. If no names are provided, the implicit names will be extracted from the certificates.\nExact names trump over wildcard names. Explicit names defined here trump over extracted implicit names.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "servingCertificate": {
                            "description": "servingCertificate references a kubernetes.io/tls type secret containing the TLS cert info for serving secure traffic.\nThe secret must exist in the openshift-config namespace and contain the following required fields:\n- Secret.Data[\"tls.key\"] - TLS private key.\n- Secret.Data[\"tls.crt\"] - TLS certificate.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "tlsSecurityProfile": {
                  "description": "tlsSecurityProfile specifies settings for TLS connections for externally exposed servers.\n\n\nIf unset, a default (which may change between releases) is chosen. Note that only Old,\nIntermediate and Custom profiles are currently supported, and the maximum available\nminTLSVersion is VersionTLS12.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "custom": {
                      "description": "custom is a user-defined TLS security profile. Be extremely careful using a custom\nprofile as invalid configurations can be catastrophic. An example custom profile\nlooks like this:\n\n\n  ciphers:\n    - ECDHE-ECDSA-CHACHA20-POLY1305\n    - ECDHE-RSA-CHACHA20-POLY1305\n    - ECDHE-RSA-AES128-GCM-SHA256\n    - ECDHE-ECDSA-AES128-GCM-SHA256\n  minTLSVersion: VersionTLS11"
                    },
                    "intermediate": {
                      "description": "intermediate is a TLS security profile based on:\n\n\nhttps://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29\n\n\nand looks like this (yaml):\n\n\n  ciphers:\n    - TLS_AES_128_GCM_SHA256\n    - TLS_AES_256_GCM_SHA384\n    - TLS_CHACHA20_POLY1305_SHA256\n    - ECDHE-ECDSA-AES128-GCM-SHA256\n    - ECDHE-RSA-AES128-GCM-SHA256\n    - ECDHE-ECDSA-AES256-GCM-SHA384\n    - ECDHE-RSA-AES256-GCM-SHA384\n    - ECDHE-ECDSA-CHACHA20-POLY1305\n    - ECDHE-RSA-CHACHA20-POLY1305\n    - DHE-RSA-AES128-GCM-SHA256\n    - DHE-RSA-AES256-GCM-SHA384\n  minTLSVersion: VersionTLS12"
                    },
                    "modern": {
                      "description": "modern is a TLS security profile based on:\n\n\nhttps://wiki.mozilla.org/Security/Server_Side_TLS#Modern_compatibility\n\n\nand looks like this (yaml):\n\n\n  ciphers:\n    - TLS_AES_128_GCM_SHA256\n    - TLS_AES_256_GCM_SHA384\n    - TLS_CHACHA20_POLY1305_SHA256\n  minTLSVersion: VersionTLS13\n\n\nNOTE: Currently unsupported."
                    },
                    "old": {
                      "description": "old is a TLS security profile based on:\n\n\nhttps://wiki.mozilla.org/Security/Server_Side_TLS#Old_backward_compatibility\n\n\nand looks like this (yaml):\n\n\n  ciphers:\n    - TLS_AES_128_GCM_SHA256\n    - TLS_AES_256_GCM_SHA384\n    - TLS_CHACHA20_POLY1305_SHA256\n    - ECDHE-ECDSA-AES128-GCM-SHA256\n    - ECDHE-RSA-AES128-GCM-SHA256\n    - ECDHE-ECDSA-AES256-GCM-SHA384\n    - ECDHE-RSA-AES256-GCM-SHA384\n    - ECDHE-ECDSA-CHACHA20-POLY1305\n    - ECDHE-RSA-CHACHA20-POLY1305\n    - DHE-RSA-AES128-GCM-SHA256\n    - DHE-RSA-AES256-GCM-SHA384\n    - DHE-RSA-CHACHA20-POLY1305\n    - ECDHE-ECDSA-AES128-SHA256\n    - ECDHE-RSA-AES128-SHA256\n    - ECDHE-ECDSA-AES128-SHA\n    - ECDHE-RSA-AES128-SHA\n    - ECDHE-ECDSA-AES256-SHA384\n    - ECDHE-RSA-AES256-SHA384\n    - ECDHE-ECDSA-AES256-SHA\n    - ECDHE-RSA-AES256-SHA\n    - DHE-RSA-AES128-SHA256\n    - DHE-RSA-AES256-SHA256\n    - AES128-GCM-SHA256\n    - AES256-GCM-SHA384\n    - AES128-SHA256\n    - AES256-SHA256\n    - AES128-SHA\n    - AES256-SHA\n    - DES-CBC3-SHA\n  minTLSVersion: VersionTLS10"
                    },
                    "type": {
                      "description": "type is one of Old, Intermediate, Modern or Custom. Custom provides\nthe ability to specify individual TLS security profile parameters.\nOld, Intermediate and Modern are TLS security profiles based on:\n\n\nhttps://wiki.mozilla.org/Security/Server_Side_TLS#Recommended_configurations\n\n\nThe profiles are intent based, so they may change over time as new ciphers are developed and existing ciphers\nare found to be insecure.  Depending on precisely which ciphers are available to a process, the list may be\nreduced.\n\n\nNote that the Modern profile is currently not supported because it is not\nyet well adopted by common software libraries.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "Old",
                        "Intermediate",
                        "Modern",
                        "Custom"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "authentication": {
              "description": "Authentication specifies cluster-wide settings for authentication (like OAuth and\nwebhook token authenticators).",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "oauthMetadata": {
                  "description": "oauthMetadata contains the discovery endpoint data for OAuth 2.0\nAuthorization Server Metadata for an external OAuth server.\nThis discovery document can be viewed from its served location:\noc get --raw '/.well-known/oauth-authorization-server'\nFor further details, see the IETF Draft:\nhttps://tools.ietf.org/html/draft-ietf-oauth-discovery-04#section-2\nIf oauthMetadata.name is non-empty, this value has precedence\nover any metadata reference stored in status.\nThe key \"oauthMetadata\" is used to locate the data.\nIf specified and the config map or expected key is not found, no metadata is served.\nIf the specified metadata is not valid, no metadata is served.\nThe namespace for this config map is openshift-config.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the metadata.name of the referenced config map",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "oidcProviders": {
                  "description": "OIDCProviders are OIDC identity providers that can issue tokens\nfor this cluster\nCan only be set if \"Type\" is set to \"OIDC\".\n\n\nAt most one provider can be configured.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "maxItems": 1,
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "issuer",
                      "name"
                    ],
                    "properties": {
                      "claimMappings": {
                        "description": "ClaimMappings describes rules on how to transform information from an\nID token into a cluster identity",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "groups": {
                            "description": "Groups is a name of the claim that should be used to construct\ngroups for the cluster identity.\nThe referenced claim must use array of strings values.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "claim"
                            ],
                            "properties": {
                              "claim": {
                                "description": "Claim is a JWT token claim to be used in the mapping",
                                "type": "string"
                              },
                              "prefix": {
                                "description": "Prefix is a string to prefix the value from the token in the result of the\nclaim mapping.\n\n\nBy default, no prefixing occurs.\n\n\nExample: if `prefix` is set to \"myoidc:\"\" and the `claim` in JWT contains\nan array of strings \"a\", \"b\" and  \"c\", the mapping will result in an\narray of string \"myoidc:a\", \"myoidc:b\" and \"myoidc:c\".",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "username": {
                            "description": "Username is a name of the claim that should be used to construct\nusernames for the cluster identity.\n\n\nDefault value: \"sub\"",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "claim"
                            ],
                            "properties": {
                              "claim": {
                                "description": "Claim is a JWT token claim to be used in the mapping",
                                "type": "string"
                              },
                              "prefix": {
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "prefixString"
                                ],
                                "properties": {
                                  "prefixString": {
                                    "type": "string",
                                    "minLength": 1
                                  }
                                },
                                "additionalProperties": false
                              },
                              "prefixPolicy": {
                                "description": "PrefixPolicy specifies how a prefix should apply.\n\n\nBy default, claims other than `email` will be prefixed with the issuer URL to\nprevent naming clashes with other plugins.\n\n\nSet to \"NoPrefix\" to disable prefixing.\n\n\nExample:\n    (1) `prefix` is set to \"myoidc:\" and `claim` is set to \"username\".\n        If the JWT claim `username` contains value `userA`, the resulting\n        mapped value will be \"myoidc:userA\".\n    (2) `prefix` is set to \"myoidc:\" and `claim` is set to \"email\". If the\n        JWT `email` claim contains value \"userA@myoidc.tld\", the resulting\n        mapped value will be \"myoidc:userA@myoidc.tld\".\n    (3) `prefix` is unset, `issuerURL` is set to `https://myoidc.tld`,\n        the JWT claims include \"username\":\"userA\" and \"email\":\"userA@myoidc.tld\",\n        and `claim` is set to:\n        (a) \"username\": the mapped value will be \"https://myoidc.tld#userA\"\n        (b) \"email\": the mapped value will be \"userA@myoidc.tld\"",
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "enum": [
                                  "",
                                  "NoPrefix",
                                  "Prefix"
                                ]
                              }
                            },
                            "x-kubernetes-validations": [
                              {
                                "message": "prefix must be set if prefixPolicy is 'Prefix', but must remain unset otherwise",
                                "rule": "has(self.prefixPolicy) && self.prefixPolicy == 'Prefix' ? (has(self.prefix) && size(self.prefix.prefixString) > 0) : !has(self.prefix)"
                              }
                            ],
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "claimValidationRules": {
                        "description": "ClaimValidationRules are rules that are applied to validate token claims to authenticate users.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "requiredClaim": {
                              "description": "RequiredClaim allows configuring a required claim name and its expected\nvalue",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "claim",
                                "requiredValue"
                              ],
                              "properties": {
                                "claim": {
                                  "description": "Claim is a name of a required claim. Only claims with string values are\nsupported.",
                                  "type": "string",
                                  "minLength": 1
                                },
                                "requiredValue": {
                                  "description": "RequiredValue is the required value for the claim.",
                                  "type": "string",
                                  "minLength": 1
                                }
                              },
                              "additionalProperties": false
                            },
                            "type": {
                              "description": "Type sets the type of the validation rule",
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "RequiredClaim"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "issuer": {
                        "description": "Issuer describes atributes of the OIDC token issuer",
                        "type": "object",
                        "required": [
                          "audiences",
                          "issuerURL"
                        ],
                        "properties": {
                          "audiences": {
                            "description": "Audiences is an array of audiences that the token was issued for.\nValid tokens must include at least one of these values in their\n\"aud\" claim.\nMust be set to exactly one value.",
                            "type": "array",
                            "maxItems": 10,
                            "minItems": 1,
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "minLength": 1
                            },
                            "x-kubernetes-list-type": "set"
                          },
                          "issuerCertificateAuthority": {
                            "description": "CertificateAuthority is a reference to a config map in the\nconfiguration namespace. The .data of the configMap must contain\nthe \"ca-bundle.crt\" key.\nIf unset, system trust is used instead.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced config map",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "issuerURL": {
                            "description": "URL is the serving URL of the token issuer.\nMust use the https:// scheme.",
                            "type": "string",
                            "pattern": "^https:\\/\\/[^\\s]"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the OIDC provider",
                        "type": "string",
                        "minLength": 1
                      },
                      "oidcClients": {
                        "description": "OIDCClients contains configuration for the platform's clients that\nneed to request tokens from the issuer",
                        "type": [
                          "array",
                          "null"
                        ],
                        "maxItems": 20,
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "clientID",
                            "componentName",
                            "componentNamespace"
                          ],
                          "properties": {
                            "clientID": {
                              "description": "ClientID is the identifier of the OIDC client from the OIDC provider",
                              "type": "string",
                              "minLength": 1
                            },
                            "clientSecret": {
                              "description": "ClientSecret refers to a secret in the `openshift-config` namespace that\ncontains the client secret in the `clientSecret` key of the `.data` field",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "name is the metadata.name of the referenced secret",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "componentName": {
                              "description": "ComponentName is the name of the component that is supposed to consume this\nclient configuration",
                              "type": "string",
                              "maxLength": 256,
                              "minLength": 1
                            },
                            "componentNamespace": {
                              "description": "ComponentNamespace is the namespace of the component that is supposed to consume this\nclient configuration",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1
                            },
                            "extraScopes": {
                              "description": "ExtraScopes is an optional set of scopes to request tokens with.",
                              "type": [
                                "array",
                                "null"
                              ],
                              "items": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "x-kubernetes-list-type": "set"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "componentNamespace",
                          "componentName"
                        ],
                        "x-kubernetes-list-type": "map"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "serviceAccountIssuer": {
                  "description": "serviceAccountIssuer is the identifier of the bound service account token\nissuer.\nThe default is https://kubernetes.default.svc\nWARNING: Updating this field will not result in immediate invalidation of all bound tokens with the\nprevious issuer value. Instead, the tokens issued by previous service account issuer will continue to\nbe trusted for a time period chosen by the platform (currently set to 24h).\nThis time period is subject to change over time.\nThis allows internal components to transition to use new service account issuer without service distruption.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "type": {
                  "description": "type identifies the cluster managed, user facing authentication mode in use.\nSpecifically, it manages the component that responds to login attempts.\nThe default is IntegratedOAuth.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "webhookTokenAuthenticator": {
                  "description": "webhookTokenAuthenticator configures a remote token reviewer.\nThese remote authentication webhooks can be used to verify bearer tokens\nvia the tokenreviews.authentication.k8s.io REST API. This is required to\nhonor bearer tokens that are provisioned by an external authentication service.\n\n\nCan only be set if \"Type\" is set to \"None\".",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "kubeConfig"
                  ],
                  "properties": {
                    "kubeConfig": {
                      "description": "kubeConfig references a secret that contains kube config file data which\ndescribes how to access the remote webhook service.\nThe namespace for the referenced secret is openshift-config.\n\n\nFor further details, see:\n\n\nhttps://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication\n\n\nThe key \"kubeConfig\" is used to locate the data.\nIf the secret or expected key is not found, the webhook is not honored.\nIf the specified kube config data is not valid, the webhook is not honored.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced secret",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "webhookTokenAuthenticators": {
                  "description": "webhookTokenAuthenticators is DEPRECATED, setting it has no effect.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "deprecatedWebhookTokenAuthenticator holds the necessary configuration options for a remote token authenticator.\nIt's the same as WebhookTokenAuthenticator but it's missing the 'required' validation on KubeConfig field.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "kubeConfig": {
                        "description": "kubeConfig contains kube config file data which describes how to access the remote webhook service.\nFor further details, see:\nhttps://kubernetes.io/docs/reference/access-authn-authz/authentication/#webhook-token-authentication\nThe key \"kubeConfig\" is used to locate the data.\nIf the secret or expected key is not found, the webhook is not honored.\nIf the specified kube config data is not valid, the webhook is not honored.\nThe namespace for this secret is determined by the point of use.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "name is the metadata.name of the referenced secret",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "configMapRefs": {
              "description": "ConfigMapRefs holds references to any configmaps referenced by\nconfiguration entries. Entries can reference the configmaps using local\nobject references.\n\n\nDeprecated\nThis field is deprecated and will be removed in a future release",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              }
            },
            "featureGate": {
              "description": "FeatureGate holds cluster-wide information about feature gates.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "customNoUpgrade": {
                  "description": "customNoUpgrade allows the enabling or disabling of any feature. Turning this feature set on IS NOT SUPPORTED, CANNOT BE UNDONE, and PREVENTS UPGRADES.\nBecause of its nature, this setting cannot be validated.  If you have any typos or accidentally apply invalid combinations\nyour cluster may fail in an unrecoverable way.  featureSet must equal \"CustomNoUpgrade\" must be set to use this field."
                },
                "featureSet": {
                  "description": "featureSet changes the list of features in the cluster.  The default is empty.  Be very careful adjusting this setting.\nTurning on or off features may cause irreversible changes in your cluster which cannot be undone.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "image": {
              "description": "Image governs policies related to imagestream imports and runtime configuration\nfor external registries. It allows cluster admins to configure which registries\nOpenShift is allowed to import images from, extra CA trust bundles for external\nregistries, and policies to block or allow registry hostnames.\nWhen exposing OpenShift's image registry to the public, this also lets cluster\nadmins specify the external hostname.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "additionalTrustedCA": {
                  "description": "additionalTrustedCA is a reference to a ConfigMap containing additional CAs that\nshould be trusted during imagestream import, pod image pull, build image pull, and\nimageregistry pullthrough.\nThe namespace for this config map is openshift-config.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the metadata.name of the referenced config map",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "allowedRegistriesForImport": {
                  "description": "allowedRegistriesForImport limits the container image registries that normal users may import\nimages from. Set this list to the registries that you trust to contain valid Docker\nimages and that you want applications to be able to import from. Users with\npermission to create Images or ImageStreamMappings via the API are not affected by\nthis policy - typically only administrators or system integrations will have those\npermissions.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "RegistryLocation contains a location of the registry specified by the registry domain\nname. The domain name might include wildcards, like '*' or '??'.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "domainName": {
                        "description": "domainName specifies a domain name for the registry\nIn case the registry use non-standard (80 or 443) port, the port should be included\nin the domain name as well.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "insecure": {
                        "description": "insecure indicates whether the registry is secure (https) or insecure (http)\nBy default (if not specified) the registry is assumed as secure.",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "externalRegistryHostnames": {
                  "description": "externalRegistryHostnames provides the hostnames for the default external image\nregistry. The external hostname should be set only when the image registry\nis exposed externally. The first value is used in 'publicDockerImageRepository'\nfield in ImageStreams. The value must be in \"hostname[:port]\" format.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "registrySources": {
                  "description": "registrySources contains configuration that determines how the container runtime\nshould treat individual registries when accessing images for builds+pods. (e.g.\nwhether or not to allow insecure access).  It does not contain configuration for the\ninternal cluster registry.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "allowedRegistries": {
                      "description": "allowedRegistries are the only registries permitted for image pull and push actions. All other registries are denied.\n\n\nOnly one of BlockedRegistries or AllowedRegistries may be set.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "blockedRegistries": {
                      "description": "blockedRegistries cannot be used for image pull and push actions. All other registries are permitted.\n\n\nOnly one of BlockedRegistries or AllowedRegistries may be set.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "containerRuntimeSearchRegistries": {
                      "description": "containerRuntimeSearchRegistries are registries that will be searched when pulling images that do not have fully qualified\ndomains in their pull specs. Registries will be searched in the order provided in the list.\nNote: this search list only works with the container runtime, i.e CRI-O. Will NOT work with builds or imagestream imports.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "format": "hostname",
                      "minItems": 1,
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "insecureRegistries": {
                      "description": "insecureRegistries are registries which do not have a valid TLS certificates or only support HTTP connections.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "ingress": {
              "description": "Ingress holds cluster-wide information about ingress, including the default ingress domain\nused for routes.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "appsDomain": {
                  "description": "appsDomain is an optional domain to use instead of the one specified\nin the domain field when a Route is created without specifying an explicit\nhost. If appsDomain is nonempty, this value is used to generate default\nhost values for Route. Unlike domain, appsDomain may be modified after\ninstallation.\nThis assumes a new ingresscontroller has been setup with a wildcard\ncertificate.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "componentRoutes": {
                  "description": "componentRoutes is an optional list of routes that are managed by OpenShift components\nthat a cluster-admin is able to configure the hostname and serving certificate for.\nThe namespace and name of each route in this list should match an existing entry in the\nstatus.componentRoutes list.\n\n\nTo determine the set of configurable Routes, look at namespace and name of entries in the\n.status.componentRoutes list, where participating operators write the status of\nconfigurable routes.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "ComponentRouteSpec allows for configuration of a route's hostname and serving certificate.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "hostname",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "hostname": {
                        "description": "hostname is the hostname that should be used by the route.",
                        "type": "string",
                        "pattern": "^([a-zA-Z0-9\\p{S}\\p{L}]((-?[a-zA-Z0-9\\p{S}\\p{L}]{0,62})?)|([a-zA-Z0-9\\p{S}\\p{L}](([a-zA-Z0-9-\\p{S}\\p{L}]{0,61}[a-zA-Z0-9\\p{S}\\p{L}])?)(\\.)){1,}([a-zA-Z\\p{L}]){2,63})$|^(([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})[\\.]){0,}([a-z0-9][-a-z0-9]{0,61}[a-z0-9]|[a-z0-9]{1,63})$"
                      },
                      "name": {
                        "description": "name is the logical name of the route to customize.\n\n\nThe namespace and name of this componentRoute must match a corresponding\nentry in the list of status.componentRoutes if the route is to be customized.",
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 1
                      },
                      "namespace": {
                        "description": "namespace is the namespace of the route to customize.\n\n\nThe namespace and name of this componentRoute must match a corresponding\nentry in the list of status.componentRoutes if the route is to be customized.",
                        "type": "string",
                        "maxLength": 63,
                        "minLength": 1,
                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                      },
                      "servingCertKeyPairSecret": {
                        "description": "servingCertKeyPairSecret is a reference to a secret of type `kubernetes.io/tls` in the openshift-config namespace.\nThe serving cert/key pair must match and will be used by the operator to fulfill the intent of serving with this name.\nIf the custom hostname uses the default routing suffix of the cluster,\nthe Secret specification for a serving certificate will not be needed.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "name is the metadata.name of the referenced secret",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-map-keys": [
                    "namespace",
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "domain": {
                  "description": "domain is used to generate a default host name for a route when the\nroute's host name is empty. The generated host name will follow this\npattern: \"<route-name>.<route-namespace>.<domain>\".\n\n\nIt is also used as the default wildcard domain suffix for ingress. The\ndefault ingresscontroller domain will follow this pattern: \"*.<domain>\".\n\n\nOnce set, changing domain is not currently supported.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "loadBalancer": {
                  "description": "loadBalancer contains the load balancer details in general which are not only specific to the underlying infrastructure\nprovider of the current cluster and are required for Ingress Controller to work on OpenShift.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "platform": {
                      "description": "platform holds configuration specific to the underlying\ninfrastructure provider for the ingress load balancers.\nWhen omitted, this means the user has no opinion and the platform is left\nto choose reasonable defaults. These defaults are subject to change over time.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "aws": {
                          "description": "aws contains settings specific to the Amazon Web Services infrastructure provider.",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "description": "type allows user to set a load balancer type.\nWhen this field is set the default ingresscontroller will get created using the specified LBType.\nIf this field is not set then the default ingress controller of LBType Classic will be created.\nValid values are:\n\n\n* \"Classic\": A Classic Load Balancer that makes routing decisions at either\n  the transport layer (TCP/SSL) or the application layer (HTTP/HTTPS). See\n  the following for additional details:\n\n\n    https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#clb\n\n\n* \"NLB\": A Network Load Balancer that makes routing decisions at the\n  transport layer (TCP/SSL). See the following for additional details:\n\n\n    https://docs.aws.amazon.com/AmazonECS/latest/developerguide/load-balancer-types.html#nlb",
                              "type": "string",
                              "enum": [
                                "NLB",
                                "Classic"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "type is the underlying infrastructure provider for the cluster.\nAllowed values are \"AWS\", \"Azure\", \"BareMetal\", \"GCP\", \"Libvirt\",\n\"OpenStack\", \"VSphere\", \"oVirt\", \"KubeVirt\", \"EquinixMetal\", \"PowerVS\",\n\"AlibabaCloud\", \"Nutanix\" and \"None\". Individual components may not support all platforms,\nand must handle unrecognized platforms as None if they do not support that platform.",
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "",
                            "AWS",
                            "Azure",
                            "BareMetal",
                            "GCP",
                            "Libvirt",
                            "OpenStack",
                            "None",
                            "VSphere",
                            "oVirt",
                            "IBMCloud",
                            "KubeVirt",
                            "EquinixMetal",
                            "PowerVS",
                            "AlibabaCloud",
                            "Nutanix",
                            "External"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "requiredHSTSPolicies": {
                  "description": "requiredHSTSPolicies specifies HSTS policies that are required to be set on newly created  or updated routes\nmatching the domainPattern/s and namespaceSelector/s that are specified in the policy.\nEach requiredHSTSPolicy must have at least a domainPattern and a maxAge to validate a route HSTS Policy route\nannotation, and affect route admission.\n\n\nA candidate route is checked for HSTS Policies if it has the HSTS Policy route annotation:\n\"haproxy.router.openshift.io/hsts_header\"\nE.g. haproxy.router.openshift.io/hsts_header: max-age=31536000;preload;includeSubDomains\n\n\n- For each candidate route, if it matches a requiredHSTSPolicy domainPattern and optional namespaceSelector,\nthen the maxAge, preloadPolicy, and includeSubdomainsPolicy must be valid to be admitted.  Otherwise, the route\nis rejected.\n- The first match, by domainPattern and optional namespaceSelector, in the ordering of the RequiredHSTSPolicies\ndetermines the route's admission status.\n- If the candidate route doesn't match any requiredHSTSPolicy domainPattern and optional namespaceSelector,\nthen it may use any HSTS Policy annotation.\n\n\nThe HSTS policy configuration may be changed after routes have already been created. An update to a previously\nadmitted route may then fail if the updated route does not conform to the updated HSTS policy configuration.\nHowever, changing the HSTS policy configuration will not cause a route that is already admitted to stop working.\n\n\nNote that if there are no RequiredHSTSPolicies, any HSTS Policy annotation on the route is valid.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "domainPatterns"
                    ],
                    "properties": {
                      "domainPatterns": {
                        "description": "domainPatterns is a list of domains for which the desired HSTS annotations are required.\nIf domainPatterns is specified and a route is created with a spec.host matching one of the domains,\nthe route must specify the HSTS Policy components described in the matching RequiredHSTSPolicy.\n\n\nThe use of wildcards is allowed like this: *.foo.com matches everything under foo.com.\nfoo.com only matches foo.com, so to cover foo.com and everything under it, you must specify *both*.",
                        "type": "array",
                        "minItems": 1,
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "includeSubDomainsPolicy": {
                        "description": "includeSubDomainsPolicy means the HSTS Policy should apply to any subdomains of the host's\ndomain name.  Thus, for the host bar.foo.com, if includeSubDomainsPolicy was set to RequireIncludeSubDomains:\n- the host app.bar.foo.com would inherit the HSTS Policy of bar.foo.com\n- the host bar.foo.com would inherit the HSTS Policy of bar.foo.com\n- the host foo.com would NOT inherit the HSTS Policy of bar.foo.com\n- the host def.foo.com would NOT inherit the HSTS Policy of bar.foo.com",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "RequireIncludeSubDomains",
                          "RequireNoIncludeSubDomains",
                          "NoOpinion"
                        ]
                      },
                      "maxAge": {
                        "description": "maxAge is the delta time range in seconds during which hosts are regarded as HSTS hosts.\nIf set to 0, it negates the effect, and hosts are removed as HSTS hosts.\nIf set to 0 and includeSubdomains is specified, all subdomains of the host are also removed as HSTS hosts.\nmaxAge is a time-to-live value, and if this policy is not refreshed on a client, the HSTS\npolicy will eventually expire on that client.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "largestMaxAge": {
                            "description": "The largest allowed value (in seconds) of the RequiredHSTSPolicy max-age\nThis value can be left unspecified, in which case no upper limit is enforced.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0
                          },
                          "smallestMaxAge": {
                            "description": "The smallest allowed value (in seconds) of the RequiredHSTSPolicy max-age\nSetting max-age=0 allows the deletion of an existing HSTS header from a host.  This is a necessary\ntool for administrators to quickly correct mistakes.\nThis value can be left unspecified, in which case no lower limit is enforced.",
                            "type": [
                              "integer",
                              "null"
                            ],
                            "format": "int32",
                            "maximum": 2147483647,
                            "minimum": 0
                          }
                        },
                        "additionalProperties": false
                      },
                      "namespaceSelector": {
                        "description": "namespaceSelector specifies a label selector such that the policy applies only to those routes that\nare in namespaces with labels that match the selector, and are in one of the DomainPatterns.\nDefaults to the empty LabelSelector, which matches everything.",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": [
                                "object",
                                "null"
                              ],
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "x-kubernetes-map-type": "atomic",
                        "additionalProperties": false
                      },
                      "preloadPolicy": {
                        "description": "preloadPolicy directs the client to include hosts in its host preload list so that\nit never needs to do an initial load to get the HSTS header (note that this is not defined\nin RFC 6797 and is therefore client implementation-dependent).",
                        "type": [
                          "string",
                          "null"
                        ],
                        "enum": [
                          "RequirePreload",
                          "RequireNoPreload",
                          "NoOpinion"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "items": {
              "description": "Items embeds the serialized configuration resources.\n\n\nDeprecated\nThis field is deprecated and will be removed in a future release",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "network": {
              "description": "Network holds cluster-wide information about the network. It is used to configure the desired network configuration, such as: IP address pools for services/pod IPs, network plugin, etc.\nPlease view network.spec for an explanation on what applies when configuring this resource.\nTODO (csrwng): Add validation here to exclude changes that conflict with networking settings in the HostedCluster.Spec.Networking field.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "clusterNetwork": {
                  "description": "IP address pool to use for pod IPs.\nThis field is immutable after installation.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "ClusterNetworkEntry is a contiguous block of IP addresses from which pod IPs\nare allocated.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "cidr": {
                        "description": "The complete block for pod IPs.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "hostPrefix": {
                        "description": "The size (prefix) of block to allocate to each node. If this\nfield is not used by the plugin, it can be left unset.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32",
                        "minimum": 0
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "externalIP": {
                  "description": "externalIP defines configuration for controllers that\naffect Service.ExternalIP. If nil, then ExternalIP is\nnot allowed to be set.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "autoAssignCIDRs": {
                      "description": "autoAssignCIDRs is a list of CIDRs from which to automatically assign\nService.ExternalIP. These are assigned when the service is of type\nLoadBalancer. In general, this is only useful for bare-metal clusters.\nIn Openshift 3.x, this was misleadingly called \"IngressIPs\".\nAutomatically assigned External IPs are not affected by any\nExternalIPPolicy rules.\nCurrently, only one entry may be provided.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "policy": {
                      "description": "policy is a set of restrictions applied to the ExternalIP field.\nIf nil or empty, then ExternalIP is not allowed to be set.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "allowedCIDRs": {
                          "description": "allowedCIDRs is the list of allowed CIDRs.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "rejectedCIDRs": {
                          "description": "rejectedCIDRs is the list of disallowed CIDRs. These take precedence\nover allowedCIDRs.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "networkType": {
                  "description": "NetworkType is the plugin that is to be deployed (e.g. OpenShiftSDN).\nThis should match a value that the cluster-network-operator understands,\nor else no networking will be installed.\nCurrently supported values are:\n- OpenShiftSDN\nThis field is immutable after installation.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "serviceNetwork": {
                  "description": "IP address pool for services.\nCurrently, we only support a single entry here.\nThis field is immutable after installation.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "serviceNodePortRange": {
                  "description": "The port range allowed for Services of type NodePort.\nIf not specified, the default of 30000-32767 will be used.\nSuch Services without a NodePort specified will have one\nautomatically allocated from this range.\nThis parameter can be updated after the cluster is\ninstalled.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "pattern": "^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])-([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$"
                }
              },
              "additionalProperties": false
            },
            "oauth": {
              "description": "OAuth holds cluster-wide information about OAuth.\nIt is used to configure the integrated OAuth server.\nThis configuration is only honored when the top level Authentication config has type set to IntegratedOAuth.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "identityProviders": {
                  "description": "identityProviders is an ordered list of ways for a user to identify themselves.\nWhen this list is empty, no identities are provisioned for users.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "IdentityProvider provides identities for users authenticating using credentials",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "basicAuth": {
                        "description": "basicAuth contains configuration options for the BasicAuth IdP",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "ca": {
                            "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.\nIt is used as a trust anchor to validate the TLS certificate presented by the remote server.\nThe key \"ca.crt\" is used to locate the data.\nIf specified and the config map or expected key is not found, the identity provider is not honored.\nIf the specified ca data is not valid, the identity provider is not honored.\nIf empty, the default system roots are used.\nThe namespace for this config map is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced config map",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "tlsClientCert": {
                            "description": "tlsClientCert is an optional reference to a secret by name that contains the\nPEM-encoded TLS client certificate to present when connecting to the server.\nThe key \"tls.crt\" is used to locate the data.\nIf specified and the secret or expected key is not found, the identity provider is not honored.\nIf the specified certificate data is not valid, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "tlsClientKey": {
                            "description": "tlsClientKey is an optional reference to a secret by name that contains the\nPEM-encoded TLS private key for the client certificate referenced in tlsClientCert.\nThe key \"tls.key\" is used to locate the data.\nIf specified and the secret or expected key is not found, the identity provider is not honored.\nIf the specified certificate data is not valid, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "url": {
                            "description": "url is the remote URL to connect to",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "github": {
                        "description": "github enables user authentication using GitHub credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "ca": {
                            "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.\nIt is used as a trust anchor to validate the TLS certificate presented by the remote server.\nThe key \"ca.crt\" is used to locate the data.\nIf specified and the config map or expected key is not found, the identity provider is not honored.\nIf the specified ca data is not valid, the identity provider is not honored.\nIf empty, the default system roots are used.\nThis can only be configured when hostname is set to a non-empty value.\nThe namespace for this config map is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced config map",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "clientID": {
                            "description": "clientID is the oauth client ID",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "clientSecret": {
                            "description": "clientSecret is a required reference to the secret by name containing the oauth client secret.\nThe key \"clientSecret\" is used to locate the data.\nIf the secret or expected key is not found, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "hostname": {
                            "description": "hostname is the optional domain (e.g. \"mycompany.com\") for use with a hosted instance of\nGitHub Enterprise.\nIt must match the GitHub Enterprise settings value configured at /setup/settings#hostname.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "organizations": {
                            "description": "organizations optionally restricts which organizations are allowed to log in",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "teams": {
                            "description": "teams optionally restricts which teams are allowed to log in. Format is <org>/<team>.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "gitlab": {
                        "description": "gitlab enables user authentication using GitLab credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "ca": {
                            "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.\nIt is used as a trust anchor to validate the TLS certificate presented by the remote server.\nThe key \"ca.crt\" is used to locate the data.\nIf specified and the config map or expected key is not found, the identity provider is not honored.\nIf the specified ca data is not valid, the identity provider is not honored.\nIf empty, the default system roots are used.\nThe namespace for this config map is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced config map",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "clientID": {
                            "description": "clientID is the oauth client ID",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "clientSecret": {
                            "description": "clientSecret is a required reference to the secret by name containing the oauth client secret.\nThe key \"clientSecret\" is used to locate the data.\nIf the secret or expected key is not found, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "url": {
                            "description": "url is the oauth server base URL",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "google": {
                        "description": "google enables user authentication using Google credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "clientID": {
                            "description": "clientID is the oauth client ID",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "clientSecret": {
                            "description": "clientSecret is a required reference to the secret by name containing the oauth client secret.\nThe key \"clientSecret\" is used to locate the data.\nIf the secret or expected key is not found, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "hostedDomain": {
                            "description": "hostedDomain is the optional Google App domain (e.g. \"mycompany.com\") to restrict logins to",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "htpasswd": {
                        "description": "htpasswd enables user authentication using an HTPasswd file to validate credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "fileData": {
                            "description": "fileData is a required reference to a secret by name containing the data to use as the htpasswd file.\nThe key \"htpasswd\" is used to locate the data.\nIf the secret or expected key is not found, the identity provider is not honored.\nIf the specified htpasswd data is not valid, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "keystone": {
                        "description": "keystone enables user authentication using keystone password credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "ca": {
                            "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.\nIt is used as a trust anchor to validate the TLS certificate presented by the remote server.\nThe key \"ca.crt\" is used to locate the data.\nIf specified and the config map or expected key is not found, the identity provider is not honored.\nIf the specified ca data is not valid, the identity provider is not honored.\nIf empty, the default system roots are used.\nThe namespace for this config map is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced config map",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "domainName": {
                            "description": "domainName is required for keystone v3",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "tlsClientCert": {
                            "description": "tlsClientCert is an optional reference to a secret by name that contains the\nPEM-encoded TLS client certificate to present when connecting to the server.\nThe key \"tls.crt\" is used to locate the data.\nIf specified and the secret or expected key is not found, the identity provider is not honored.\nIf the specified certificate data is not valid, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "tlsClientKey": {
                            "description": "tlsClientKey is an optional reference to a secret by name that contains the\nPEM-encoded TLS private key for the client certificate referenced in tlsClientCert.\nThe key \"tls.key\" is used to locate the data.\nIf specified and the secret or expected key is not found, the identity provider is not honored.\nIf the specified certificate data is not valid, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "url": {
                            "description": "url is the remote URL to connect to",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "ldap": {
                        "description": "ldap enables user authentication using LDAP credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "attributes": {
                            "description": "attributes maps LDAP attributes to identities",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "email": {
                                "description": "email is the list of attributes whose values should be used as the email address. Optional.\nIf unspecified, no email is set for the identity",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "id": {
                                "description": "id is the list of attributes whose values should be used as the user ID. Required.\nFirst non-empty attribute is used. At least one attribute is required. If none of the listed\nattribute have a value, authentication fails.\nLDAP standard identity attribute is \"dn\"",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "name": {
                                "description": "name is the list of attributes whose values should be used as the display name. Optional.\nIf unspecified, no display name is set for the identity\nLDAP standard display name attribute is \"cn\"",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "preferredUsername": {
                                "description": "preferredUsername is the list of attributes whose values should be used as the preferred username.\nLDAP standard login attribute is \"uid\"",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "bindDN": {
                            "description": "bindDN is an optional DN to bind with during the search phase.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "bindPassword": {
                            "description": "bindPassword is an optional reference to a secret by name\ncontaining a password to bind with during the search phase.\nThe key \"bindPassword\" is used to locate the data.\nIf specified and the secret or expected key is not found, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ca": {
                            "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.\nIt is used as a trust anchor to validate the TLS certificate presented by the remote server.\nThe key \"ca.crt\" is used to locate the data.\nIf specified and the config map or expected key is not found, the identity provider is not honored.\nIf the specified ca data is not valid, the identity provider is not honored.\nIf empty, the default system roots are used.\nThe namespace for this config map is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced config map",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "insecure": {
                            "description": "insecure, if true, indicates the connection should not use TLS\nWARNING: Should not be set to `true` with the URL scheme \"ldaps://\" as \"ldaps://\" URLs always\n         attempt to connect using TLS, even when `insecure` is set to `true`\nWhen `true`, \"ldap://\" URLS connect insecurely. When `false`, \"ldap://\" URLs are upgraded to\na TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830.",
                            "type": [
                              "boolean",
                              "null"
                            ]
                          },
                          "url": {
                            "description": "url is an RFC 2255 URL which specifies the LDAP search parameters to use.\nThe syntax of the URL is:\nldap://host:port/basedn?attribute?scope?filter",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "mappingMethod": {
                        "description": "mappingMethod determines how identities from this provider are mapped to users\nDefaults to \"claim\"",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "name is used to qualify the identities returned by this provider.\n- It MUST be unique and not shared by any other identity provider used\n- It MUST be a valid path segment: name cannot equal \".\" or \"..\" or contain \"/\" or \"%\" or \":\"\n  Ref: https://godoc.org/github.com/openshift/origin/pkg/user/apis/user/validation#ValidateIdentityProviderName",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "openID": {
                        "description": "openID enables user authentication using OpenID credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "ca": {
                            "description": "ca is an optional reference to a config map by name containing the PEM-encoded CA bundle.\nIt is used as a trust anchor to validate the TLS certificate presented by the remote server.\nThe key \"ca.crt\" is used to locate the data.\nIf specified and the config map or expected key is not found, the identity provider is not honored.\nIf the specified ca data is not valid, the identity provider is not honored.\nIf empty, the default system roots are used.\nThe namespace for this config map is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced config map",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "claims": {
                            "description": "claims mappings",
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "email": {
                                "description": "email is the list of claims whose values should be used as the email address. Optional.\nIf unspecified, no email is set for the identity",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "groups": {
                                "description": "groups is the list of claims value of which should be used to synchronize groups\nfrom the OIDC provider to OpenShift for the user.\nIf multiple claims are specified, the first one with a non-empty value is used.",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "description": "OpenIDClaim represents a claim retrieved from an OpenID provider's tokens or userInfo\nresponses",
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "minLength": 1
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "name": {
                                "description": "name is the list of claims whose values should be used as the display name. Optional.\nIf unspecified, no display name is set for the identity",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "preferredUsername": {
                                "description": "preferredUsername is the list of claims whose values should be used as the preferred username.\nIf unspecified, the preferred username is determined from the value of the sub claim",
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "additionalProperties": false
                          },
                          "clientID": {
                            "description": "clientID is the oauth client ID",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "clientSecret": {
                            "description": "clientSecret is a required reference to the secret by name containing the oauth client secret.\nThe key \"clientSecret\" is used to locate the data.\nIf the secret or expected key is not found, the identity provider is not honored.\nThe namespace for this secret is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced secret",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "extraAuthorizeParameters": {
                            "description": "extraAuthorizeParameters are any custom parameters to add to the authorize request.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "extraScopes": {
                            "description": "extraScopes are any scopes to request in addition to the standard \"openid\" scope.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "issuer": {
                            "description": "issuer is the URL that the OpenID Provider asserts as its Issuer Identifier.\nIt must use the https scheme with no query or fragment component.",
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "requestHeader": {
                        "description": "requestHeader enables user authentication using request header credentials",
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "ca": {
                            "description": "ca is a required reference to a config map by name containing the PEM-encoded CA bundle.\nIt is used as a trust anchor to validate the TLS certificate presented by the remote server.\nSpecifically, it allows verification of incoming requests to prevent header spoofing.\nThe key \"ca.crt\" is used to locate the data.\nIf the config map or expected key is not found, the identity provider is not honored.\nIf the specified ca data is not valid, the identity provider is not honored.\nThe namespace for this config map is openshift-config.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "name is the metadata.name of the referenced config map",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "challengeURL": {
                            "description": "challengeURL is a URL to redirect unauthenticated /authorize requests to\nUnauthenticated requests from OAuth clients which expect WWW-Authenticate challenges will be\nredirected here.\n${url} is replaced with the current URL, escaped to be safe in a query parameter\n  https://www.example.com/sso-login?then=${url}\n${query} is replaced with the current query string\n  https://www.example.com/auth-proxy/oauth/authorize?${query}\nRequired when challenge is set to true.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "clientCommonNames": {
                            "description": "clientCommonNames is an optional list of common names to require a match from. If empty, any\nclient certificate validated against the clientCA bundle is considered authoritative.",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "emailHeaders": {
                            "description": "emailHeaders is the set of headers to check for the email address",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "headers": {
                            "description": "headers is the set of headers to check for identity information",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "loginURL": {
                            "description": "loginURL is a URL to redirect unauthenticated /authorize requests to\nUnauthenticated requests from OAuth clients which expect interactive logins will be redirected here\n${url} is replaced with the current URL, escaped to be safe in a query parameter\n  https://www.example.com/sso-login?then=${url}\n${query} is replaced with the current query string\n  https://www.example.com/auth-proxy/oauth/authorize?${query}\nRequired when login is set to true.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "nameHeaders": {
                            "description": "nameHeaders is the set of headers to check for the display name",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "preferredUsernameHeaders": {
                            "description": "preferredUsernameHeaders is the set of headers to check for the preferred username",
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": {
                        "description": "type identifies the identity provider type for this entry.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "templates": {
                  "description": "templates allow you to customize pages like the login page.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "error": {
                      "description": "error is the name of a secret that specifies a go template to use to render error pages\nduring the authentication or grant flow.\nThe key \"errors.html\" is used to locate the template data.\nIf specified and the secret or expected key is not found, the default error page is used.\nIf the specified template is not valid, the default error page is used.\nIf unspecified, the default error page is used.\nThe namespace for this secret is openshift-config.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced secret",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "login": {
                      "description": "login is the name of a secret that specifies a go template to use to render the login page.\nThe key \"login.html\" is used to locate the template data.\nIf specified and the secret or expected key is not found, the default login page is used.\nIf the specified template is not valid, the default login page is used.\nIf unspecified, the default login page is used.\nThe namespace for this secret is openshift-config.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced secret",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "providerSelection": {
                      "description": "providerSelection is the name of a secret that specifies a go template to use to render\nthe provider selection page.\nThe key \"providers.html\" is used to locate the template data.\nIf specified and the secret or expected key is not found, the default provider selection page is used.\nIf the specified template is not valid, the default provider selection page is used.\nIf unspecified, the default provider selection page is used.\nThe namespace for this secret is openshift-config.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name is the metadata.name of the referenced secret",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "tokenConfig": {
                  "description": "tokenConfig contains options for authorization and access tokens",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "accessTokenInactivityTimeout": {
                      "description": "accessTokenInactivityTimeout defines the token inactivity timeout\nfor tokens granted by any client.\nThe value represents the maximum amount of time that can occur between\nconsecutive uses of the token. Tokens become invalid if they are not\nused within this temporal window. The user will need to acquire a new\ntoken to regain access once a token times out. Takes valid time\nduration string such as \"5m\", \"1.5h\" or \"2h45m\". The minimum allowed\nvalue for duration is 300s (5 minutes). If the timeout is configured\nper client, then that value takes precedence. If the timeout value is\nnot specified and the client does not override the value, then tokens\nare valid until their lifetime.\n\n\nWARNING: existing tokens' timeout will not be affected (lowered) by changing this value",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "accessTokenInactivityTimeoutSeconds": {
                      "description": "accessTokenInactivityTimeoutSeconds - DEPRECATED: setting this field has no effect.",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    },
                    "accessTokenMaxAgeSeconds": {
                      "description": "accessTokenMaxAgeSeconds defines the maximum age of access tokens",
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "operatorhub": {
              "description": "OperatorHub specifies the configuration for the Operator Lifecycle Manager in the HostedCluster. This is only configured at deployment time but the controller are not reconcilling over it.\nThe OperatorHub configuration will be constantly reconciled if catalog placement is management, but only on cluster creation otherwise.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "disableAllDefaultSources": {
                  "description": "disableAllDefaultSources allows you to disable all the default hub\nsources. If this is true, a specific entry in sources can be used to\nenable a default source. If this is false, a specific entry in\nsources can be used to disable or enable a default source.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "sources": {
                  "description": "sources is the list of default hub sources and their configuration.\nIf the list is empty, it implies that the default hub sources are\nenabled on the cluster unless disableAllDefaultSources is true.\nIf disableAllDefaultSources is true and sources is not empty,\nthe configuration present in sources will take precedence. The list of\ndefault hub sources and their current state will always be reflected in\nthe status block.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "HubSource is used to specify the hub source and its configuration",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "disabled": {
                        "description": "disabled is used to disable a default hub source on cluster",
                        "type": [
                          "boolean",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "name is the name of one of the default hub sources",
                        "type": [
                          "string",
                          "null"
                        ],
                        "maxLength": 253,
                        "minLength": 1
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "proxy": {
              "description": "Proxy holds cluster-wide information on how to configure default proxies for the cluster.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "httpProxy": {
                  "description": "httpProxy is the URL of the proxy for HTTP requests.  Empty means unset and will not result in an env var.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "httpsProxy": {
                  "description": "httpsProxy is the URL of the proxy for HTTPS requests.  Empty means unset and will not result in an env var.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "noProxy": {
                  "description": "noProxy is a comma-separated list of hostnames and/or CIDRs and/or IPs for which the proxy should not be used.\nEmpty means unset and will not result in an env var.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "readinessEndpoints": {
                  "description": "readinessEndpoints is a list of endpoints used to verify readiness of the proxy.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "trustedCA": {
                  "description": "trustedCA is a reference to a ConfigMap containing a CA certificate bundle.\nThe trustedCA field should only be consumed by a proxy validator. The\nvalidator is responsible for reading the certificate bundle from the required\nkey \"ca-bundle.crt\", merging it with the system default trust bundle,\nand writing the merged trust bundle to a ConfigMap named \"trusted-ca-bundle\"\nin the \"openshift-config-managed\" namespace. Clients that expect to make\nproxy connections must use the trusted-ca-bundle for all HTTPS requests to\nthe proxy, and may use the trusted-ca-bundle for non-proxy HTTPS requests as\nwell.\n\n\nThe namespace for the ConfigMap referenced by trustedCA is\n\"openshift-config\". Here is an example ConfigMap (in yaml):\n\n\napiVersion: v1\nkind: ConfigMap\nmetadata:\n name: user-ca-bundle\n namespace: openshift-config\n data:\n   ca-bundle.crt: |\n     -----BEGIN CERTIFICATE-----\n     Custom CA certificate bundle.\n     -----END CERTIFICATE-----",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the metadata.name of the referenced config map",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "scheduler": {
              "description": "Scheduler holds cluster-wide config information to run the Kubernetes Scheduler\nand influence its placement decisions. The canonical name for this config is `cluster`.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "defaultNodeSelector": {
                  "description": "defaultNodeSelector helps set the cluster-wide default node selector to\nrestrict pod placement to specific nodes. This is applied to the pods\ncreated in all namespaces and creates an intersection with any existing\nnodeSelectors already set on a pod, additionally constraining that pod's selector.\nFor example,\ndefaultNodeSelector: \"type=user-node,region=east\" would set nodeSelector\nfield in pod spec to \"type=user-node,region=east\" to all pods created\nin all namespaces. Namespaces having project-wide node selectors won't be\nimpacted even if this field is set. This adds an annotation section to\nthe namespace.\nFor example, if a new namespace is created with\nnode-selector='type=user-node,region=east',\nthe annotation openshift.io/node-selector: type=user-node,region=east\ngets added to the project. When the openshift.io/node-selector annotation\nis set on the project the value is used in preference to the value we are setting\nfor defaultNodeSelector field.\nFor instance,\nopenshift.io/node-selector: \"type=user-node,region=west\" means\nthat the default of \"type=user-node,region=east\" set in defaultNodeSelector\nwould not be applied.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "mastersSchedulable": {
                  "description": "MastersSchedulable allows masters nodes to be schedulable. When this flag is\nturned on, all the master nodes in the cluster will be made schedulable,\nso that workload pods can run on them. The default value for this field is false,\nmeaning none of the master nodes are schedulable.\nImportant Note: Once the workload pods start running on the master nodes,\nextreme care must be taken to ensure that cluster-critical control plane components\nare not impacted.\nPlease turn on this field after doing due diligence.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "policy": {
                  "description": "DEPRECATED: the scheduler Policy API has been deprecated and will be removed in a future release.\npolicy is a reference to a ConfigMap containing scheduler policy which has\nuser specified predicates and priorities. If this ConfigMap is not available\nscheduler will default to use DefaultAlgorithmProvider.\nThe namespace for this configmap is openshift-config.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "name is the metadata.name of the referenced config map",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "profile": {
                  "description": "profile sets which scheduling profile should be set in order to configure scheduling\ndecisions for new pods.\n\n\nValid values are \"LowNodeUtilization\", \"HighNodeUtilization\", \"NoScoring\"\nDefaults to \"LowNodeUtilization\"",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "",
                    "LowNodeUtilization",
                    "HighNodeUtilization",
                    "NoScoring"
                  ]
                },
                "profileCustomizations": {
                  "description": "profileCustomizations contains configuration for modifying the default behavior of existing scheduler profiles.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "dynamicResourceAllocation": {
                      "description": "dynamicResourceAllocation allows to enable or disable dynamic resource allocation within the scheduler.\nDynamic resource allocation is an API for requesting and sharing resources between pods and containers inside a pod.\nThird-party resource drivers are responsible for tracking and allocating resources.\nDifferent kinds of resources support arbitrary parameters for defining requirements and initialization.\nValid values are Enabled, Disabled and omitted.\nWhen omitted, this means no opinion and the platform is left to choose a reasonable default,\nwhich is subject to change over time.\nThe current default is Disabled.",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "",
                        "Enabled",
                        "Disabled"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "secretRefs": {
              "description": "SecretRefs holds references to any secrets referenced by configuration\nentries. Entries can reference the secrets using local object references.\n\n\nDeprecated\nThis field is deprecated and will be removed in a future release",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "controlPlaneReleaseImage": {
          "description": "ControlPlaneReleaseImage specifies the desired OCP release payload for\ncontrol plane components running on the management cluster.\nIf not defined, ReleaseImage is used",
          "type": [
            "string",
            "null"
          ]
        },
        "controllerAvailabilityPolicy": {
          "description": "ControllerAvailabilityPolicy specifies the availability policy applied to\ncritical control plane components. The default value is SingleReplica.",
          "type": [
            "string",
            "null"
          ],
          "x-kubernetes-validations": [
            {
              "message": "ControllerAvailabilityPolicy is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "dns": {
          "description": "DNSSpec specifies the DNS configuration in the cluster.",
          "type": "object",
          "required": [
            "baseDomain"
          ],
          "properties": {
            "baseDomain": {
              "description": "BaseDomain is the base domain of the cluster.",
              "type": "string"
            },
            "baseDomainPrefix": {
              "description": "BaseDomainPrefix is the base domain prefix of the cluster.\ndefaults to clusterName if not set",
              "type": [
                "string",
                "null"
              ]
            },
            "privateZoneID": {
              "description": "PrivateZoneID is the Hosted Zone ID where all the DNS records that are only\navailable internally to the cluster exist.",
              "type": [
                "string",
                "null"
              ]
            },
            "publicZoneID": {
              "description": "PublicZoneID is the Hosted Zone ID where all the DNS records that are\npublicly accessible to the internet exist.",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "etcd": {
          "description": "Etcd contains metadata about the etcd cluster the hypershift managed Openshift control plane components\nuse to store data.",
          "type": "object",
          "required": [
            "managementType"
          ],
          "properties": {
            "managed": {
              "description": "Managed specifies the behavior of an etcd cluster managed by HyperShift.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "storage"
              ],
              "properties": {
                "storage": {
                  "description": "Storage specifies how etcd data is persisted.",
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "persistentVolume": {
                      "description": "PersistentVolume is the configuration for PersistentVolume etcd storage.\nWith this implementation, a PersistentVolume will be allocated for every\netcd member (either 1 or 3 depending on the HostedCluster control plane\navailability configuration).",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "size": {
                          "description": "Size is the minimum size of the data volume for each etcd member.",
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "x-kubernetes-int-or-string": true,
                          "x-kubernetes-validations": [
                            {
                              "message": "Etcd PV storage size is immutable",
                              "rule": "self == oldSelf"
                            }
                          ]
                        },
                        "storageClassName": {
                          "description": "StorageClassName is the StorageClass of the data volume for each etcd member.\n\n\nSee https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1.",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "restoreSnapshotURL": {
                      "description": "RestoreSnapshotURL allows an optional URL to be provided where\nan etcd snapshot can be downloaded, for example a pre-signed URL\nreferencing a storage service.\nThis snapshot will be restored on initial startup, only when the etcd PV\nis empty.",
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "x-kubernetes-validations": [
                        {
                          "message": "RestoreSnapshotURL shouldn't contain more than 1 entry",
                          "rule": "self.size() <= 1"
                        }
                      ]
                    },
                    "type": {
                      "description": "Type is the kind of persistent storage implementation to use for etcd.",
                      "type": "string",
                      "enum": [
                        "PersistentVolume"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "managementType": {
              "description": "ManagementType defines how the etcd cluster is managed.",
              "type": "string",
              "enum": [
                "Managed",
                "Unmanaged"
              ]
            },
            "unmanaged": {
              "description": "Unmanaged specifies configuration which enables the control plane to\nintegrate with an eternally managed etcd cluster.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "endpoint",
                "tls"
              ],
              "properties": {
                "endpoint": {
                  "description": "Endpoint is the full etcd cluster client endpoint URL. For example:\n\n\n    https://etcd-client:2379\n\n\nIf the URL uses an HTTPS scheme, the TLS field is required.",
                  "type": "string",
                  "pattern": "^https://"
                },
                "tls": {
                  "description": "TLS specifies TLS configuration for HTTPS etcd client endpoints.",
                  "type": "object",
                  "required": [
                    "clientSecret"
                  ],
                  "properties": {
                    "clientSecret": {
                      "description": "ClientSecret refers to a secret for client mTLS authentication with the etcd cluster. It\nmay have the following key/value pairs:\n\n\n    etcd-client-ca.crt: Certificate Authority value\n    etcd-client.crt: Client certificate value\n    etcd-client.key: Client certificate key value",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "x-kubernetes-map-type": "atomic",
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "fips": {
          "description": "FIPS specifies if the nodes for the cluster will be running in FIPS mode",
          "type": [
            "boolean",
            "null"
          ]
        },
        "imageContentSources": {
          "description": "ImageContentSources lists sources/repositories for the release-image content.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "ImageContentSource specifies image mirrors that can be used by cluster nodes\nto pull content. For cluster workloads, if a container image registry host of\nthe pullspec matches Source then one of the Mirrors are substituted as hosts\nin the pullspec and tried in order to fetch the image.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "source"
            ],
            "properties": {
              "mirrors": {
                "description": "Mirrors are one or more repositories that may also contain the same images.",
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "source": {
                "description": "Source is the repository that users refer to, e.g. in image pull\nspecifications.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "infraID": {
          "type": "string"
        },
        "infrastructureAvailabilityPolicy": {
          "description": "InfrastructureAvailabilityPolicy specifies the availability policy applied\nto infrastructure services which run on cluster nodes. The default value is\nSingleReplica.",
          "type": [
            "string",
            "null"
          ]
        },
        "issuerURL": {
          "description": "IssuerURL is an OIDC issuer URL which is used as the issuer in all\nServiceAccount tokens generated by the control plane API server. The\ndefault value is kubernetes.default.svc, which only works for in-cluster\nvalidation.",
          "type": "string"
        },
        "kubeconfig": {
          "description": "KubeConfig specifies the name and key for the kubeconfig secret",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "machineCIDR": {
          "description": "deprecated\nuse networking.MachineNetwork",
          "type": [
            "string",
            "null"
          ]
        },
        "networkType": {
          "description": "deprecated\nuse networking.NetworkType\nNetworkType specifies the SDN provider used for cluster networking.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "OpenShiftSDN",
            "Calico",
            "OVNKubernetes",
            "Other"
          ]
        },
        "networking": {
          "description": "Networking specifies network configuration for the cluster.\nTemporarily optional for backward compatibility, required in future releases.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "networkType"
          ],
          "properties": {
            "apiServer": {
              "description": "APIServer contains advanced network settings for the API server that affect\nhow the APIServer is exposed inside a cluster node.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "advertiseAddress": {
                  "description": "AdvertiseAddress is the address that nodes will use to talk to the API\nserver. This is an address associated with the loopback adapter of each\nnode. If not specified, 172.20.0.1 is used.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "allowedCIDRBlocks": {
                  "description": "AllowedCIDRBlocks is an allow list of CIDR blocks that can access the APIServer\nIf not specified, traffic is allowed from all addresses.\nThis depends on underlying support by the cloud provider for Service LoadBalancerSourceRanges",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(3[0-2]|[1-2][0-9]|[0-9]))$"
                  }
                },
                "port": {
                  "description": "Port is the port at which the APIServer is exposed inside a node. Other\npods using host networking cannot listen on this port. If not specified,\n6443 is used.",
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "clusterNetwork": {
              "description": "ClusterNetwork is the list of IP address pools for pods.\nTODO: make this required in the next version of the API",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ClusterNetworkEntry is a single IP address block for pod IP blocks. IP blocks\nare allocated with size 2^HostSubnetLength.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "description": "CIDR is the IP block address pool.",
                    "type": "string"
                  },
                  "hostPrefix": {
                    "description": "HostPrefix is the prefix size to allocate to each node from the CIDR.\nFor example, 24 would allocate 2^8=256 adresses to each node. If this\nfield is not used by the plugin, it can be left unset.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              }
            },
            "machineCIDR": {
              "description": "Deprecated\nThis field will be removed in the next API release.\nUse MachineNetwork instead",
              "type": [
                "string",
                "null"
              ],
              "format": "cidr"
            },
            "machineNetwork": {
              "description": "MachineNetwork is the list of IP address pools for machines.\nTODO: make this required in the next version of the API",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "MachineNetworkEntry is a single IP address block for node IP blocks.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "description": "CIDR is the IP block address pool for machines within the cluster.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "networkType": {
              "description": "NetworkType specifies the SDN provider used for cluster networking.",
              "type": "string",
              "enum": [
                "OpenShiftSDN",
                "Calico",
                "OVNKubernetes",
                "Other"
              ]
            },
            "podCIDR": {
              "description": "Deprecated\nThis field will be removed in the next API release.\nUse ClusterNetwork instead",
              "type": [
                "string",
                "null"
              ],
              "format": "cidr"
            },
            "serviceCIDR": {
              "description": "Deprecated\nThis field will be removed in the next API release.\nUse ServiceNetwork instead",
              "type": [
                "string",
                "null"
              ],
              "format": "cidr"
            },
            "serviceNetwork": {
              "description": "ServiceNetwork is the list of IP address pools for services.\nNOTE: currently only one entry is supported.\nTODO: make this required in the next version of the API",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ServiceNetworkEntry is a single IP address block for the service network.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "cidr"
                ],
                "properties": {
                  "cidr": {
                    "description": "CIDR is the IP block address pool for services within the cluster.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "nodeSelector": {
          "description": "NodeSelector when specified, must be true for the pods managed by the HostedCluster to be scheduled.",
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "olmCatalogPlacement": {
          "description": "OLMCatalogPlacement specifies the placement of OLM catalog components. By default,\nthis is set to management and OLM catalog components are deployed onto the management\ncluster. If set to guest, the OLM catalog components will be deployed onto the guest\ncluster.",
          "type": [
            "string",
            "null"
          ],
          "enum": [
            "management",
            "guest"
          ]
        },
        "pausedUntil": {
          "description": "PausedUntil is a field that can be used to pause reconciliation on a resource.\nEither a date can be provided in RFC3339 format or a boolean. If a date is\nprovided: reconciliation is paused on the resource until that date. If the boolean true is\nprovided: reconciliation is paused on the resource until the field is removed.",
          "type": [
            "string",
            "null"
          ]
        },
        "platform": {
          "description": "PlatformSpec specifies the underlying infrastructure provider for the cluster\nand is used to configure platform specific behavior.",
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "agent": {
              "description": "Agent specifies configuration for agent-based installations.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "agentNamespace"
              ],
              "properties": {
                "agentNamespace": {
                  "description": "AgentNamespace is the namespace where to search for Agents for this cluster",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "aws": {
              "description": "AWS specifies configuration for clusters running on Amazon Web Services.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "controlPlaneOperatorCreds",
                "kubeCloudControllerCreds",
                "nodePoolManagementCreds",
                "region",
                "rolesRef"
              ],
              "properties": {
                "additionalAllowedPrincipals": {
                  "description": "AdditionalAllowedPrincipals specifies a list of additional allowed principal ARNs\nto be added to the hosted control plane's VPC Endpoint Service to enable additional\nVPC Endpoint connection requests to be automatically accepted.\nSee https://docs.aws.amazon.com/vpc/latest/privatelink/configure-endpoint-service.html\nfor more details around VPC Endpoint Service allowed principals.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "cloudProviderConfig": {
                  "description": "CloudProviderConfig specifies AWS networking configuration for the control\nplane.\nThis is mainly used for cloud provider controller config:\nhttps://github.com/kubernetes/kubernetes/blob/f5be5052e3d0808abb904aebd3218fe4a5c2dd82/staging/src/k8s.io/legacy-cloud-providers/aws/aws.go#L1347-L1364\nTODO(dan): should this be named AWSNetworkConfig?",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "vpc"
                  ],
                  "properties": {
                    "subnet": {
                      "description": "Subnet is the subnet to use for control plane cloud resources.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "filters": {
                          "description": "Filters is a set of key/value pairs used to identify a resource\nThey are applied according to the rules defined by the AWS API:\nhttps://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "description": "Filter is a filter used to identify an AWS resource",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "name",
                              "values"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the filter. Filter names are case-sensitive.",
                                "type": "string"
                              },
                              "values": {
                                "description": "Values includes one or more filter values. Filter values are case-sensitive.",
                                "type": "array",
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "id": {
                          "description": "ID of resource",
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "vpc": {
                      "description": "VPC is the VPC to use for control plane cloud resources.",
                      "type": "string"
                    },
                    "zone": {
                      "description": "Zone is the availability zone where control plane cloud resources are\ncreated.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "controlPlaneOperatorCreds": {
                  "description": "Deprecated\nThis field will be removed in the next API release.\nUse RolesRef instead.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "endpointAccess": {
                  "description": "EndpointAccess specifies the publishing scope of cluster endpoints. The\ndefault is Public.",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "Public",
                    "PublicAndPrivate",
                    "Private"
                  ]
                },
                "kubeCloudControllerCreds": {
                  "description": "Deprecated\nThis field will be removed in the next API release.\nUse RolesRef instead.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "multiArch": {
                  "description": "MultiArch specifies whether the Hosted Cluster will be expected to support NodePools with different\nCPU architectures, i.e., supporting arm64 NodePools and supporting amd64 NodePools on the same Hosted Cluster.",
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "nodePoolManagementCreds": {
                  "description": "Deprecated\nThis field will be removed in the next API release.\nUse RolesRef instead.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "region": {
                  "description": "Region is the AWS region in which the cluster resides. This configures the\nOCP control plane cloud integrations, and is used by NodePool to resolve\nthe correct boot AMI for a given release.",
                  "type": "string"
                },
                "resourceTags": {
                  "description": "ResourceTags is a list of additional tags to apply to AWS resources created\nfor the cluster. See\nhttps://docs.aws.amazon.com/general/latest/gr/aws_tagging.html for\ninformation on tagging AWS resources. AWS supports a maximum of 50 tags per\nresource. OpenShift reserves 25 tags for its use, leaving 25 tags available\nfor the user.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "maxItems": 25,
                  "items": {
                    "description": "AWSResourceTag is a tag to apply to AWS resources created for the cluster.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key is the key of the tag.",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "pattern": "^[0-9A-Za-z_.:/=+-@]+$"
                      },
                      "value": {
                        "description": "Value is the value of the tag.\n\n\nSome AWS service do not support empty values. Since tags are added to\nresources in many services, the length of the tag value must meet the\nrequirements of all services.",
                        "type": "string",
                        "maxLength": 256,
                        "minLength": 1,
                        "pattern": "^[0-9A-Za-z_.:/=+-@]+$"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-map-keys": [
                    "key"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "roles": {
                  "description": "Deprecated\nThis field will be removed in the next API release.\nUse RolesRef instead.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "arn",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "arn": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "rolesRef": {
                  "description": "RolesRef contains references to various AWS IAM roles required to enable\nintegrations such as OIDC.",
                  "type": "object",
                  "required": [
                    "controlPlaneOperatorARN",
                    "imageRegistryARN",
                    "ingressARN",
                    "kubeCloudControllerARN",
                    "networkARN",
                    "nodePoolManagementARN",
                    "storageARN"
                  ],
                  "properties": {
                    "controlPlaneOperatorARN": {
                      "description": "ControlPlaneOperatorARN  is an ARN value referencing a role appropriate for the Control Plane Operator.\n\n\nThe following is an example of a valid policy document:\n\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:CreateVpcEndpoint\",\n\t\t\t\t\"ec2:DescribeVpcEndpoints\",\n\t\t\t\t\"ec2:ModifyVpcEndpoint\",\n\t\t\t\t\"ec2:DeleteVpcEndpoints\",\n\t\t\t\t\"ec2:CreateTags\",\n\t\t\t\t\"route53:ListHostedZones\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"route53:ChangeResourceRecordSets\",\n\t\t\t\t\"route53:ListResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": \"arn:aws:route53:::%s\"\n\t\t}\n\t]\n}",
                      "type": "string"
                    },
                    "imageRegistryARN": {
                      "description": "ImageRegistryARN is an ARN value referencing a role appropriate for the Image Registry Operator.\n\n\nThe following is an example of a valid policy document:\n\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"s3:CreateBucket\",\n\t\t\t\t\"s3:DeleteBucket\",\n\t\t\t\t\"s3:PutBucketTagging\",\n\t\t\t\t\"s3:GetBucketTagging\",\n\t\t\t\t\"s3:PutBucketPublicAccessBlock\",\n\t\t\t\t\"s3:GetBucketPublicAccessBlock\",\n\t\t\t\t\"s3:PutEncryptionConfiguration\",\n\t\t\t\t\"s3:GetEncryptionConfiguration\",\n\t\t\t\t\"s3:PutLifecycleConfiguration\",\n\t\t\t\t\"s3:GetLifecycleConfiguration\",\n\t\t\t\t\"s3:GetBucketLocation\",\n\t\t\t\t\"s3:ListBucket\",\n\t\t\t\t\"s3:GetObject\",\n\t\t\t\t\"s3:PutObject\",\n\t\t\t\t\"s3:DeleteObject\",\n\t\t\t\t\"s3:ListBucketMultipartUploads\",\n\t\t\t\t\"s3:AbortMultipartUpload\",\n\t\t\t\t\"s3:ListMultipartUploadParts\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}",
                      "type": "string"
                    },
                    "ingressARN": {
                      "description": "The referenced role must have a trust relationship that allows it to be assumed via web identity.\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.\nExample:\n{\n\t\t\"Version\": \"2012-10-17\",\n\t\t\"Statement\": [\n\t\t\t{\n\t\t\t\t\"Effect\": \"Allow\",\n\t\t\t\t\"Principal\": {\n\t\t\t\t\t\"Federated\": \"{{ .ProviderARN }}\"\n\t\t\t\t},\n\t\t\t\t\t\"Action\": \"sts:AssumeRoleWithWebIdentity\",\n\t\t\t\t\"Condition\": {\n\t\t\t\t\t\"StringEquals\": {\n\t\t\t\t\t\t\"{{ .ProviderName }}:sub\": {{ .ServiceAccounts }}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n\nIngressARN is an ARN value referencing a role appropriate for the Ingress Operator.\n\n\nThe following is an example of a valid policy document:\n\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"elasticloadbalancing:DescribeLoadBalancers\",\n\t\t\t\t\"tag:GetResources\",\n\t\t\t\t\"route53:ListHostedZones\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t},\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"route53:ChangeResourceRecordSets\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:route53:::PUBLIC_ZONE_ID\",\n\t\t\t\t\"arn:aws:route53:::PRIVATE_ZONE_ID\"\n\t\t\t]\n\t\t}\n\t]\n}",
                      "type": "string"
                    },
                    "kubeCloudControllerARN": {
                      "description": "KubeCloudControllerARN is an ARN value referencing a role appropriate for the KCM/KCC.\n\n\nThe following is an example of a valid policy document:\n\n\n {\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n   {\n     \"Action\": [\n       \"ec2:DescribeInstances\",\n       \"ec2:DescribeImages\",\n       \"ec2:DescribeRegions\",\n       \"ec2:DescribeRouteTables\",\n       \"ec2:DescribeSecurityGroups\",\n       \"ec2:DescribeSubnets\",\n       \"ec2:DescribeVolumes\",\n       \"ec2:CreateSecurityGroup\",\n       \"ec2:CreateTags\",\n       \"ec2:CreateVolume\",\n       \"ec2:ModifyInstanceAttribute\",\n       \"ec2:ModifyVolume\",\n       \"ec2:AttachVolume\",\n       \"ec2:AuthorizeSecurityGroupIngress\",\n       \"ec2:CreateRoute\",\n       \"ec2:DeleteRoute\",\n       \"ec2:DeleteSecurityGroup\",\n       \"ec2:DeleteVolume\",\n       \"ec2:DetachVolume\",\n       \"ec2:RevokeSecurityGroupIngress\",\n       \"ec2:DescribeVpcs\",\n       \"elasticloadbalancing:AddTags\",\n       \"elasticloadbalancing:AttachLoadBalancerToSubnets\",\n       \"elasticloadbalancing:ApplySecurityGroupsToLoadBalancer\",\n       \"elasticloadbalancing:CreateLoadBalancer\",\n       \"elasticloadbalancing:CreateLoadBalancerPolicy\",\n       \"elasticloadbalancing:CreateLoadBalancerListeners\",\n       \"elasticloadbalancing:ConfigureHealthCheck\",\n       \"elasticloadbalancing:DeleteLoadBalancer\",\n       \"elasticloadbalancing:DeleteLoadBalancerListeners\",\n       \"elasticloadbalancing:DescribeLoadBalancers\",\n       \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n       \"elasticloadbalancing:DetachLoadBalancerFromSubnets\",\n       \"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\",\n       \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n       \"elasticloadbalancing:RegisterInstancesWithLoadBalancer\",\n       \"elasticloadbalancing:SetLoadBalancerPoliciesForBackendServer\",\n       \"elasticloadbalancing:AddTags\",\n       \"elasticloadbalancing:CreateListener\",\n       \"elasticloadbalancing:CreateTargetGroup\",\n       \"elasticloadbalancing:DeleteListener\",\n       \"elasticloadbalancing:DeleteTargetGroup\",\n       \"elasticloadbalancing:DescribeListeners\",\n       \"elasticloadbalancing:DescribeLoadBalancerPolicies\",\n       \"elasticloadbalancing:DescribeTargetGroups\",\n       \"elasticloadbalancing:DescribeTargetHealth\",\n       \"elasticloadbalancing:ModifyListener\",\n       \"elasticloadbalancing:ModifyTargetGroup\",\n       \"elasticloadbalancing:RegisterTargets\",\n       \"elasticloadbalancing:SetLoadBalancerPoliciesOfListener\",\n       \"iam:CreateServiceLinkedRole\",\n       \"kms:DescribeKey\"\n     ],\n     \"Resource\": [\n       \"*\"\n     ],\n     \"Effect\": \"Allow\"\n   }\n ]\n}",
                      "type": "string"
                    },
                    "networkARN": {
                      "description": "NetworkARN is an ARN value referencing a role appropriate for the Network Operator.\n\n\nThe following is an example of a valid policy document:\n\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:DescribeInstances\",\n       \"ec2:DescribeInstanceStatus\",\n       \"ec2:DescribeInstanceTypes\",\n       \"ec2:UnassignPrivateIpAddresses\",\n       \"ec2:AssignPrivateIpAddresses\",\n       \"ec2:UnassignIpv6Addresses\",\n       \"ec2:AssignIpv6Addresses\",\n       \"ec2:DescribeSubnets\",\n       \"ec2:DescribeNetworkInterfaces\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}",
                      "type": "string"
                    },
                    "nodePoolManagementARN": {
                      "description": "NodePoolManagementARN is an ARN value referencing a role appropriate for the CAPI Controller.\n\n\nThe following is an example of a valid policy document:\n\n\n{\n  \"Version\": \"2012-10-17\",\n \"Statement\": [\n   {\n     \"Action\": [\n       \"ec2:AllocateAddress\",\n       \"ec2:AssociateRouteTable\",\n       \"ec2:AttachInternetGateway\",\n       \"ec2:AuthorizeSecurityGroupIngress\",\n       \"ec2:CreateInternetGateway\",\n       \"ec2:CreateNatGateway\",\n       \"ec2:CreateRoute\",\n       \"ec2:CreateRouteTable\",\n       \"ec2:CreateSecurityGroup\",\n       \"ec2:CreateSubnet\",\n       \"ec2:CreateTags\",\n       \"ec2:DeleteInternetGateway\",\n       \"ec2:DeleteNatGateway\",\n       \"ec2:DeleteRouteTable\",\n       \"ec2:DeleteSecurityGroup\",\n       \"ec2:DeleteSubnet\",\n       \"ec2:DeleteTags\",\n       \"ec2:DescribeAccountAttributes\",\n       \"ec2:DescribeAddresses\",\n       \"ec2:DescribeAvailabilityZones\",\n       \"ec2:DescribeImages\",\n       \"ec2:DescribeInstances\",\n       \"ec2:DescribeInternetGateways\",\n       \"ec2:DescribeNatGateways\",\n       \"ec2:DescribeNetworkInterfaces\",\n       \"ec2:DescribeNetworkInterfaceAttribute\",\n       \"ec2:DescribeRouteTables\",\n       \"ec2:DescribeSecurityGroups\",\n       \"ec2:DescribeSubnets\",\n       \"ec2:DescribeVpcs\",\n       \"ec2:DescribeVpcAttribute\",\n       \"ec2:DescribeVolumes\",\n       \"ec2:DetachInternetGateway\",\n       \"ec2:DisassociateRouteTable\",\n       \"ec2:DisassociateAddress\",\n       \"ec2:ModifyInstanceAttribute\",\n       \"ec2:ModifyNetworkInterfaceAttribute\",\n       \"ec2:ModifySubnetAttribute\",\n       \"ec2:ReleaseAddress\",\n       \"ec2:RevokeSecurityGroupIngress\",\n       \"ec2:RunInstances\",\n       \"ec2:TerminateInstances\",\n       \"tag:GetResources\",\n       \"ec2:CreateLaunchTemplate\",\n       \"ec2:CreateLaunchTemplateVersion\",\n       \"ec2:DescribeLaunchTemplates\",\n       \"ec2:DescribeLaunchTemplateVersions\",\n       \"ec2:DeleteLaunchTemplate\",\n       \"ec2:DeleteLaunchTemplateVersions\"\n     ],\n     \"Resource\": [\n       \"*\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n   {\n     \"Condition\": {\n       \"StringLike\": {\n         \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n       }\n     },\n     \"Action\": [\n       \"iam:CreateServiceLinkedRole\"\n     ],\n     \"Resource\": [\n       \"arn:*:iam::*:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n   {\n     \"Action\": [\n       \"iam:PassRole\"\n     ],\n     \"Resource\": [\n       \"arn:*:iam::*:role/*-worker-role\"\n     ],\n     \"Effect\": \"Allow\"\n   },\n\t  {\n\t  \t\"Effect\": \"Allow\",\n\t  \t\"Action\": [\n\t  \t\t\"kms:Decrypt\",\n\t  \t\t\"kms:Encrypt\",\n\t  \t\t\"kms:GenerateDataKey\",\n\t  \t\t\"kms:GenerateDataKeyWithoutPlainText\",\n\t  \t\t\"kms:DescribeKey\"\n\t  \t],\n\t  \t\"Resource\": \"*\"\n\t  },\n\t  {\n\t  \t\"Effect\": \"Allow\",\n\t  \t\"Action\": [\n\t  \t\t\"kms:RevokeGrant\",\n\t  \t\t\"kms:CreateGrant\",\n\t  \t\t\"kms:ListGrants\"\n\t  \t],\n\t  \t\"Resource\": \"*\",\n\t  \t\"Condition\": {\n\t  \t\t\"Bool\": {\n\t  \t\t\t\"kms:GrantIsForAWSResource\": true\n\t  \t\t}\n\t  \t}\n\t  }\n ]\n}",
                      "type": "string"
                    },
                    "storageARN": {
                      "description": "StorageARN is an ARN value referencing a role appropriate for the Storage Operator.\n\n\nThe following is an example of a valid policy document:\n\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n\t\t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"ec2:AttachVolume\",\n\t\t\t\t\"ec2:CreateSnapshot\",\n\t\t\t\t\"ec2:CreateTags\",\n\t\t\t\t\"ec2:CreateVolume\",\n\t\t\t\t\"ec2:DeleteSnapshot\",\n\t\t\t\t\"ec2:DeleteTags\",\n\t\t\t\t\"ec2:DeleteVolume\",\n\t\t\t\t\"ec2:DescribeInstances\",\n\t\t\t\t\"ec2:DescribeSnapshots\",\n\t\t\t\t\"ec2:DescribeTags\",\n\t\t\t\t\"ec2:DescribeVolumes\",\n\t\t\t\t\"ec2:DescribeVolumesModifications\",\n\t\t\t\t\"ec2:DetachVolume\",\n\t\t\t\t\"ec2:ModifyVolume\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "serviceEndpoints": {
                  "description": "ServiceEndpoints specifies optional custom endpoints which will override\nthe default service endpoint of specific AWS Services.\n\n\nThere must be only one ServiceEndpoint for a given service name.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "description": "AWSServiceEndpoint stores the configuration for services to\noverride existing defaults of AWS Services.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "name",
                      "url"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name is the name of the AWS service.\nThis must be provided and cannot be empty.",
                        "type": "string"
                      },
                      "url": {
                        "description": "URL is fully qualified URI with scheme https, that overrides the default generated\nendpoint for a client.\nThis must be provided and cannot be empty.",
                        "type": "string",
                        "pattern": "^https://"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "azure": {
              "description": "Azure defines azure specific settings",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "credentials",
                "location",
                "machineIdentityID",
                "resourceGroup",
                "securityGroupID",
                "subnetID",
                "subscriptionID",
                "vnetID"
              ],
              "properties": {
                "cloud": {
                  "description": "The cloud environment identifier, valid values could be found here: https://github.com/Azure/go-autorest/blob/4c0e21ca2bbb3251fe7853e6f9df6397f53dd419/autorest/azure/environments.go#L33",
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "AzurePublicCloud",
                    "AzureUSGovernmentCloud",
                    "AzureChinaCloud",
                    "AzureGermanCloud"
                  ]
                },
                "credentials": {
                  "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "location": {
                  "type": "string"
                },
                "machineIdentityID": {
                  "type": "string"
                },
                "resourceGroup": {
                  "type": "string"
                },
                "securityGroupID": {
                  "type": "string"
                },
                "subnetID": {
                  "type": "string"
                },
                "subscriptionID": {
                  "type": "string"
                },
                "vnetID": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ibmcloud": {
              "description": "IBMCloud defines IBMCloud specific settings for components",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "providerType": {
                  "description": "ProviderType is a specific supported infrastructure provider within IBM Cloud.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "kubevirt": {
              "description": "KubeVirt defines KubeVirt specific settings for cluster components.",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "baseDomainPassthrough": {
                  "description": "BaseDomainPassthrough toggles whether or not an automatically\ngenerated base domain for the guest cluster should be used that\nis a subdomain of the management cluster's *.apps DNS.\n\n\nFor the KubeVirt platform, the basedomain can be autogenerated using\nthe *.apps domain of the management/infra hosting cluster\nThis makes the guest cluster's base domain a subdomain of the\nhypershift infra/mgmt cluster's base domain.\n\n\nExample:\n  Infra/Mgmt cluster's DNS\n    Base: example.com\n    Cluster: mgmt-cluster.example.com\n    Apps:    *.apps.mgmt-cluster.example.com\n  KubeVirt Guest cluster's DNS\n    Base: apps.mgmt-cluster.example.com\n    Cluster: guest.apps.mgmt-cluster.example.com\n    Apps: *.apps.guest.apps.mgmt-cluster.example.com\n\n\nThis is possible using OCP wildcard routes",
                  "type": [
                    "boolean",
                    "null"
                  ],
                  "x-kubernetes-validations": [
                    {
                      "message": "baseDomainPassthrough is immutable",
                      "rule": "self == oldSelf"
                    }
                  ]
                },
                "credentials": {
                  "description": "Credentials defines the client credentials used when creating KubeVirt virtual machines.\nDefining credentials is only necessary when the KubeVirt virtual machines are being placed\non a cluster separate from the one hosting the Hosted Control Plane components.\n\n\nThe default behavior when Credentials is not defined is for the KubeVirt VMs to be placed on\nthe same cluster and namespace as the Hosted Control Plane.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "infraNamespace"
                  ],
                  "properties": {
                    "infraKubeConfigSecret": {
                      "description": "InfraKubeConfigSecret is a reference to a secret that contains the kubeconfig for the external infra cluster\nthat will be used to host the KubeVirt virtual machines for this cluster.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "x-kubernetes-validations": [
                        {
                          "message": "infraKubeConfigSecret is immutable",
                          "rule": "self == oldSelf"
                        }
                      ],
                      "additionalProperties": false
                    },
                    "infraNamespace": {
                      "description": "InfraNamespace defines the namespace on the external infra cluster that is used to host the KubeVirt\nvirtual machines. This namespace must already exist before creating the HostedCluster and the kubeconfig\nreferenced in the InfraKubeConfigSecret must have access to manage the required resources within this\nnamespace.",
                      "type": "string",
                      "x-kubernetes-validations": [
                        {
                          "message": "infraNamespace is immutable",
                          "rule": "self == oldSelf"
                        }
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "generateID": {
                  "description": "GenerateID is used to uniquely apply a name suffix to resources associated with\nkubevirt infrastructure resources",
                  "type": [
                    "string",
                    "null"
                  ],
                  "maxLength": 11,
                  "x-kubernetes-validations": [
                    {
                      "message": "Kubevirt GenerateID is immutable once set",
                      "rule": "self == oldSelf"
                    }
                  ]
                },
                "storageDriver": {
                  "description": "StorageDriver defines how the KubeVirt CSI driver exposes StorageClasses on\nthe infra cluster (hosting the VMs) to the guest cluster.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "manual": {
                      "description": "Manual is used to explicilty define how the infra storageclasses are\nmapped to guest storageclasses",
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "storageClassMapping": {
                          "description": "StorageClassMapping maps StorageClasses on the infra cluster hosting\nthe KubeVirt VMs to StorageClasses that are made available within the\nGuest Cluster.\n\n\nNOTE: It is possible that not all capablities of an infra cluster's\nstorageclass will be present for the corresponding guest clusters storageclass.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "guestStorageClassName",
                              "infraStorageClassName"
                            ],
                            "properties": {
                              "group": {
                                "description": "Group contains which group this mapping belongs to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "guestStorageClassName": {
                                "description": "GuestStorageClassName is the name that the corresponding storageclass will\nbe called within the guest cluster",
                                "type": "string"
                              },
                              "infraStorageClassName": {
                                "description": "InfraStorageClassName is the name of the infra cluster storage class that\nwill be exposed to the guest.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-validations": [
                            {
                              "message": "storageClassMapping is immutable",
                              "rule": "self == oldSelf"
                            }
                          ]
                        },
                        "volumeSnapshotClassMapping": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "guestVolumeSnapshotClassName",
                              "infraVolumeSnapshotClassName"
                            ],
                            "properties": {
                              "group": {
                                "description": "Group contains which group this mapping belongs to.",
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "guestVolumeSnapshotClassName": {
                                "description": "GuestVolumeSnapshotClassName is the name that the corresponding volumeSnapshotClass will\nbe called within the guest cluster",
                                "type": "string"
                              },
                              "infraVolumeSnapshotClassName": {
                                "description": "InfraStorageClassName is the name of the infra cluster volume snapshot class that\nwill be exposed to the guest.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-validations": [
                            {
                              "message": "volumeSnapshotClassMapping is immutable",
                              "rule": "self == oldSelf"
                            }
                          ]
                        }
                      },
                      "x-kubernetes-validations": [
                        {
                          "message": "storageDriver.Manual is immutable",
                          "rule": "self == oldSelf"
                        }
                      ],
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "Type represents the type of kubevirt csi driver configuration to use",
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "None",
                        "Default",
                        "Manual"
                      ],
                      "x-kubernetes-validations": [
                        {
                          "message": "storageDriver.Type is immutable",
                          "rule": "self == oldSelf"
                        }
                      ]
                    }
                  },
                  "x-kubernetes-validations": [
                    {
                      "message": "storageDriver is immutable",
                      "rule": "self == oldSelf"
                    }
                  ],
                  "additionalProperties": false
                }
              },
              "x-kubernetes-validations": [
                {
                  "message": "Kubevirt GenerateID is required once set",
                  "rule": "!has(oldSelf.generateID) || has(self.generateID)"
                }
              ],
              "additionalProperties": false
            },
            "powervs": {
              "description": "PowerVS specifies configuration for clusters running on IBMCloud Power VS Service.\nThis field is immutable. Once set, It can't be changed.",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "accountID",
                "cisInstanceCRN",
                "imageRegistryOperatorCloudCreds",
                "ingressOperatorCloudCreds",
                "kubeCloudControllerCreds",
                "nodePoolManagementCreds",
                "region",
                "resourceGroup",
                "serviceInstanceID",
                "storageOperatorCloudCreds",
                "subnet",
                "vpc",
                "zone"
              ],
              "properties": {
                "accountID": {
                  "description": "AccountID is the IBMCloud account id.\nThis field is immutable. Once set, It can't be changed.",
                  "type": "string"
                },
                "cisInstanceCRN": {
                  "description": "CISInstanceCRN is the IBMCloud CIS Service Instance's Cloud Resource Name\nThis field is immutable. Once set, It can't be changed.",
                  "type": "string",
                  "pattern": "^crn:"
                },
                "imageRegistryOperatorCloudCreds": {
                  "description": "ImageRegistryOperatorCloudCreds is a reference to a secret containing ibm cloud\ncredentials for image registry operator to get authenticated with ibm cloud.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "ingressOperatorCloudCreds": {
                  "description": "IngressOperatorCloudCreds is a reference to a secret containing ibm cloud\ncredentials for ingress operator to get authenticated with ibm cloud.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "kubeCloudControllerCreds": {
                  "description": "KubeCloudControllerCreds is a reference to a secret containing cloud\ncredentials with permissions matching the cloud controller policy.\nThis field is immutable. Once set, It can't be changed.\n\n\nTODO(dan): document the \"cloud controller policy\"",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "nodePoolManagementCreds": {
                  "description": "NodePoolManagementCreds is a reference to a secret containing cloud\ncredentials with permissions matching the node pool management policy.\nThis field is immutable. Once set, It can't be changed.\n\n\nTODO(dan): document the \"node pool management policy\"",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "region": {
                  "description": "Region is the IBMCloud region in which the cluster resides. This configures the\nOCP control plane cloud integrations, and is used by NodePool to resolve\nthe correct boot image for a given release.\nThis field is immutable. Once set, It can't be changed.",
                  "type": "string"
                },
                "resourceGroup": {
                  "description": "ResourceGroup is the IBMCloud Resource Group in which the cluster resides.\nThis field is immutable. Once set, It can't be changed.",
                  "type": "string"
                },
                "serviceInstanceID": {
                  "description": "ServiceInstance is the reference to the Power VS service on which the server instance(VM) will be created.\nPower VS service is a container for all Power VS instances at a specific geographic region.\nserviceInstance can be created via IBM Cloud catalog or CLI.\nServiceInstanceID is the unique identifier that can be obtained from IBM Cloud UI or IBM Cloud cli.\n\n\nMore detail about Power VS service instance.\nhttps://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server\n\n\nThis field is immutable. Once set, It can't be changed.",
                  "type": "string"
                },
                "storageOperatorCloudCreds": {
                  "description": "StorageOperatorCloudCreds is a reference to a secret containing ibm cloud\ncredentials for storage operator to get authenticated with ibm cloud.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "subnet": {
                  "description": "Subnet is the subnet to use for control plane cloud resources.\nThis field is immutable. Once set, It can't be changed.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "ID of resource",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "name": {
                      "description": "Name of resource",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "vpc": {
                  "description": "VPC specifies IBM Cloud PowerVS Load Balancing configuration for the control\nplane.\nThis field is immutable. Once set, It can't be changed.",
                  "type": "object",
                  "required": [
                    "name",
                    "region"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name for VPC to used for all the service load balancer.\nThis field is immutable. Once set, It can't be changed.",
                      "type": "string"
                    },
                    "region": {
                      "description": "Region is the IBMCloud region in which VPC gets created, this VPC used for all the ingress traffic\ninto the OCP cluster.\nThis field is immutable. Once set, It can't be changed.",
                      "type": "string"
                    },
                    "subnet": {
                      "description": "Subnet is the subnet to use for load balancer.\nThis field is immutable. Once set, It can't be changed.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "zone": {
                      "description": "Zone is the availability zone where load balancer cloud resources are\ncreated.\nThis field is immutable. Once set, It can't be changed.",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "zone": {
                  "description": "Zone is the availability zone where control plane cloud resources are\ncreated.\nThis field is immutable. Once set, It can't be changed.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "Type is the type of infrastructure provider for the cluster.",
              "type": "string",
              "enum": [
                "AWS",
                "None",
                "IBMCloud",
                "Agent",
                "KubeVirt",
                "Azure",
                "PowerVS"
              ]
            }
          },
          "additionalProperties": false
        },
        "podCIDR": {
          "description": "deprecated\nuse networking.ClusterNetwork",
          "type": [
            "string",
            "null"
          ]
        },
        "pullSecret": {
          "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "releaseImage": {
          "description": "ReleaseImage is the release image applied to the hosted control plane.",
          "type": "string"
        },
        "secretEncryption": {
          "description": "SecretEncryption contains metadata about the kubernetes secret encryption strategy being used for the\ncluster when applicable.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "type"
          ],
          "properties": {
            "aescbc": {
              "description": "AESCBC defines metadata about the AESCBC secret encryption strategy",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "activeKey"
              ],
              "properties": {
                "activeKey": {
                  "description": "ActiveKey defines the active key used to encrypt new secrets",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                },
                "backupKey": {
                  "description": "BackupKey defines the old key during the rotation process so previously created\nsecrets can continue to be decrypted until they are all re-encrypted with the active key.",
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "x-kubernetes-map-type": "atomic",
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "kms": {
              "description": "KMS defines metadata about the kms secret encryption strategy",
              "type": [
                "object",
                "null"
              ],
              "required": [
                "provider"
              ],
              "properties": {
                "aws": {
                  "description": "AWS defines metadata about the configuration of the AWS KMS Secret Encryption provider",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "activeKey",
                    "auth",
                    "region"
                  ],
                  "properties": {
                    "activeKey": {
                      "description": "ActiveKey defines the active key used to encrypt new secrets",
                      "type": "object",
                      "required": [
                        "arn"
                      ],
                      "properties": {
                        "arn": {
                          "description": "ARN is the Amazon Resource Name for the encryption key",
                          "type": "string",
                          "pattern": "^arn:"
                        }
                      },
                      "additionalProperties": false
                    },
                    "auth": {
                      "description": "Auth defines metadata about the management of credentials used to interact with AWS KMS",
                      "type": "object",
                      "required": [
                        "awsKms",
                        "credentials"
                      ],
                      "properties": {
                        "awsKms": {
                          "description": "The referenced role must have a trust relationship that allows it to be assumed via web identity.\nhttps://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc.html.\nExample:\n{\n\t\t\"Version\": \"2012-10-17\",\n\t\t\"Statement\": [\n\t\t\t{\n\t\t\t\t\"Effect\": \"Allow\",\n\t\t\t\t\"Principal\": {\n\t\t\t\t\t\"Federated\": \"{{ .ProviderARN }}\"\n\t\t\t\t},\n\t\t\t\t\t\"Action\": \"sts:AssumeRoleWithWebIdentity\",\n\t\t\t\t\"Condition\": {\n\t\t\t\t\t\"StringEquals\": {\n\t\t\t\t\t\t\"{{ .ProviderName }}:sub\": {{ .ServiceAccounts }}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n\n\nAWSKMSARN is an ARN value referencing a role appropriate for managing the auth via the AWS KMS key.\n\n\nThe following is an example of a valid policy document:\n\n\n{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [\n   \t{\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"kms:Encrypt\",\n\t\t\t\t\"kms:Decrypt\",\n\t\t\t\t\"kms:ReEncrypt*\",\n\t\t\t\t\"kms:GenerateDataKey*\",\n\t\t\t\t\"kms:DescribeKey\"\n\t\t\t],\n\t\t\t\"Resource\": %q\n\t\t}\n\t]\n}",
                          "type": "string"
                        },
                        "credentials": {
                          "description": "Deprecated\nThis field is deprecated and will be removed in a future release. Use AWSKMSRoleARN instead.\nCredentials contains the name of the secret that holds the aws credentials that can be used\nto make the necessary KMS calls. It should at key AWSCredentialsFileSecretKey contain the\naws credentials file that can be used to configure AWS SDKs",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "x-kubernetes-map-type": "atomic",
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "backupKey": {
                      "description": "BackupKey defines the old key during the rotation process so previously created\nsecrets can continue to be decrypted until they are all re-encrypted with the active key.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "arn"
                      ],
                      "properties": {
                        "arn": {
                          "description": "ARN is the Amazon Resource Name for the encryption key",
                          "type": "string",
                          "pattern": "^arn:"
                        }
                      },
                      "additionalProperties": false
                    },
                    "region": {
                      "description": "Region contains the AWS region",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "azure": {
                  "description": "Azure defines metadata about the configuration of the Azure KMS Secret Encryption provider using Azure key vault",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "activeKey"
                  ],
                  "properties": {
                    "activeKey": {
                      "description": "ActiveKey defines the active key used to encrypt new secrets",
                      "type": "object",
                      "required": [
                        "keyName",
                        "keyVaultName",
                        "keyVersion"
                      ],
                      "properties": {
                        "keyName": {
                          "description": "KeyName is the name of the keyvault key used for encrypt/decrypt",
                          "type": "string"
                        },
                        "keyVaultName": {
                          "description": "KeyVaultName is the name of the keyvault. Must match criteria specified at https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name\nYour Microsoft Entra application used to create the cluster must be authorized to access this keyvault, e.g using the AzureCLI:\n`az keyvault set-policy -n $KEYVAULT_NAME --key-permissions decrypt encrypt --spn <YOUR APPLICATION CLIENT ID>`",
                          "type": "string"
                        },
                        "keyVersion": {
                          "description": "KeyVersion contains the version of the key to use",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "backupKey": {
                      "description": "BackupKey defines the old key during the rotation process so previously created\nsecrets can continue to be decrypted until they are all re-encrypted with the active key.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "keyName",
                        "keyVaultName",
                        "keyVersion"
                      ],
                      "properties": {
                        "keyName": {
                          "description": "KeyName is the name of the keyvault key used for encrypt/decrypt",
                          "type": "string"
                        },
                        "keyVaultName": {
                          "description": "KeyVaultName is the name of the keyvault. Must match criteria specified at https://docs.microsoft.com/en-us/azure/key-vault/general/about-keys-secrets-certificates#vault-name-and-object-name\nYour Microsoft Entra application used to create the cluster must be authorized to access this keyvault, e.g using the AzureCLI:\n`az keyvault set-policy -n $KEYVAULT_NAME --key-permissions decrypt encrypt --spn <YOUR APPLICATION CLIENT ID>`",
                          "type": "string"
                        },
                        "keyVersion": {
                          "description": "KeyVersion contains the version of the key to use",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "ibmcloud": {
                  "description": "IBMCloud defines metadata for the IBM Cloud KMS encryption strategy",
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "auth",
                    "keyList",
                    "region"
                  ],
                  "properties": {
                    "auth": {
                      "description": "Auth defines metadata for how authentication is done with IBM Cloud KMS",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "managed": {
                          "description": "Managed defines metadata around the service to service authentication strategy for the IBM Cloud\nKMS system (all provider managed).",
                          "type": [
                            "object",
                            "null"
                          ]
                        },
                        "type": {
                          "description": "Type defines the IBM Cloud KMS authentication strategy",
                          "type": "string",
                          "enum": [
                            "Managed",
                            "Unmanaged"
                          ]
                        },
                        "unmanaged": {
                          "description": "Unmanaged defines the auth metadata the customer provides to interact with IBM Cloud KMS",
                          "type": [
                            "object",
                            "null"
                          ],
                          "required": [
                            "credentials"
                          ],
                          "properties": {
                            "credentials": {
                              "description": "Credentials should reference a secret with a key field of IBMCloudIAMAPIKeySecretKey that contains a apikey to\ncall IBM Cloud KMS APIs",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              },
                              "x-kubernetes-map-type": "atomic",
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "keyList": {
                      "description": "KeyList defines the list of keys used for data encryption",
                      "type": "array",
                      "items": {
                        "description": "IBMCloudKMSKeyEntry defines metadata for an IBM Cloud KMS encryption key",
                        "type": [
                          "object",
                          "null"
                        ],
                        "required": [
                          "correlationID",
                          "crkID",
                          "instanceID",
                          "keyVersion",
                          "url"
                        ],
                        "properties": {
                          "correlationID": {
                            "description": "CorrelationID is an identifier used to track all api call usage from hypershift",
                            "type": "string"
                          },
                          "crkID": {
                            "description": "CRKID is the customer rook key id",
                            "type": "string"
                          },
                          "instanceID": {
                            "description": "InstanceID is the id for the key protect instance",
                            "type": "string"
                          },
                          "keyVersion": {
                            "description": "KeyVersion is a unique number associated with the key. The number increments whenever a new\nkey is enabled for data encryption.",
                            "type": "integer"
                          },
                          "url": {
                            "description": "URL is the url to call key protect apis over",
                            "type": "string",
                            "pattern": "^https://"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "region": {
                      "description": "Region is the IBM Cloud region",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "provider": {
                  "description": "Provider defines the KMS provider",
                  "type": "string",
                  "enum": [
                    "IBMCloud",
                    "AWS",
                    "Azure"
                  ]
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "Type defines the type of kube secret encryption being used",
              "type": "string",
              "enum": [
                "kms",
                "aescbc"
              ]
            }
          },
          "additionalProperties": false
        },
        "serviceAccountSigningKey": {
          "description": "ServiceAccountSigningKey is a reference to a secret containing the private key\nused by the service account token issuer. The secret is expected to contain\na single key named \"key\". If not specified, a service account signing key will\nbe generated automatically for the cluster.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "serviceCIDR": {
          "description": "deprecated\nuse networking.ServiceNetwork",
          "type": [
            "string",
            "null"
          ]
        },
        "services": {
          "description": "Services defines metadata about how control plane services are published\nin the management cluster.",
          "type": "array",
          "items": {
            "description": "ServicePublishingStrategyMapping specifies how individual control plane\nservices are published from the hosting cluster of a control plane.",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "service",
              "servicePublishingStrategy"
            ],
            "properties": {
              "service": {
                "description": "Service identifies the type of service being published.",
                "type": "string",
                "enum": [
                  "APIServer",
                  "OAuthServer",
                  "OIDC",
                  "Konnectivity",
                  "Ignition",
                  "OVNSbDb"
                ]
              },
              "servicePublishingStrategy": {
                "description": "ServicePublishingStrategy specifies how to publish Service.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "loadBalancer": {
                    "description": "LoadBalancer configures exposing a service using a LoadBalancer.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "hostname": {
                        "description": "Hostname is the name of the DNS record that will be created pointing to the LoadBalancer.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "nodePort": {
                    "description": "NodePort configures exposing a service using a NodePort.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "required": [
                      "address"
                    ],
                    "properties": {
                      "address": {
                        "description": "Address is the host/ip that the NodePort service is exposed over.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Port is the port of the NodePort service. If <=0, the port is dynamically\nassigned when the service is created.",
                        "type": [
                          "integer",
                          "null"
                        ],
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "route": {
                    "description": "Route configures exposing a service using a Route.",
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "hostname": {
                        "description": "Hostname is the name of the DNS record that will be created pointing to the Route.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "Type is the publishing strategy used for the service.",
                    "type": "string",
                    "enum": [
                      "LoadBalancer",
                      "NodePort",
                      "Route",
                      "None",
                      "S3"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "sshKey": {
          "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "updateService": {
          "description": "updateService may be used to specify the preferred upstream update service.\nBy default it will use the appropriate update service for the cluster and region.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "HostedControlPlaneStatus defines the observed state of HostedControlPlane",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "initialized",
        "ready"
      ],
      "properties": {
        "conditions": {
          "description": "Condition contains details for one aspect of the current state of the HostedControlPlane.\nCurrent condition types are: \"Available\"",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": [
              "object",
              "null"
            ],
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": [
                  "integer",
                  "null"
                ],
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "controlPlaneEndpoint": {
          "description": "ControlPlaneEndpoint contains the endpoint information by which\nexternal clients can access the control plane.  This is populated\nafter the infrastructure is ready.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "host",
            "port"
          ],
          "properties": {
            "host": {
              "description": "Host is the hostname on which the API server is serving.",
              "type": "string"
            },
            "port": {
              "description": "Port is the port on which the API server is serving.",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "externalManagedControlPlane": {
          "description": "ExternalManagedControlPlane indicates to cluster-api that the control plane\nis managed by an external service.\nhttps://github.com/kubernetes-sigs/cluster-api/blob/65e5385bffd71bf4aad3cf34a537f11b217c7fab/controllers/machine_controller.go#L468",
          "type": [
            "boolean",
            "null"
          ]
        },
        "initialized": {
          "description": "Initialized denotes whether or not the control plane has\nprovided a kubeadm-config.\nOnce this condition is marked true, its value is never changed. See the Ready condition for an indication of\nthe current readiness of the cluster's control plane.\nThis satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L238-L252",
          "type": "boolean"
        },
        "kubeConfig": {
          "description": "KubeConfig is a reference to the secret containing the default kubeconfig\nfor this control plane.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "kubeadminPassword": {
          "description": "KubeadminPassword is a reference to the secret containing the initial kubeadmin password\nfor the guest cluster.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "x-kubernetes-map-type": "atomic",
          "additionalProperties": false
        },
        "lastReleaseImageTransitionTime": {
          "description": "lastReleaseImageTransitionTime is the time of the last update to the current\nreleaseImage property.\n\n\nDeprecated: Use versionStatus.history[0].startedTime instead.",
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "nodeCount": {
          "description": "NodeCount tracks the number of nodes in the HostedControlPlane.",
          "type": [
            "integer",
            "null"
          ]
        },
        "oauthCallbackURLTemplate": {
          "description": "OAuthCallbackURLTemplate contains a template for the URL to use as a callback\nfor identity providers. The [identity-provider-name] placeholder must be replaced\nwith the name of an identity provider defined on the HostedCluster.\nThis is populated after the infrastructure is ready.",
          "type": [
            "string",
            "null"
          ]
        },
        "platform": {
          "description": "Platform contains platform-specific status of the HostedCluster",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "aws": {
              "description": "AWSPlatformStatus contains status specific to the AWS platform",
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "defaultWorkerSecurityGroupID": {
                  "description": "DefaultWorkerSecurityGroupID is the ID of a security group created by\nthe control plane operator. It is always added to worker machines in\naddition to any security groups specified in the NodePool.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "ready": {
          "description": "Ready denotes that the HostedControlPlane API Server is ready to\nreceive requests\nThis satisfies CAPI contract https://github.com/kubernetes-sigs/cluster-api/blob/cd3a694deac89d5ebeb888307deaa61487207aa0/controllers/cluster_controller_phases.go#L226-L230",
          "type": "boolean"
        },
        "releaseImage": {
          "description": "ReleaseImage is the release image applied to the hosted control plane.\n\n\nDeprecated: Use versionStatus.desired.image instead.",
          "type": [
            "string",
            "null"
          ]
        },
        "version": {
          "description": "Version is the semantic version of the release applied by\nthe hosted control plane operator\n\n\nDeprecated: Use versionStatus.desired.version instead.",
          "type": [
            "string",
            "null"
          ]
        },
        "versionStatus": {
          "description": "versionStatus is the status of the release version applied by the\nhosted control plane operator.",
          "type": [
            "object",
            "null"
          ],
          "required": [
            "desired",
            "observedGeneration"
          ],
          "properties": {
            "availableUpdates": {
              "description": "availableUpdates contains updates recommended for this\ncluster. Updates which appear in conditionalUpdates but not in\navailableUpdates may expose this cluster to known issues. This list\nmay be empty if no updates are recommended, if the update service\nis unavailable, or if an invalid channel has been specified."
            },
            "conditionalUpdates": {
              "description": "conditionalUpdates contains the list of updates that may be\nrecommended for this cluster if it meets specific required\nconditions. Consumers interested in the set of updates that are\nactually recommended for this cluster should use\navailableUpdates. This list may be empty if no updates are\nrecommended, if the update service is unavailable, or if an empty\nor invalid channel has been specified.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "ConditionalUpdate represents an update which is recommended to some\nclusters on the version the current cluster is reconciling, but which\nmay not be recommended for the current cluster.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "release",
                  "risks"
                ],
                "properties": {
                  "conditions": {
                    "description": "conditions represents the observations of the conditional update's\ncurrent status. Known types are:\n* Recommended, for whether the update is recommended for the current cluster.",
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "lastTransitionTime",
                        "message",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                          "type": "string",
                          "maxLength": 32768
                        },
                        "observedGeneration": {
                          "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int64",
                          "minimum": 0
                        },
                        "reason": {
                          "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                          "type": "string",
                          "maxLength": 1024,
                          "minLength": 1,
                          "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                        },
                        "status": {
                          "description": "status of the condition, one of True, False, Unknown.",
                          "type": "string",
                          "enum": [
                            "True",
                            "False",
                            "Unknown"
                          ]
                        },
                        "type": {
                          "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                          "type": "string",
                          "maxLength": 316,
                          "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "release": {
                    "description": "release is the target of the update.",
                    "type": "object",
                    "properties": {
                      "channels": {
                        "description": "channels is the set of Cincinnati channels to which the release\ncurrently belongs.",
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "image": {
                        "description": "image is a container image location that contains the update. When this\nfield is part of spec, image is optional if version is specified and the\navailableUpdates field contains a matching version.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "url": {
                        "description": "url contains information about this release. This URL is set by\nthe 'url' metadata property on a release or the metadata returned by\nthe update API and should be displayed as a link in user\ninterfaces. The URL field may not be set for test or nightly\nreleases.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "version": {
                        "description": "version is a semantic version identifying the update version. When this\nfield is part of spec, version is optional if image is specified.",
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "risks": {
                    "description": "risks represents the range of issues associated with\nupdating to the target release. The cluster-version\noperator will evaluate all entries, and only recommend the\nupdate if there is at least one entry and all entries\nrecommend the update.",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "description": "ConditionalUpdateRisk represents a reason and cluster-state\nfor not recommending a conditional update.",
                      "type": [
                        "object",
                        "null"
                      ],
                      "required": [
                        "matchingRules",
                        "message",
                        "name",
                        "url"
                      ],
                      "properties": {
                        "matchingRules": {
                          "description": "matchingRules is a slice of conditions for deciding which\nclusters match the risk and which do not. The slice is\nordered by decreasing precedence. The cluster-version\noperator will walk the slice in order, and stop after the\nfirst it can successfully evaluate. If no condition can be\nsuccessfully evaluated, the update will not be recommended.",
                          "type": "array",
                          "minItems": 1,
                          "items": {
                            "description": "ClusterCondition is a union of typed cluster conditions.  The 'type'\nproperty determines which of the type-specific properties are relevant.\nWhen evaluated on a cluster, the condition may match, not match, or\nfail to evaluate.",
                            "type": [
                              "object",
                              "null"
                            ],
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "promql": {
                                "description": "promQL represents a cluster condition based on PromQL.",
                                "type": [
                                  "object",
                                  "null"
                                ],
                                "required": [
                                  "promql"
                                ],
                                "properties": {
                                  "promql": {
                                    "description": "PromQL is a PromQL query classifying clusters. This query\nquery should return a 1 in the match case and a 0 in the\ndoes-not-match case. Queries which return no time\nseries, or which return values besides 0 or 1, are\nevaluation failures.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "type": {
                                "description": "type represents the cluster-condition type. This defines\nthe members and semantics of any additional properties.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "PromQL"
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "message": {
                          "description": "message provides additional information about the risk of\nupdating, in the event that matchingRules match the cluster\nstate. This is only to be consumed by humans. It may\ncontain Line Feed characters (U+000A), which should be\nrendered as new lines.",
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "description": "name is the CamelCase reason for not recommending a\nconditional update, in the event that matchingRules match the\ncluster state.",
                          "type": "string",
                          "minLength": 1
                        },
                        "url": {
                          "description": "url contains information about this risk.",
                          "type": "string",
                          "format": "uri",
                          "minLength": 1
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-map-keys": [
                      "name"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "desired": {
              "description": "desired is the version that the cluster is reconciling towards.\nIf the cluster is not yet fully initialized desired will be set\nwith the information available, which may be an image or a tag.",
              "type": "object",
              "properties": {
                "channels": {
                  "description": "channels is the set of Cincinnati channels to which the release\ncurrently belongs.",
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "x-kubernetes-list-type": "set"
                },
                "image": {
                  "description": "image is a container image location that contains the update. When this\nfield is part of spec, image is optional if version is specified and the\navailableUpdates field contains a matching version.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "url": {
                  "description": "url contains information about this release. This URL is set by\nthe 'url' metadata property on a release or the metadata returned by\nthe update API and should be displayed as a link in user\ninterfaces. The URL field may not be set for test or nightly\nreleases.",
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "version": {
                  "description": "version is a semantic version identifying the update version. When this\nfield is part of spec, version is optional if image is specified.",
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            },
            "history": {
              "description": "history contains a list of the most recent versions applied to the cluster.\nThis value may be empty during cluster startup, and then will be updated\nwhen a new update is being applied. The newest update is first in the\nlist and it is ordered by recency. Updates in the history have state\nCompleted if the rollout completed - if an update was failing or halfway\napplied the state will be Partial. Only a limited amount of update history\nis preserved.",
              "type": [
                "array",
                "null"
              ],
              "items": {
                "description": "UpdateHistory is a single attempted update to the cluster.",
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "image",
                  "startedTime",
                  "state",
                  "verified"
                ],
                "properties": {
                  "acceptedRisks": {
                    "description": "acceptedRisks records risks which were accepted to initiate the update.\nFor example, it may menition an Upgradeable=False or missing signature\nthat was overriden via desiredUpdate.force, or an update that was\ninitiated despite not being in the availableUpdates set of recommended\nupdate targets.",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "completionTime": {
                    "description": "completionTime, if set, is when the update was fully applied. The update\nthat is currently being applied will have a null completion time.\nCompletion time will always be set for entries that are not the current\nupdate (usually to the started time of the next update).",
                    "format": "date-time"
                  },
                  "image": {
                    "description": "image is a container image location that contains the update. This value\nis always populated.",
                    "type": "string"
                  },
                  "startedTime": {
                    "description": "startedTime is the time at which the update was started.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "state": {
                    "description": "state reflects whether the update was fully applied. The Partial state\nindicates the update is not fully applied, while the Completed state\nindicates the update was successfully rolled out at least once (all\nparts of the update successfully applied).",
                    "type": "string"
                  },
                  "verified": {
                    "description": "verified indicates whether the provided update was properly verified\nbefore it was installed. If this is false the cluster may not be trusted.\nVerified does not cover upgradeable checks that depend on the cluster\nstate at the time when the update target was accepted.",
                    "type": "boolean"
                  },
                  "version": {
                    "description": "version is a semantic version identifying the update version. If the\nrequested image does not define a version, or if a failure occurs\nretrieving the image, this value may be empty.",
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "observedGeneration": {
              "description": "observedGeneration reports which version of the spec is being synced.\nIf this value is not equal to metadata.generation, then the desired\nand conditions fields may represent a previous version.",
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-group-version-kind": [
    {
      "group": "hypershift.openshift.io",
      "kind": "HostedControlPlane",
      "version": "v1alpha1"
    }
  ],
  "additionalProperties": false,
  "$schema": "http://json-schema.org/schema#"
}